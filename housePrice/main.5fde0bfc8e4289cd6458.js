(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(e,t,n){e.exports=n("zUnb")},1:function(e,t){},2:function(e,t){},3:function(e,t){},"34t7":function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},4:function(e,t){},5:function(e,t){},"5vwH":function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n=s[a]=(n^=n>>>15)^(e^=e>>>12),t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=0==(n=o[127&a]^=r+(i=i+1640531527|0))?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},6:function(e,t){},"9/Hw":function(e,t,n){var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,y(a.random(),s),e.exports){e.exports=p;try{i=n(3)}catch(x){}}else void 0===(r=(function(){return p}).call(t,n,t,e))||(e.exports=r)}([],Math)},B9Yq:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},EhIR:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})},PkQR:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],r[s]=n^=(e^=e<<13)^e<<9,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},YSVl:function(e,t,n){var r=n("EhIR"),s=n("uDiL"),a=n("pJ6O"),i=n("yuCN"),o=n("euyF"),l=n("ie1u"),u=n("pJ3+");u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},YWYm:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},YuTi:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},euyF:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n=s[a]=(n^=n>>>15)^(e^=e>>>12),t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=0==(n=o[127&a]^=r+(i=i+1640531527|0))?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"f+t/":function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},ie1u:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},oIJX:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},pDBr:function(e,t,n){var r=n("YWYm"),s=n("f+t/"),a=n("34t7"),i=n("PkQR"),o=n("5vwH"),l=n("oIJX"),u=n("9/Hw");u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},"pJ3+":function(e,t,n){var r;!function(s,a){var i,o=(0,eval)("this"),l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,y(a.random(),s),e.exports){e.exports=p;try{i=n(4)}catch(x){}}else void 0===(r=(function(){return p}).call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},uDiL:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},yuCN:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],r[s]=n^=(e^=e<<13)^e<<9,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},zUnb:function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"shuffle",function(){return Il}),n.d(r,"shuffleCombo",function(){return Nl}),n.d(r,"clamp",function(){return Cl}),n.d(r,"nearestLargerEven",function(){return Sl}),n.d(r,"sum",function(){return Tl}),n.d(r,"randUniform",function(){return _l}),n.d(r,"distSquared",function(){return $l}),n.d(r,"assert",function(){return El}),n.d(r,"assertShapesMatch",function(){return Al}),n.d(r,"assertNonNull",function(){return Rl}),n.d(r,"flatten",function(){return Fl}),n.d(r,"sizeFromShape",function(){return Dl}),n.d(r,"isScalarShape",function(){return Ol}),n.d(r,"arraysEqual",function(){return Ml}),n.d(r,"isInt",function(){return Ll}),n.d(r,"tanh",function(){return zl}),n.d(r,"sizeToSquarishShape",function(){return Pl}),n.d(r,"createShuffledIndices",function(){return Bl}),n.d(r,"rightPad",function(){return Vl}),n.d(r,"repeatedTry",function(){return Wl}),n.d(r,"inferFromImplicitShape",function(){return Ul}),n.d(r,"parseAxisParam",function(){return Hl}),n.d(r,"squeezeShape",function(){return Gl}),n.d(r,"getTypedArrayFromDType",function(){return jl}),n.d(r,"getArrayFromDType",function(){return ql}),n.d(r,"checkConversionForErrors",function(){return Kl}),n.d(r,"isValidDtype",function(){return Xl}),n.d(r,"hasEncodingLoss",function(){return Zl}),n.d(r,"isTypedArray",function(){return Yl}),n.d(r,"bytesPerElement",function(){return Jl}),n.d(r,"bytesFromStringArray",function(){return Ql}),n.d(r,"isString",function(){return eu}),n.d(r,"isBoolean",function(){return tu}),n.d(r,"isNumber",function(){return nu}),n.d(r,"inferDtype",function(){return ru}),n.d(r,"isFunction",function(){return su}),n.d(r,"nearestDivisor",function(){return au}),n.d(r,"computeStrides",function(){return iu}),n.d(r,"toNestedArray",function(){return lu}),n.d(r,"makeOnesTypedArray",function(){return uu}),n.d(r,"makeZerosTypedArray",function(){return cu}),n.d(r,"makeZerosNestedTypedArray",function(){return hu}),n.d(r,"assertNonNegativeIntegerDimensions",function(){return du}),n.d(r,"locToIndex",function(){return pu}),n.d(r,"indexToLoc",function(){return fu}),n.d(r,"isPromise",function(){return mu}),n.d(r,"createScalarValue",function(){return kd}),n.d(r,"toTypedArray",function(){return Id}),n.d(r,"now",function(){return Nd}),n.d(r,"fetch",function(){return Cd}),n.d(r,"encodeString",function(){return Sd}),n.d(r,"decodeString",function(){return Td});var s={};n.r(s),n.d(s,"makeTypesMatch",function(){return Yd}),n.d(s,"assertTypesMatch",function(){return Jd}),n.d(s,"isTensorInList",function(){return Qd}),n.d(s,"getTensorsInContainer",function(){return ep});var a={};n.r(a),n.d(a,"isMobile",function(){return lp}),n.d(a,"isBrowser",function(){return up});var i={};n.r(i),n.d(i,"copyModel",function(){return lf}),n.d(i,"listModels",function(){return af}),n.d(i,"moveModel",function(){return uf}),n.d(i,"removeModel",function(){return of}),n.d(i,"browserFiles",function(){return bf}),n.d(i,"browserHTTPRequest",function(){return Tf}),n.d(i,"concatenateArrayBuffers",function(){return Sp}),n.d(i,"decodeWeights",function(){return kp}),n.d(i,"encodeWeights",function(){return wp}),n.d(i,"fromMemory",function(){return Ef}),n.d(i,"getLoadHandlers",function(){return Dp}),n.d(i,"getModelArtifactsInfoForJSON",function(){return _p}),n.d(i,"getSaveHandlers",function(){return Fp}),n.d(i,"http",function(){return Sf}),n.d(i,"isHTTPScheme",function(){return Nf}),n.d(i,"loadWeights",function(){return wf}),n.d(i,"registerLoadRouter",function(){return Rp}),n.d(i,"registerSaveRouter",function(){return Ap}),n.d(i,"weightsLoaderFactory",function(){return kf}),n.d(i,"withSaveHandler",function(){return Af});var o={};n.r(o),n.d(o,"toPixels",function(){return Ff}),n.d(o,"fromPixels",function(){return Df});var l={};n.r(l),n.d(l,"assertParamsValid",function(){return Of}),n.d(l,"maskToAxes",function(){return Mf}),n.d(l,"computeOutShape",function(){return Lf}),n.d(l,"stridesWithElidedDims",function(){return zf}),n.d(l,"getNormalizedAxes",function(){return Vf}),n.d(l,"startIndicesWithElidedDims",function(){return Wf}),n.d(l,"stopIndicesWithElidedDims",function(){return Uf}),n.d(l,"stridesForAxis",function(){return Hf}),n.d(l,"startForAxis",function(){return Gf}),n.d(l,"stopForAxis",function(){return jf}),n.d(l,"isSliceContinous",function(){return qf}),n.d(l,"computeFlatOffset",function(){return Kf}),n.d(l,"parseSliceParams",function(){return Xf}),n.d(l,"sliceInfo",function(){return Zf});var u={};n.r(u),n.d(u,"Serializable",function(){return Yf}),n.d(u,"SerializationMap",function(){return Jf}),n.d(u,"registerClass",function(){return Qf});var c={};n.r(c),n.d(c,"conv2d",function(){return Ay}),n.d(c,"depthwiseConv2d",function(){return Dy}),n.d(c,"matMul",function(){return My});var h={};n.r(h),n.d(h,"segOpComputeOptimalWindowSize",function(){return nx}),n.d(h,"computeOutShape",function(){return rx}),n.d(h,"collectGatherOpShapeInfo",function(){return sx});var d={};n.r(d),n.d(d,"axesAreInnerMostDims",function(){return kg}),n.d(d,"combineLocations",function(){return Ig}),n.d(d,"computeOutAndReduceShapes",function(){return Ng}),n.d(d,"expandShapeToKeepDim",function(){return Cg}),n.d(d,"assertAxesAreInnerMostDims",function(){return Sg}),n.d(d,"getAxesPermutation",function(){return Tg}),n.d(d,"getUndoAxesPermutation",function(){return _g}),n.d(d,"getInnerMostAxes",function(){return $g}),n.d(d,"getBroadcastDims",function(){return Xm}),n.d(d,"getReductionAxes",function(){return Zm}),n.d(d,"assertAndGetBroadcastShape",function(){return Ym}),n.d(d,"assertParamsConsistent",function(){return Ib}),n.d(d,"computeOutShape",function(){return Nb}),n.d(d,"computeDilation2DInfo",function(){return fm}),n.d(d,"computePool2DInfo",function(){return mm}),n.d(d,"computePool3DInfo",function(){return gm}),n.d(d,"computeConv2DInfo",function(){return ym}),n.d(d,"computeConv3DInfo",function(){return bm}),n.d(d,"computeDefaultPad",function(){return xm}),n.d(d,"tupleValuesAreOne",function(){return Nm}),n.d(d,"eitherStridesOrDilationsAreOne",function(){return Cm}),n.d(d,"convertConv2DDataFormat",function(){return Sm}),n.d(d,"getFusedDyActivation",function(){return Ty}),n.d(d,"getFusedBiasGradient",function(){return _y}),n.d(d,"applyActivation",function(){return $y}),n.d(d,"shouldFuse",function(){return Ey}),n.d(d,"PARALLELIZE_THRESHOLD",function(){return Cb}),n.d(d,"computeOptimalWindowSize",function(){return Sb}),n.d(d,"slice_util",function(){return l}),n.d(d,"upcastType",function(){return Xd}),n.d(d,"getImageCenter",function(){return Tb}),n.d(d,"getReshaped",function(){return _b}),n.d(d,"getPermuted",function(){return $b}),n.d(d,"getReshapedPermuted",function(){return Eb}),n.d(d,"getSliceBeginCoords",function(){return Ab}),n.d(d,"getSliceSize",function(){return Rb}),n.d(d,"prepareAndValidate",function(){return Fb}),n.d(d,"validateUpdateShape",function(){return Db}),n.d(d,"validateInput",function(){return Ob}),n.d(d,"calculateShapes",function(){return Mb}),n.d(d,"SELU_SCALEALPHA",function(){return Lb}),n.d(d,"SELU_SCALE",function(){return zb}),n.d(d,"ERF_P",function(){return Pb}),n.d(d,"ERF_A1",function(){return Bb}),n.d(d,"ERF_A2",function(){return Vb}),n.d(d,"ERF_A3",function(){return Wb}),n.d(d,"ERF_A4",function(){return Ub}),n.d(d,"ERF_A5",function(){return Hb}),n.d(d,"warn",function(){return Gb}),n.d(d,"log",function(){return jb}),n.d(d,"mergeRealAndImagArrays",function(){return qb}),n.d(d,"splitRealAndImagArrays",function(){return Kb}),n.d(d,"complexWithEvenIndex",function(){return Xb}),n.d(d,"complexWithOddIndex",function(){return Zb}),n.d(d,"getComplexWithIndex",function(){return Yb}),n.d(d,"assignToTypedArray",function(){return Jb}),n.d(d,"exponents",function(){return Qb}),n.d(d,"exponent",function(){return ex}),n.d(d,"prepareSplitSize",function(){return tx}),n.d(d,"segment_util",function(){return h}),n.d(d,"fromUint8ToStringArray",function(){return ax}),n.d(d,"fromStringArrayToUint8",function(){return ix});var p={};n.r(p),n.d(p,"nonMaxSuppressionV3Impl",function(){return Uy}),n.d(p,"nonMaxSuppressionV4Impl",function(){return Hy}),n.d(p,"nonMaxSuppressionV5Impl",function(){return Gy}),n.d(p,"whereImpl",function(){return ox});var f={};n.r(f),n.d(f,"json",function(){return oT});var m={};n.r(m),n.d(m,"json",function(){return lT});var g={};n.r(g),n.d(g,"json",function(){return uT});var y={};n.r(y),n.d(y,"json",function(){return cT});var b={};n.r(b),n.d(b,"json",function(){return hT});var x={};n.r(x),n.d(x,"json",function(){return dT});var v={};n.r(v),n.d(v,"json",function(){return pT});var w={};n.r(w),n.d(w,"json",function(){return fT});var k={};n.r(k),n.d(k,"json",function(){return mT});var I={};n.r(I),n.d(I,"json",function(){return gT});var N={};n.r(N),n.d(N,"json",function(){return yT});var C={};n.r(C),n.d(C,"json",function(){return bT});var S={};n.r(S),n.d(S,"json",function(){return xT});var T={};n.r(T),n.d(T,"json",function(){return vT});var _={};n.r(_),n.d(_,"json",function(){return wT});var $={};n.r($),n.d($,"json",function(){return kT});var E={};n.r(E),n.d(E,"json",function(){return IT});var A={};function R(e){return"function"==typeof e}n.r(A),n.d(A,"simpleAbsImpl",function(){return z_}),n.d(A,"addImpl",function(){return $_}),n.d(A,"bincountImpl",function(){return w$}),n.d(A,"bincountReduceImpl",function(){return k$}),n.d(A,"ceilImpl",function(){return C$}),n.d(A,"concatImpl",function(){return A$}),n.d(A,"expImpl",function(){return yE}),n.d(A,"expm1Impl",function(){return kE}),n.d(A,"floorImpl",function(){return UE}),n.d(A,"gatherV2Impl",function(){return JE}),n.d(A,"greaterImpl",function(){return eA}),n.d(A,"lessImpl",function(){return pA}),n.d(A,"linSpaceImpl",function(){return xA}),n.d(A,"logImpl",function(){return wA}),n.d(A,"maxImpl",function(){return MA}),n.d(A,"maximumImpl",function(){return PA}),n.d(A,"minimumImpl",function(){return YA}),n.d(A,"multiplyImpl",function(){return CE}),n.d(A,"negImpl",function(){return oR}),n.d(A,"notEqualImpl",function(){return mR}),n.d(A,"prodImpl",function(){return _R}),n.d(A,"rangeImpl",function(){return ER}),n.d(A,"rsqrtImpl",function(){return WR}),n.d(A,"sliceImpl",function(){return y$}),n.d(A,"squaredDifferenceImpl",function(){return mF}),n.d(A,"stridedSliceImpl",function(){return vF}),n.d(A,"subImpl",function(){return RE}),n.d(A,"tileImpl",function(){return CF}),n.d(A,"topKImpl",function(){return SF}),n.d(A,"transposeImpl",function(){return G_}),n.d(A,"uniqueImpl",function(){return TF});let F=!1;const D={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const e=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+e.stack)}else F&&console.log("RxJS: Back to a better error behavior. Thank you. <3");F=e},get useDeprecatedSynchronousErrorHandling(){return F}};function O(e){setTimeout(()=>{throw e},0)}const M={closed:!0,next(e){},error(e){if(D.useDeprecatedSynchronousErrorHandling)throw e;O(e)},complete(){}},L=(()=>Array.isArray||(e=>e&&"number"==typeof e.length))();function z(e){return null!==e&&"object"==typeof e}const P=(()=>{function e(e){return Error.call(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e})();let B=(()=>{class e{constructor(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._ctorUnsubscribe=!0,this._unsubscribe=e)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:r,_unsubscribe:s,_subscriptions:a}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(let e=0;e<n.length;++e)n[e].remove(this);if(R(s)){r&&(this._unsubscribe=void 0);try{s.call(this)}catch(i){t=i instanceof P?V(i.errors):[i]}}if(L(a)){let e=-1,n=a.length;for(;++e<n;){const n=a[e];if(z(n))try{n.unsubscribe()}catch(i){t=t||[],i instanceof P?t=t.concat(V(i.errors)):t.push(i)}}}if(t)throw new P(t)}add(t){let n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){const t=n;n=new e,n._subscriptions=[t]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof e){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(e){const t=this._subscriptions;if(t){const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}}return e.EMPTY=function(e){return e.closed=!0,e}(new e),e})();function V(e){return e.reduce((e,t)=>e.concat(t instanceof P?t.errors:t),[])}const W=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class U extends B{constructor(e,t,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=M;break;case 1:if(!e){this.destination=M;break}if("object"==typeof e){e instanceof U?(this.syncErrorThrowable=e.syncErrorThrowable,this.destination=e,e.add(this)):(this.syncErrorThrowable=!0,this.destination=new H(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new H(this,e,t,n)}}[W](){return this}static create(e,t,n){const r=new U(e,t,n);return r.syncErrorThrowable=!1,r}next(e){this.isStopped||this._next(e)}error(e){this.isStopped||(this.isStopped=!0,this._error(e))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(e){this.destination.next(e)}_error(e){this.destination.error(e),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:e}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this}}class H extends U{constructor(e,t,n,r){let s;super(),this._parentSubscriber=e;let a=this;R(t)?s=t:t&&(s=t.next,n=t.error,r=t.complete,t!==M&&(a=Object.create(t),R(a.unsubscribe)&&this.add(a.unsubscribe.bind(a)),a.unsubscribe=this.unsubscribe.bind(this))),this._context=a,this._next=s,this._error=n,this._complete=r}next(e){if(!this.isStopped&&this._next){const{_parentSubscriber:t}=this;D.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}}error(e){if(!this.isStopped){const{_parentSubscriber:t}=this,{useDeprecatedSynchronousErrorHandling:n}=D;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):O(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;O(e)}}}complete(){if(!this.isStopped){const{_parentSubscriber:e}=this;if(this._complete){const t=()=>this._complete.call(this._context);D.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,t),this.unsubscribe()):(this.__tryOrUnsub(t),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(e,t){try{e.call(this._context,t)}catch(n){if(this.unsubscribe(),D.useDeprecatedSynchronousErrorHandling)throw n;O(n)}}__tryOrSetError(e,t,n){if(!D.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(r){return D.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=r,e.syncErrorThrown=!0,!0):(O(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:e}=this;this._context=null,this._parentSubscriber=null,e.unsubscribe()}}const G=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function j(e){return e}let q=(()=>{class e{constructor(e){this._isScalar=!1,e&&(this._subscribe=e)}lift(t){const n=new e;return n.source=this,n.operator=t,n}subscribe(e,t,n){const{operator:r}=this,s=function(e,t,n){if(e){if(e instanceof U)return e;if(e[W])return e[W]()}return e||t||n?new U(e,t,n):new U(M)}(e,t,n);if(s.add(r?r.call(s,this.source):this.source||D.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),D.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(e){try{return this._subscribe(e)}catch(t){D.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){const{closed:t,destination:n,isStopped:r}=e;if(t||r)return!1;e=n&&n instanceof U?n:null}return!0}(e)?e.error(t):console.warn(t)}}forEach(e,t){return new(t=K(t))((t,n)=>{let r;r=this.subscribe(t=>{try{e(t)}catch(s){n(s),r&&r.unsubscribe()}},n,t)})}_subscribe(e){const{source:t}=this;return t&&t.subscribe(e)}[G](){return this}pipe(...e){return 0===e.length?this:(0===(t=e).length?j:1===t.length?t[0]:function(e){return t.reduce((e,t)=>t(e),e)})(this);var t}toPromise(e){return new(e=K(e))((e,t)=>{let n;this.subscribe(e=>n=e,e=>t(e),()=>e(n))})}}return e.create=t=>new e(t),e})();function K(e){if(e||(e=D.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const X=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class Z extends B{constructor(e,t){super(),this.subject=e,this.subscriber=t,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const e=this.subject,t=e.observers;if(this.subject=null,!t||0===t.length||e.isStopped||e.closed)return;const n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}class Y extends U{constructor(e){super(e),this.destination=e}}let J=(()=>{class e extends q{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[W](){return new Y(this)}lift(e){const t=new Q(this,this);return t.operator=e,t}next(e){if(this.closed)throw new X;if(!this.isStopped){const{observers:t}=this,n=t.length,r=t.slice();for(let s=0;s<n;s++)r[s].next(e)}}error(e){if(this.closed)throw new X;this.hasError=!0,this.thrownError=e,this.isStopped=!0;const{observers:t}=this,n=t.length,r=t.slice();for(let s=0;s<n;s++)r[s].error(e);this.observers.length=0}complete(){if(this.closed)throw new X;this.isStopped=!0;const{observers:e}=this,t=e.length,n=e.slice();for(let r=0;r<t;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(e){if(this.closed)throw new X;return super._trySubscribe(e)}_subscribe(e){if(this.closed)throw new X;return this.hasError?(e.error(this.thrownError),B.EMPTY):this.isStopped?(e.complete(),B.EMPTY):(this.observers.push(e),new Z(this,e))}asObservable(){const e=new q;return e.source=this,e}}return e.create=(e,t)=>new Q(e,t),e})();class Q extends J{constructor(e,t){super(),this.destination=e,this.source=t}next(e){const{destination:t}=this;t&&t.next&&t.next(e)}error(e){const{destination:t}=this;t&&t.error&&this.destination.error(e)}complete(){const{destination:e}=this;e&&e.complete&&this.destination.complete()}_subscribe(e){const{source:t}=this;return t?this.source.subscribe(e):B.EMPTY}}function ee(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new te(e,t))}}class te{constructor(e,t){this.project=e,this.thisArg=t}call(e,t){return t.subscribe(new ne(e,this.project,this.thisArg))}}class ne extends U{constructor(e,t,n){super(e),this.project=t,this.count=0,this.thisArg=n||this}_next(e){let t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const re=e=>t=>{for(let n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.complete()};function se(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const ae=se(),ie=e=>e&&"number"==typeof e.length&&"function"!=typeof e;function oe(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}const le=e=>{if(e&&"function"==typeof e[G])return r=e,e=>{const t=r[G]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if(ie(e))return re(e);if(oe(e))return n=e,e=>(n.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,O),e);if(e&&"function"==typeof e[ae])return t=e,e=>{const n=t[ae]();for(;;){let t;try{t=n.next()}catch(r){return e.error(r),e}if(t.done){e.complete();break}if(e.next(t.value),e.closed)break}return"function"==typeof n.return&&e.add(()=>{n.return&&n.return()}),e};{const t=z(e)?"an invalid object":`'${e}'`;throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var t,n,r};function ue(e,t){return new q(n=>{const r=new B;let s=0;return r.add(t.schedule(function(){s!==e.length?(n.next(e[s++]),n.closed||r.add(this.schedule())):n.complete()})),r})}function ce(e,t){return t?function(e,t){if(null!=e){if(function(e){return e&&"function"==typeof e[G]}(e))return function(e,t){return new q(n=>{const r=new B;return r.add(t.schedule(()=>{const s=e[G]();r.add(s.subscribe({next(e){r.add(t.schedule(()=>n.next(e)))},error(e){r.add(t.schedule(()=>n.error(e)))},complete(){r.add(t.schedule(()=>n.complete()))}}))})),r})}(e,t);if(oe(e))return function(e,t){return new q(n=>{const r=new B;return r.add(t.schedule(()=>e.then(e=>{r.add(t.schedule(()=>{n.next(e),r.add(t.schedule(()=>n.complete()))}))},e=>{r.add(t.schedule(()=>n.error(e)))}))),r})}(e,t);if(ie(e))return ue(e,t);if(function(e){return e&&"function"==typeof e[ae]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new q(n=>{const r=new B;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(t.schedule(()=>{s=e[ae](),r.add(t.schedule(function(){if(n.closed)return;let e,t;try{const n=s.next();e=n.value,t=n.done}catch(r){return void n.error(r)}t?n.complete():(n.next(e),this.schedule())}))})),r})}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(e,t):e instanceof q?e:new q(le(e))}class he extends U{constructor(e){super(),this.parent=e}_next(e){this.parent.notifyNext(e)}_error(e){this.parent.notifyError(e),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class de extends U{notifyNext(e){this.destination.next(e)}notifyError(e){this.destination.error(e)}notifyComplete(){this.destination.complete()}}function pe(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?r=>r.pipe(pe((n,r)=>ce(e(n,r)).pipe(ee((e,s)=>t(n,e,r,s))),n)):("number"==typeof t&&(n=t),t=>t.lift(new fe(e,n)))}class fe{constructor(e,t=Number.POSITIVE_INFINITY){this.project=e,this.concurrent=t}call(e,t){return t.subscribe(new me(e,this.project,this.concurrent))}}class me extends de{constructor(e,t,n=Number.POSITIVE_INFINITY){super(e),this.project=t,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)}_tryNext(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(t)}_innerSub(e){const t=new he(this),n=this.destination;n.add(t);const r=function(e,t){if(!t.closed)return e instanceof q?e.subscribe(t):le(e)(t)}(e,t);r!==t&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(e){this.destination.next(e)}notifyComplete(){const e=this.buffer;this.active--,e.length>0?this._next(e.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function ge(...e){let t=Number.POSITIVE_INFINITY,n=null,r=e[e.length-1];var s;return(s=r)&&"function"==typeof s.schedule?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof r&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof q?e[0]:function(e=Number.POSITIVE_INFINITY){return pe(j,e)}(t)(function(e,t){return t?ue(e,t):new q(re(e))}(e,n))}function ye(){return function(e){return e.lift(new be(e))}}class be{constructor(e){this.connectable=e}call(e,t){const{connectable:n}=this;n._refCount++;const r=new xe(e,n),s=t.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class xe extends U{constructor(e,t){super(e),this.connectable=t}_unsubscribe(){const{connectable:e}=this;if(!e)return void(this.connection=null);this.connectable=null;const t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);const{connection:n}=this,r=e._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class ve extends q{constructor(e,t){super(),this.source=e,this.subjectFactory=t,this._refCount=0,this._isComplete=!1}_subscribe(e){return this.getSubject().subscribe(e)}getSubject(){const e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let e=this._connection;return e||(this._isComplete=!1,e=this._connection=new B,e.add(this.source.subscribe(new ke(this.getSubject(),this))),e.closed&&(this._connection=null,e=B.EMPTY)),e}refCount(){return ye()(this)}}const we=(()=>{const e=ve.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class ke extends Y{constructor(e,t){super(e),this.connectable=t}_error(e){this._unsubscribe(),super._error(e)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const e=this.connectable;if(e){this.connectable=null;const t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}}}function Ie(){return new J}function Ne(e){for(let t in e)if(e[t]===Ne)return t;throw Error("Could not find renamed property on target object.")}function Ce(e,t){for(const n in t)t.hasOwnProperty(n)&&!e.hasOwnProperty(n)&&(e[n]=t[n])}function Se(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(Se).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return`${e.overriddenName}`;if(e.name)return`${e.name}`;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function Te(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const _e=Ne({__forward_ref__:Ne});function $e(e){return e.__forward_ref__=$e,e.toString=function(){return Se(this())},e}function Ee(e){return Ae(e)?e():e}function Ae(e){return"function"==typeof e&&e.hasOwnProperty(_e)&&e.__forward_ref__===$e}class Re extends Error{constructor(e,t){super(function(e,t){return`${e?`NG0${e}: `:""}${t}`}(e,t)),this.code=e}}function Fe(e){return"string"==typeof e?e:null==e?"":String(e)}function De(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():Fe(e)}function Oe(e,t){const n=t?` in ${t}`:"";throw new Re("201",`No provider for ${De(e)} found${n}`)}function Me(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function Le(e){return{factory:e.factory,providers:e.providers||[],imports:e.imports||[]}}function ze(e){return Pe(e,Ve)||Pe(e,Ue)}function Pe(e,t){return e.hasOwnProperty(t)?e[t]:null}function Be(e){return e&&(e.hasOwnProperty(We)||e.hasOwnProperty(He))?e[We]:null}const Ve=Ne({"\u0275prov":Ne}),We=Ne({"\u0275inj":Ne}),Ue=Ne({ngInjectableDef:Ne}),He=Ne({ngInjectorDef:Ne});var Ge=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}({});let je;function qe(e){const t=je;return je=e,t}function Ke(e,t,n){const r=ze(e);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&Ge.Optional?null:void 0!==t?t:void Oe(Se(e),"Injector")}function Xe(e){return{toString:e}.toString()}var Ze=function(e){return e[e.OnPush=0]="OnPush",e[e.Default=1]="Default",e}({}),Ye=function(e){return e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom",e}({});const Je="undefined"!=typeof globalThis&&globalThis,Qe="undefined"!=typeof window&&window,et="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,tt="undefined"!=typeof global&&global,nt=Je||tt||Qe||et,rt={},st=[],at=Ne({"\u0275cmp":Ne}),it=Ne({"\u0275dir":Ne}),ot=Ne({"\u0275pipe":Ne}),lt=Ne({"\u0275mod":Ne}),ut=Ne({"\u0275loc":Ne}),ct=Ne({"\u0275fac":Ne}),ht=Ne({__NG_ELEMENT_ID__:Ne});let dt=0;function pt(e){return Xe(()=>{const t={},n={type:e.type,providersResolver:null,decls:e.decls,vars:e.vars,factory:null,template:e.template||null,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:t,inputs:null,outputs:null,exportAs:e.exportAs||null,onPush:e.changeDetection===Ze.OnPush,directiveDefs:null,pipeDefs:null,selectors:e.selectors||st,viewQuery:e.viewQuery||null,features:e.features||null,data:e.data||{},encapsulation:e.encapsulation||Ye.Emulated,id:"c",styles:e.styles||st,_:null,setInput:null,schemas:e.schemas||null,tView:null},r=e.directives,s=e.features,a=e.pipes;return n.id+=dt++,n.inputs=bt(e.inputs,t),n.outputs=bt(e.outputs),s&&s.forEach(e=>e(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map(ft):null,n.pipeDefs=a?()=>("function"==typeof a?a():a).map(mt):null,n})}function ft(e){return vt(e)||function(e){return e[it]||null}(e)}function mt(e){return function(e){return e[ot]||null}(e)}const gt={};function yt(e){const t={type:e.type,bootstrap:e.bootstrap||st,declarations:e.declarations||st,imports:e.imports||st,exports:e.exports||st,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null};return null!=e.id&&Xe(()=>{gt[e.id]=e.type}),t}function bt(e,t){if(null==e)return rt;const n={};for(const r in e)if(e.hasOwnProperty(r)){let s=e[r],a=s;Array.isArray(s)&&(a=s[1],s=s[0]),n[s]=r,t&&(t[s]=a)}return n}const xt=pt;function vt(e){return e[at]||null}function wt(e,t){const n=e[lt]||null;if(!n&&!0===t)throw new Error(`Type ${Se(e)} does not have '\u0275mod' property.`);return n}const kt=20,It=10;function Nt(e){return Array.isArray(e)&&"object"==typeof e[1]}function Ct(e){return Array.isArray(e)&&!0===e[1]}function St(e){return 0!=(8&e.flags)}function Tt(e){return 2==(2&e.flags)}function _t(e){return 1==(1&e.flags)}function $t(e){return null!==e.template}function Et(e,t){return e.hasOwnProperty(ct)?e[ct]:null}class At{constructor(e,t,n){this.previousValue=e,this.currentValue=t,this.firstChange=n}isFirstChange(){return this.firstChange}}function Rt(){return Ft}function Ft(e){return e.type.prototype.ngOnChanges&&(e.setInput=Ot),Dt}function Dt(){const e=Mt(this),t=null==e?void 0:e.current;if(t){const n=e.previous;if(n===rt)e.previous=t;else for(let e in t)n[e]=t[e];e.current=null,this.ngOnChanges(t)}}function Ot(e,t,n,r){const s=Mt(e)||function(e,t){return e.__ngSimpleChanges__=t}(e,{previous:rt,current:null}),a=s.current||(s.current={}),i=s.previous,o=this.declaredInputs[n],l=i[o];a[o]=new At(l&&l.currentValue,t,i===rt),e[r]=t}function Mt(e){return e.__ngSimpleChanges__||null}let Lt;function zt(e){return!!e.listen}Rt.ngInherit=!0;const Pt={createRenderer:(e,t)=>void 0!==Lt?Lt:"undefined"!=typeof document?document:void 0};function Bt(e){for(;Array.isArray(e);)e=e[0];return e}function Vt(e,t){return Bt(t[e])}function Wt(e,t){return Bt(t[e.index])}function Ut(e,t){return e.data[t]}function Ht(e,t){const n=t[e];return Nt(n)?n:n[0]}function Gt(e){const t=function(e){return e.__ngContext__||null}(e);return t?Array.isArray(t)?t:t.lView:null}function jt(e){return 128==(128&e[2])}function qt(e,t){return null==t?null:e[t]}function Kt(e){e[18]=0}function Xt(e,t){e[5]+=t;let n=e,r=e[3];for(;null!==r&&(1===t&&1===n[5]||-1===t&&0===n[5]);)r[5]+=t,n=r,r=r[3]}const Zt={lFrame:mn(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function Yt(){return Zt.bindingsEnabled}function Jt(){return Zt.lFrame.lView}function Qt(){return Zt.lFrame.tView}function en(){let e=tn();for(;null!==e&&64===e.type;)e=e.parent;return e}function tn(){return Zt.lFrame.currentTNode}function nn(e,t){const n=Zt.lFrame;n.currentTNode=e,n.isParent=t}function rn(){return Zt.lFrame.isParent}function sn(){return Zt.isInCheckNoChangesMode}function an(e){Zt.isInCheckNoChangesMode=e}function on(){return Zt.lFrame.bindingIndex++}function ln(e,t){const n=Zt.lFrame;n.bindingIndex=n.bindingRootIndex=e,un(t)}function un(e){Zt.lFrame.currentDirectiveIndex=e}function cn(e){Zt.lFrame.currentQueryIndex=e}function hn(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[6]:null}function dn(e,t,n){if(n&Ge.SkipSelf){let r=t,s=e;for(;r=r.parent,!(null!==r||n&Ge.Host||(r=hn(s),null===r)||(s=s[15],10&r.type)););if(null===r)return!1;t=r,e=s}const r=Zt.lFrame=fn();return r.currentTNode=t,r.lView=e,!0}function pn(e){const t=fn(),n=e[1];Zt.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function fn(){const e=Zt.lFrame,t=null===e?null:e.child;return null===t?mn(e):t}function mn(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function gn(){const e=Zt.lFrame;return Zt.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const yn=gn;function bn(){const e=gn();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function xn(){return Zt.lFrame.selectedIndex}function vn(e){Zt.lFrame.selectedIndex=e}function wn(e,t){for(let n=t.directiveStart,r=t.directiveEnd;n<r;n++){const t=e.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:a,ngAfterViewChecked:i,ngOnDestroy:o}=t;r&&(e.contentHooks||(e.contentHooks=[])).push(-n,r),s&&((e.contentHooks||(e.contentHooks=[])).push(n,s),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,s)),a&&(e.viewHooks||(e.viewHooks=[])).push(-n,a),i&&((e.viewHooks||(e.viewHooks=[])).push(n,i),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,i)),null!=o&&(e.destroyHooks||(e.destroyHooks=[])).push(n,o)}}function kn(e,t,n){Cn(e,t,3,n)}function In(e,t,n,r){(3&e[2])===n&&Cn(e,t,n,r)}function Nn(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function Cn(e,t,n,r){const s=null!=r?r:-1,a=t.length-1;let i=0;for(let o=void 0!==r?65535&e[18]:0;o<a;o++)if("number"==typeof t[o+1]){if(i=t[o],null!=r&&i>=r)break}else t[o]<0&&(e[18]+=65536),(i<s||-1==s)&&(Sn(e,n,t,o),e[18]=(4294901760&e[18])+o+2),o++}function Sn(e,t,n,r){const s=n[r]<0,a=n[r+1],i=e[s?-n[r]:n[r]];s?e[2]>>11<e[18]>>16&&(3&e[2])===t&&(e[2]+=2048,a.call(i)):a.call(i)}const Tn=-1;class _n{constructor(e,t,n){this.factory=e,this.resolving=!1,this.canSeeViewProviders=t,this.injectImpl=n}}function $n(e,t,n){const r=zt(e);let s=0;for(;s<n.length;){const a=n[s];if("number"==typeof a){if(0!==a)break;s++;const i=n[s++],o=n[s++],l=n[s++];r?e.setAttribute(t,o,l,i):t.setAttributeNS(i,o,l)}else{const i=a,o=n[++s];En(i)?r&&e.setProperty(t,i,o):r?e.setAttribute(t,i,o):t.setAttribute(i,o),s++}}return s}function En(e){return 64===e.charCodeAt(0)}function An(e,t){if(null===t||0===t.length);else if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let r=0;r<t.length;r++){const s=t[r];"number"==typeof s?n=s:0===n||Rn(e,n,s,null,-1===n||2===n?t[++r]:null)}}return e}function Rn(e,t,n,r,s){let a=0,i=e.length;if(-1===t)i=-1;else for(;a<e.length;){const n=e[a++];if("number"==typeof n){if(n===t){i=-1;break}if(n>t){i=a-1;break}}}for(;a<e.length;){const t=e[a];if("number"==typeof t)break;if(t===n){if(null===r)return void(null!==s&&(e[a+1]=s));if(r===e[a+1])return void(e[a+2]=s)}a++,null!==r&&a++,null!==s&&a++}-1!==i&&(e.splice(i,0,t),a=i+1),e.splice(a++,0,n),null!==r&&e.splice(a++,0,r),null!==s&&e.splice(a++,0,s)}function Fn(e){return 32767&e}function Dn(e,t){let n=e>>16,r=t;for(;n>0;)r=r[15],n--;return r}let On=!0;function Mn(e){const t=On;return On=e,t}let Ln=0;function zn(e,t){const n=Bn(e,t);if(-1!==n)return n;const r=t[1];r.firstCreatePass&&(e.injectorIndex=t.length,Pn(r.data,e),Pn(t,null),Pn(r.blueprint,null));const s=Vn(e,t),a=e.injectorIndex;if(s!==Tn){const e=Fn(s),n=Dn(s,t),r=n[1].data;for(let s=0;s<8;s++)t[a+s]=n[e+s]|r[e+s]}return t[a+8]=s,a}function Pn(e,t){e.push(0,0,0,0,0,0,0,0,t)}function Bn(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function Vn(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,r=null,s=t;for(;null!==s;){const e=s[1],t=e.type;if(r=2===t?e.declTNode:1===t?s[6]:null,null===r)return Tn;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return Tn}function Wn(e,t,n){!function(e,t,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(ht)&&(r=n[ht]),null==r&&(r=n[ht]=Ln++);const s=255&r;t.data[e+(s>>5)]|=1<<s}(e,t,n)}function Un(e,t,n){if(n&Ge.Optional)return e;Oe(t,"NodeInjector")}function Hn(e,t,n,r){if(n&Ge.Optional&&void 0===r&&(r=null),0==(n&(Ge.Self|Ge.Host))){const s=e[9],a=qe(void 0);try{return s?s.get(t,r,n&Ge.Optional):Ke(t,r,n&Ge.Optional)}finally{qe(a)}}return Un(r,t,n)}function Gn(e,t,n,r=Ge.Default,s){if(null!==e){const a=function(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(ht)?e[ht]:void 0;return"number"==typeof t?t>=0?255&t:qn:t}(n);if("function"==typeof a){if(!dn(t,e,r))return r&Ge.Host?Un(s,n,r):Hn(t,n,r,s);try{const e=a();if(null!=e||r&Ge.Optional)return e;Oe(n)}finally{yn()}}else if("number"==typeof a){let s=null,i=Bn(e,t),o=Tn,l=r&Ge.Host?t[16][6]:null;for((-1===i||r&Ge.SkipSelf)&&(o=-1===i?Vn(e,t):t[i+8],o!==Tn&&Yn(r,!1)?(s=t[1],i=Fn(o),t=Dn(o,t)):i=-1);-1!==i;){const e=t[1];if(Zn(a,i,e.data)){const e=Kn(i,t,n,s,r,l);if(e!==jn)return e}o=t[i+8],o!==Tn&&Yn(r,t[1].data[i+8]===l)&&Zn(a,i,t)?(s=e,i=Fn(o),t=Dn(o,t)):i=-1}}}return Hn(t,n,r,s)}const jn={};function qn(){return new Jn(en(),Jt())}function Kn(e,t,n,r,s,a){const i=t[1],o=i.data[e+8],l=function(e,t,n,r,s){const a=e.providerIndexes,i=t.data,o=1048575&a,l=e.directiveStart,u=a>>20,c=s?o+u:e.directiveEnd;for(let h=r?o:o+u;h<c;h++){const e=i[h];if(h<l&&n===e||h>=l&&e.type===n)return h}if(s){const e=i[l];if(e&&$t(e)&&e.type===n)return l}return null}(o,i,n,null==r?Tt(o)&&On:r!=i&&0!=(3&o.type),s&Ge.Host&&a===o);return null!==l?Xn(t,i,l,o):jn}function Xn(e,t,n,r){let s=e[n];const a=t.data;if(s instanceof _n){const i=s;i.resolving&&function(e,t){throw new Re("200",`Circular dependency in DI detected for ${e}`)}(De(a[n]));const o=Mn(i.canSeeViewProviders);i.resolving=!0;const l=i.injectImpl?qe(i.injectImpl):null;dn(e,r,Ge.Default);try{s=e[n]=i.factory(void 0,a,e,r),t.firstCreatePass&&n>=r.directiveStart&&function(e,t,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:a}=t.type.prototype;if(r){const r=Ft(t);(n.preOrderHooks||(n.preOrderHooks=[])).push(e,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,r)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-e,s),a&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,a),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,a))}(n,a[n],t)}finally{null!==l&&qe(l),Mn(o),i.resolving=!1,yn()}}return s}function Zn(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function Yn(e,t){return!(e&Ge.Self||e&Ge.Host&&t)}class Jn{constructor(e,t){this._tNode=e,this._lView=t}get(e,t){return Gn(this._tNode,this._lView,e,void 0,t)}}function Qn(e){const t=e;if(Ae(e))return()=>{const e=Qn(Ee(t));return e?e():null};let n=Et(t);if(null===n){const e=Be(t);n=e&&e.factory}return n||null}function er(e){return Xe(()=>{const t=e.prototype.constructor,n=t[ct]||Qn(t),r=Object.prototype;let s=Object.getPrototypeOf(e.prototype).constructor;for(;s&&s!==r;){const e=s[ct]||Qn(s);if(e&&e!==n)return e;s=Object.getPrototypeOf(s)}return e=>new e})}const tr="__parameters__";function nr(e,t,n){return Xe(()=>{const r=function(e){return function(...t){if(e){const n=e(...t);for(const e in n)this[e]=n[e]}}}(t);function s(...e){if(this instanceof s)return r.apply(this,e),this;const t=new s(...e);return n.annotation=t,n;function n(e,n,r){const s=e.hasOwnProperty(tr)?e[tr]:Object.defineProperty(e,tr,{value:[]})[tr];for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(t),e}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=e,s.annotationCls=s,s})}class rr{constructor(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof t?this.__NG_ELEMENT_ID__=t:void 0!==t&&(this.\u0275prov=Me({token:this,providedIn:t.providedIn||"root",factory:t.factory}))}toString(){return`InjectionToken ${this._desc}`}}function sr(e,t){e.forEach(e=>Array.isArray(e)?sr(e,t):t(e))}function ar(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}function ir(e,t,n){let r=lr(e,t);return r>=0?e[1|r]=n:(r=~r,function(e,t,n,r){let s=e.length;if(s==t)e.push(n,r);else if(1===s)e.push(r,e[0]),e[0]=n;else{for(s--,e.push(e[s-1],e[s]);s>t;)e[s]=e[s-2],s--;e[t]=n,e[t+1]=r}}(e,r,t,n)),r}function or(e,t){const n=lr(e,t);if(n>=0)return e[1|n]}function lr(e,t){return function(e,t,n){let r=0,s=e.length>>1;for(;s!==r;){const n=r+(s-r>>1),a=e[n<<1];if(t===a)return n<<1;a>t?s=n:r=n+1}return~(s<<1)}(e,t)}const ur={},cr=/\n/gm,hr="__source",dr=Ne({provide:String,useValue:Ne});let pr;function fr(e){const t=pr;return pr=e,t}function mr(e,t=Ge.Default){if(void 0===pr)throw new Error("inject() must be called from an injection context");return null===pr?Ke(e,void 0,t):pr.get(e,t&Ge.Optional?null:void 0,t)}function gr(e,t=Ge.Default){return(je||mr)(Ee(e),t)}function yr(e){const t=[];for(let n=0;n<e.length;n++){const r=Ee(e[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let e,n=Ge.Default;for(let t=0;t<r.length;t++){const s=r[t],a=s.__NG_DI_FLAG__;"number"==typeof a?-1===a?e=s.token:n|=a:e=s}t.push(gr(e,n))}else t.push(gr(r))}return t}function br(e,t){return e.__NG_DI_FLAG__=t,e.prototype.__NG_DI_FLAG__=t,e}const xr=br(nr("Inject",e=>({token:e})),-1),vr=br(nr("Optional"),8),wr=br(nr("SkipSelf"),4);function kr(e){return e.ngDebugContext}function Ir(e){return e.ngOriginalError}function Nr(e,...t){e.error(...t)}class Cr{constructor(){this._console=console}handleError(e){const t=this._findOriginalError(e),n=this._findContext(e),r=function(e){return e.ngErrorLogger||Nr}(e);r(this._console,"ERROR",e),t&&r(this._console,"ORIGINAL ERROR",t),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(e){return e?kr(e)?kr(e):this._findContext(Ir(e)):null}_findOriginalError(e){let t=Ir(e);for(;t&&Ir(t);)t=Ir(t);return t}}function Sr(e,t){e.__ngContext__=t}const Tr=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(nt))();function _r(e){return e instanceof Function?e():e}var $r=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}({});function Er(e,t){return(void 0)(e,t)}function Ar(e){const t=e[3];return Ct(t)?t[3]:t}function Rr(e){return Dr(e[13])}function Fr(e){return Dr(e[4])}function Dr(e){for(;null!==e&&!Ct(e);)e=e[4];return e}function Or(e,t,n,r,s){if(null!=r){let a,i=!1;Ct(r)?a=r:Nt(r)&&(i=!0,r=r[0]);const o=Bt(r);0===e&&null!==n?null==s?Br(t,n,o):Pr(t,n,o,s||null,!0):1===e&&null!==n?Pr(t,n,o,s||null,!0):2===e?function(e,t,n){const r=function(e,t){return zt(e)?e.parentNode(t):t.parentNode}(e,t);r&&function(e,t,n,r){zt(e)?e.removeChild(t,n,r):t.removeChild(n)}(e,r,t,n)}(t,o,i):3===e&&t.destroyNode(o),null!=a&&function(e,t,n,r,s){const a=n[7];a!==Bt(n)&&Or(t,e,r,a,s);for(let i=It;i<n.length;i++){const s=n[i];Gr(s[1],s,e,t,r,a)}}(t,e,a,n,s)}}function Mr(e,t,n){return zt(e)?e.createElement(t,n):null===n?e.createElement(t):e.createElementNS(n,t)}function Lr(e,t){const n=e[9],r=n.indexOf(t),s=t[3];1024&t[2]&&(t[2]&=-1025,Xt(s,-1)),n.splice(r,1)}function zr(e,t){if(!(256&t[2])){t[2]&=-129,t[2]|=256,function(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let r=0;r<n.length;r+=2){const e=t[n[r]];if(!(e instanceof _n)){const t=n[r+1];if(Array.isArray(t))for(let n=0;n<t.length;n+=2)t[n+1].call(e[t[n]]);else t.call(e)}}}(e,t),function(e,t){const n=e.cleanup,r=t[7];let s=-1;if(null!==n)for(let a=0;a<n.length-1;a+=2)if("string"==typeof n[a]){const e=n[a+1],i="function"==typeof e?e(t):Bt(t[e]),o=r[s=n[a+2]],l=n[a+3];"boolean"==typeof l?i.removeEventListener(n[a],o,l):l>=0?r[s=l]():r[s=-l].unsubscribe(),a+=2}else{const e=r[s=n[a+1]];n[a].call(e)}if(null!==r){for(let e=s+1;e<r.length;e++)(0,r[e])();t[7]=null}}(e,t),1===t[1].type&&zt(t[11])&&t[11].destroy();const n=t[17];if(null!==n&&Ct(t[3])){n!==t[3]&&Lr(n,t);const r=t[19];null!==r&&r.detachView(e)}}}function Pr(e,t,n,r,s){zt(e)?e.insertBefore(t,n,r,s):t.insertBefore(n,r,s)}function Br(e,t,n){zt(e)?e.appendChild(t,n):t.appendChild(n)}function Vr(e,t,n,r,s){null!==r?Pr(e,t,n,r,s):Br(e,t,n)}function Wr(e,t,n,r){const s=function(e,t,n){return function(e,t,n){let r=t;for(;null!==r&&40&r.type;)r=(t=r).parent;if(null===r)return n[0];if(2&r.flags){const t=e.data[r.directiveStart].encapsulation;if(t===Ye.None||t===Ye.Emulated)return null}return Wt(r,n)}(e,t.parent,n)}(e,r,t),a=t[11],i=function(e,t,n){return function(e,t,n){return 40&e.type?Wt(e,n):null}(e,0,n)}(r.parent||t[6],0,t);if(null!=s)if(Array.isArray(n))for(let o=0;o<n.length;o++)Vr(a,s,n[o],i,!1);else Vr(a,s,n,i,!1)}function Ur(e,t){return null!==t?e[16][6].projection[t.projection]:null}function Hr(e,t,n,r,s,a,i){for(;null!=n;){const o=r[n.index],l=n.type;if(i&&0===t&&(o&&Sr(Bt(o),r),n.flags|=4),64!=(64&n.flags))if(8&l)Hr(e,t,n.child,r,s,a,!1),Or(t,e,s,o,a);else if(32&l){const i=Er(n,r);let l;for(;l=i();)Or(t,e,s,l,a);Or(t,e,s,o,a)}else 16&l?jr(e,t,r,n,s,a):Or(t,e,s,o,a);n=i?n.projectionNext:n.next}}function Gr(e,t,n,r,s,a){Hr(n,r,e.firstChild,t,s,a,!1)}function jr(e,t,n,r,s,a){const i=n[16],o=i[6].projection[r.projection];if(Array.isArray(o))for(let l=0;l<o.length;l++)Or(t,e,s,o[l],a);else Hr(e,t,o,i[3],s,a,!0)}function qr(e,t,n){zt(e)?e.setAttribute(t,"style",n):t.style.cssText=n}function Kr(e,t,n){zt(e)?""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n):t.className=n}function Xr(e,t,n){let r=e.length;for(;;){const s=e.indexOf(t,n);if(-1===s)return s;if(0===s||e.charCodeAt(s-1)<=32){const n=t.length;if(s+n===r||e.charCodeAt(s+n)<=32)return s}n=s+1}}const Zr="ng-template";function Yr(e,t,n){let r=0;for(;r<e.length;){let s=e[r++];if(n&&"class"===s){if(s=e[r],-1!==Xr(s.toLowerCase(),t,0))return!0}else if(1===s){for(;r<e.length&&"string"==typeof(s=e[r++]);)if(s.toLowerCase()===t)return!0;return!1}}return!1}function Jr(e){return 4===e.type&&e.value!==Zr}function Qr(e,t,n){return t===(4!==e.type||n?e.value:Zr)}function es(e,t,n){let r=4;const s=e.attrs||[],a=function(e){for(let n=0;n<e.length;n++)if(3===(t=e[n])||4===t||6===t)return n;var t;return e.length}(s);let i=!1;for(let o=0;o<t.length;o++){const l=t[o];if("number"!=typeof l){if(!i)if(4&r){if(r=2|1&r,""!==l&&!Qr(e,l,n)||""===l&&1===t.length){if(ts(r))return!1;i=!0}}else{const u=8&r?l:t[++o];if(8&r&&null!==e.attrs){if(!Yr(e.attrs,u,n)){if(ts(r))return!1;i=!0}continue}const c=ns(8&r?"class":l,s,Jr(e),n);if(-1===c){if(ts(r))return!1;i=!0;continue}if(""!==u){let e;e=c>a?"":s[c+1].toLowerCase();const t=8&r?e:null;if(t&&-1!==Xr(t,u,0)||2&r&&u!==e){if(ts(r))return!1;i=!0}}}}else{if(!i&&!ts(r)&&!ts(l))return!1;if(i&&ts(l))continue;i=!1,r=l|1&r}}return ts(r)||i}function ts(e){return 0==(1&e)}function ns(e,t,n,r){if(null===t)return-1;let s=0;if(r||!n){let n=!1;for(;s<t.length;){const r=t[s];if(r===e)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let e=t[++s];for(;"string"==typeof e;)e=t[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const r=e[n];if("number"==typeof r)return-1;if(r===t)return n;n++}return-1}(t,e)}function rs(e,t,n=!1){for(let r=0;r<t.length;r++)if(es(e,t[r],n))return!0;return!1}function ss(e,t){return e?":not("+t.trim()+")":t}function as(e){let t=e[0],n=1,r=2,s="",a=!1;for(;n<e.length;){let i=e[n];if("string"==typeof i)if(2&r){const t=e[++n];s+="["+i+(t.length>0?'="'+t+'"':"")+"]"}else 8&r?s+="."+i:4&r&&(s+=" "+i);else""===s||ts(i)||(t+=ss(a,s),s=""),r=i,a=a||!ts(r);n++}return""!==s&&(t+=ss(a,s)),t}const is={};function os(e){ls(Qt(),Jt(),xn()+e,sn())}function ls(e,t,n,r){if(!r)if(3==(3&t[2])){const r=e.preOrderCheckHooks;null!==r&&kn(t,r,n)}else{const r=e.preOrderHooks;null!==r&&In(t,r,0,n)}vn(n)}function us(e,t){return e<<17|t<<2}function cs(e){return e>>17&32767}function hs(e){return 2|e}function ds(e){return(131068&e)>>2}function ps(e,t){return-131069&e|t<<2}function fs(e){return 1|e}function ms(e,t){const n=e.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],a=n[r+1];if(-1!==a){const n=e.data[a];cn(s),n.contentQueries(2,t[a],a)}}}function gs(e,t,n,r,s,a,i,o,l,u){const c=t.blueprint.slice();return c[0]=s,c[2]=140|r,Kt(c),c[3]=c[15]=e,c[8]=n,c[10]=i||e&&e[10],c[11]=o||e&&e[11],c[12]=l||e&&e[12]||null,c[9]=u||e&&e[9]||null,c[6]=a,c[16]=2==t.type?e[16]:c,c}function ys(e,t,n,r,s){let a=e.data[t];if(null===a)a=function(e,t,n,r,s){const a=tn(),i=rn(),o=e.data[t]=function(e,t,n,r,s,a){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:a,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,i?a:a&&a.parent,n,t,r,s);return null===e.firstChild&&(e.firstChild=o),null!==a&&(i?null==a.child&&null!==o.parent&&(a.child=o):null===a.next&&(a.next=o)),o}(e,t,n,r,s),Zt.lFrame.inI18n&&(a.flags|=64);else if(64&a.type){a.type=n,a.value=r,a.attrs=s;const e=function(){const e=Zt.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();a.injectorIndex=null===e?-1:e.injectorIndex}return nn(a,!0),a}function bs(e,t,n,r){if(0===n)return-1;const s=t.length;for(let a=0;a<n;a++)t.push(r),e.blueprint.push(r),e.data.push(null);return s}function xs(e,t,n){pn(t);try{const r=e.viewQuery;null!==r&&Ws(1,r,n);const s=e.template;null!==s&&ks(e,t,s,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&ms(e,t),e.staticViewQueries&&Ws(2,e.viewQuery,n);const a=e.components;null!==a&&function(e,t){for(let n=0;n<t.length;n++)Ls(e,t[n])}(t,a)}catch(r){throw e.firstCreatePass&&(e.incompleteFirstPass=!0),r}finally{t[2]&=-5,bn()}}function vs(e,t,n,r){const s=t[2];if(256==(256&s))return;pn(t);const a=sn();try{Kt(t),Zt.lFrame.bindingIndex=e.bindingStartIndex,null!==n&&ks(e,t,n,2,r);const i=3==(3&s);if(!a)if(i){const n=e.preOrderCheckHooks;null!==n&&kn(t,n,null)}else{const n=e.preOrderHooks;null!==n&&In(t,n,0,null),Nn(t,0)}if(function(e){for(let t=Rr(e);null!==t;t=Fr(t)){if(!t[2])continue;const e=t[9];for(let t=0;t<e.length;t++){const n=e[t],r=n[3];0==(1024&n[2])&&Xt(r,1),n[2]|=1024}}}(t),function(e){for(let t=Rr(e);null!==t;t=Fr(t))for(let e=It;e<t.length;e++){const n=t[e],r=n[1];jt(n)&&vs(r,n,r.template,n[8])}}(t),null!==e.contentQueries&&ms(e,t),!a)if(i){const n=e.contentCheckHooks;null!==n&&kn(t,n)}else{const n=e.contentHooks;null!==n&&In(t,n,1),Nn(t,1)}!function(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let e=0;e<n.length;e++){const r=n[e];if(r<0)vn(~r);else{const s=r,a=n[++e],i=n[++e];ln(a,s),i(2,t[s])}}}finally{vn(-1)}}(e,t);const o=e.components;null!==o&&function(e,t){for(let n=0;n<t.length;n++)Os(e,t[n])}(t,o);const l=e.viewQuery;if(null!==l&&Ws(2,l,r),!a)if(i){const n=e.viewCheckHooks;null!==n&&kn(t,n)}else{const n=e.viewHooks;null!==n&&In(t,n,2),Nn(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),a||(t[2]&=-73),1024&t[2]&&(t[2]&=-1025,Xt(t[3],-1))}finally{bn()}}function ws(e,t,n,r){const s=t[10],a=!sn(),i=4==(4&t[2]);try{a&&!i&&s.begin&&s.begin(),i&&xs(e,t,r),vs(e,t,n,r)}finally{a&&!i&&s.end&&s.end()}}function ks(e,t,n,r,s){const a=xn();try{vn(-1),2&r&&t.length>kt&&ls(e,t,kt,sn()),n(r,s)}finally{vn(a)}}function Is(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=Ns(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function Ns(e,t,n,r,s,a,i,o,l,u){const c=kt+r,h=c+s,d=function(e,t){const n=[];for(let r=0;r<t;r++)n.push(r<e?null:is);return n}(c,h),p="function"==typeof u?u():u;return d[1]={type:e,blueprint:d,template:n,queries:null,viewQuery:o,declTNode:t,data:d.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof a?a():a,pipeRegistry:"function"==typeof i?i():i,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function Cs(e,t,n){for(let r in e)if(e.hasOwnProperty(r)){const s=e[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(t,s):n[r]=[t,s]}return n}function Ss(e,t,n,r,s,a){const i=a.hostBindings;if(i){let n=e.hostBindingOpCodes;null===n&&(n=e.hostBindingOpCodes=[]);const a=~t.index;(function(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(n)!=a&&n.push(a),n.push(r,s,i)}}function Ts(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function _s(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function $s(e,t,n){if(n){if(t.exportAs)for(let r=0;r<t.exportAs.length;r++)n[t.exportAs[r]]=e;$t(t)&&(n[""]=e)}}function Es(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function As(e,t,n,r,s){e.data[r]=s;const a=s.factory||(s.factory=Et(s.type)),i=new _n(a,$t(s),null);e.blueprint[r]=i,n[r]=i,Ss(e,t,0,r,bs(e,n,s.hostVars,is),s)}function Rs(e,t,n){const r=Wt(t,e),s=Is(n),a=e[10],i=zs(e,gs(e,s,null,n.onPush?64:16,r,t,a,a.createRenderer(r,n),null,null));e[t.index]=i}function Fs(e,t,n,r,s,a){const i=a[t];if(null!==i){const e=r.setInput;for(let t=0;t<i.length;){const s=i[t++],a=i[t++],o=i[t++];null!==e?r.setInput(n,o,s,a):n[a]=o}}}function Ds(e,t){let n=null,r=0;for(;r<t.length;){const s=t[r];if(0!==s)if(5!==s){if("number"==typeof s)break;e.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,e[s],t[r+1])),r+=2}else r+=2;else r+=4}return n}function Os(e,t){const n=Ht(t,e);if(jt(n)){const e=n[1];80&n[2]?vs(e,n,e.template,n[8]):n[5]>0&&Ms(n)}}function Ms(e){for(let n=Rr(e);null!==n;n=Fr(n))for(let e=It;e<n.length;e++){const t=n[e];if(1024&t[2]){const e=t[1];vs(e,t,e.template,t[8])}else t[5]>0&&Ms(t)}const t=e[1].components;if(null!==t)for(let n=0;n<t.length;n++){const r=Ht(t[n],e);jt(r)&&r[5]>0&&Ms(r)}}function Ls(e,t){const n=Ht(t,e),r=n[1];!function(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(r,n),xs(r,n,n[8])}function zs(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function Ps(e){for(;e;){e[2]|=64;const t=Ar(e);if(0!=(512&e[2])&&!t)return e;e=t}return null}function Bs(e,t,n){const r=t[10];r.begin&&r.begin();try{vs(e,t,e.template,n)}catch(s){throw js(t,s),s}finally{r.end&&r.end()}}function Vs(e){!function(e){for(let t=0;t<e.components.length;t++){const n=e.components[t],r=Gt(n),s=r[1];ws(s,r,s.template,n)}}(e[8])}function Ws(e,t,n){cn(0),t(e,n)}const Us=(()=>Promise.resolve(null))();function Hs(e){return e[7]||(e[7]=[])}function Gs(e){return e.cleanup||(e.cleanup=[])}function js(e,t){const n=e[9],r=n?n.get(Cr,null):null;r&&r.handleError(t)}function qs(e,t,n,r,s){for(let a=0;a<n.length;){const i=n[a++],o=n[a++],l=t[i],u=e.data[i];null!==u.setInput?u.setInput(l,s,r,o):l[o]=s}}function Ks(e,t,n){let r=n?e.styles:null,s=n?e.classes:null,a=0;if(null!==t)for(let i=0;i<t.length;i++){const e=t[i];"number"==typeof e?a=e:1==a?s=Te(s,e):2==a&&(r=Te(r,e+": "+t[++i]+";"))}n?e.styles=r:e.stylesWithoutHost=r,n?e.classes=s:e.classesWithoutHost=s}const Xs=new rr("INJECTOR",-1);class Zs{get(e,t=ur){if(t===ur){const t=new Error(`NullInjectorError: No provider for ${Se(e)}!`);throw t.name="NullInjectorError",t}return t}}const Ys=new rr("Set Injector scope."),Js={},Qs={},ea=[];let ta;function na(){return void 0===ta&&(ta=new Zs),ta}function ra(e,t=null,n=null,r){return new sa(e,n,t||na(),r)}class sa{constructor(e,t,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];t&&sr(t,n=>this.processProvider(n,e,t)),sr([e],e=>this.processInjectorType(e,[],s)),this.records.set(Xs,oa(void 0,this));const a=this.records.get(Ys);this.scope=null!=a?a.value:null,this.source=r||("object"==typeof e?null:Se(e))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(e=>e.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(e,t=ur,n=Ge.Default){this.assertNotDestroyed();const r=fr(this);try{if(!(n&Ge.SkipSelf)){let t=this.records.get(e);if(void 0===t){const n=("function"==typeof(s=e)||"object"==typeof s&&s instanceof rr)&&ze(e);t=n&&this.injectableDefInScope(n)?oa(aa(e),Js):null,this.records.set(e,t)}if(null!=t)return this.hydrate(e,t)}return(n&Ge.Self?na():this.parent).get(e,t=n&Ge.Optional&&t===ur?null:t)}catch(a){if("NullInjectorError"===a.name){if((a.ngTempTokenPath=a.ngTempTokenPath||[]).unshift(Se(e)),r)throw a;return function(e,t,n,r){const s=e.ngTempTokenPath;throw t[hr]&&s.unshift(t[hr]),e.message=function(e,t,n,r=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.substr(2):e;let s=Se(t);if(Array.isArray(t))s=t.map(Se).join(" -> ");else if("object"==typeof t){let e=[];for(let n in t)if(t.hasOwnProperty(n)){let r=t[n];e.push(n+":"+("string"==typeof r?JSON.stringify(r):Se(r)))}s=`{${e.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${e.replace(cr,"\n  ")}`}("\n"+e.message,s,n,r),e.ngTokenPath=s,e.ngTempTokenPath=null,e}(a,e,"R3InjectorError",this.source)}throw a}finally{fr(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(e=>this.get(e))}toString(){const e=[];return this.records.forEach((t,n)=>e.push(Se(n))),`R3Injector[${e.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(e,t,n){if(!(e=Ee(e)))return!1;let r=Be(e);const s=null==r&&e.ngModule||void 0,a=void 0===s?e:s,i=-1!==n.indexOf(a);if(void 0!==s&&(r=Be(s)),null==r)return!1;if(null!=r.imports&&!i){let e;n.push(a);try{sr(r.imports,r=>{this.processInjectorType(r,t,n)&&(void 0===e&&(e=[]),e.push(r))})}finally{}if(void 0!==e)for(let t=0;t<e.length;t++){const{ngModule:n,providers:r}=e[t];sr(r,e=>this.processProvider(e,n,r||ea))}}this.injectorDefTypes.add(a),this.records.set(a,oa(r.factory,Js));const o=r.providers;if(null!=o&&!i){const t=e;sr(o,e=>this.processProvider(e,t,o))}return void 0!==s&&void 0!==e.providers}processProvider(e,t,n){let r=ua(e=Ee(e))?e:Ee(e&&e.provide);const s=function(e,t,n){return la(e)?oa(void 0,e.useValue):oa(ia(e),Js)}(e);if(ua(e)||!0!==e.multi)this.records.get(r);else{let t=this.records.get(r);t||(t=oa(void 0,Js,!0),t.factory=()=>yr(t.multi),this.records.set(r,t)),r=e,t.multi.push(e)}this.records.set(r,s)}hydrate(e,t){var n;return t.value===Js&&(t.value=Qs,t.value=t.factory()),"object"==typeof t.value&&t.value&&null!==(n=t.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(t.value),t.value}injectableDefInScope(e){return!!e.providedIn&&("string"==typeof e.providedIn?"any"===e.providedIn||e.providedIn===this.scope:this.injectorDefTypes.has(e.providedIn))}}function aa(e){const t=ze(e),n=null!==t?t.factory:Et(e);if(null!==n)return n;const r=Be(e);if(null!==r)return r.factory;if(e instanceof rr)throw new Error(`Token ${Se(e)} is missing a \u0275prov definition.`);if(e instanceof Function)return function(e){const t=e.length;if(t>0){const n=function(e,t){const n=[];for(let r=0;r<e;r++)n.push("?");return n}(t);throw new Error(`Can't resolve all parameters for ${Se(e)}: (${n.join(", ")}).`)}const n=function(e){const t=e&&(e[Ve]||e[Ue]);if(t){const n=function(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new Error("unreachable")}function ia(e,t,n){let r;if(ua(e)){const t=Ee(e);return Et(t)||aa(t)}if(la(e))r=()=>Ee(e.useValue);else if((s=e)&&s.useFactory)r=()=>e.useFactory(...yr(e.deps||[]));else if(function(e){return!(!e||!e.useExisting)}(e))r=()=>gr(Ee(e.useExisting));else{const t=Ee(e&&(e.useClass||e.provide));if(!function(e){return!!e.deps}(e))return Et(t)||aa(t);r=()=>new t(...yr(e.deps))}var s;return r}function oa(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function la(e){return null!==e&&"object"==typeof e&&dr in e}function ua(e){return"function"==typeof e}const ca=function(e,t,n){return function(e,t=null,n=null,r){const s=ra(e,t,n,r);return s._resolveInjectorDefTypes(),s}({name:n},t,e,n)};let ha=(()=>{class e{static create(e,t){return Array.isArray(e)?ca(e,t,""):ca(e.providers,e.parent,e.name||"")}}return e.THROW_IF_NOT_FOUND=ur,e.NULL=new Zs,e.\u0275prov=Me({token:e,providedIn:"any",factory:()=>gr(Xs)}),e.__NG_ELEMENT_ID__=-1,e})();function da(e,t){wn(Gt(e)[1],en())}function pa(e){let t=Object.getPrototypeOf(e.type.prototype).constructor,n=!0;const r=[e];for(;t;){let s;if($t(e))s=t.\u0275cmp||t.\u0275dir;else{if(t.\u0275cmp)throw new Error("Directives cannot inherit Components");s=t.\u0275dir}if(s){if(n){r.push(s);const t=e;t.inputs=fa(e.inputs),t.declaredInputs=fa(e.declaredInputs),t.outputs=fa(e.outputs);const n=s.hostBindings;n&&ya(e,n);const a=s.viewQuery,i=s.contentQueries;if(a&&ma(e,a),i&&ga(e,i),Ce(e.inputs,s.inputs),Ce(e.declaredInputs,s.declaredInputs),Ce(e.outputs,s.outputs),$t(s)&&s.data.animation){const t=e.data;t.animation=(t.animation||[]).concat(s.data.animation)}}const t=s.features;if(t)for(let r=0;r<t.length;r++){const s=t[r];s&&s.ngInherit&&s(e),s===pa&&(n=!1)}}t=Object.getPrototypeOf(t)}!function(e){let t=0,n=null;for(let r=e.length-1;r>=0;r--){const s=e[r];s.hostVars=t+=s.hostVars,s.hostAttrs=An(s.hostAttrs,n=An(n,s.hostAttrs))}}(r)}function fa(e){return e===rt?{}:e===st?[]:e}function ma(e,t){const n=e.viewQuery;e.viewQuery=n?(e,r)=>{t(e,r),n(e,r)}:t}function ga(e,t){const n=e.contentQueries;e.contentQueries=n?(e,r,s)=>{t(e,r,s),n(e,r,s)}:t}function ya(e,t){const n=e.hostBindings;e.hostBindings=n?(e,r)=>{t(e,r),n(e,r)}:t}let ba=null;function xa(){if(!ba){const e=nt.Symbol;if(e&&e.iterator)ba=e.iterator;else{const e=Object.getOwnPropertyNames(Map.prototype);for(let t=0;t<e.length;++t){const n=e[t];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(ba=n)}}}return ba}function va(e){return!!wa(e)&&(Array.isArray(e)||!(e instanceof Map)&&xa()in e)}function wa(e){return null!==e&&("function"==typeof e||"object"==typeof e)}function ka(e,t,n){return!Object.is(e[t],n)&&(e[t]=n,!0)}function Ia(e,t=Ge.Default){const n=Jt();return null===n?gr(e,t):Gn(en(),n,Ee(e),t)}function Na(e,t,n){const r=Jt();return ka(r,on(),t)&&function(e,t,n,r,s,a,i,o){const l=Wt(t,n);let u,c=t.inputs;var h;null!=c&&(u=c[r])?(qs(e,n,u,r,s),Tt(t)&&function(e,t){const n=Ht(t,e);16&n[2]||(n[2]|=64)}(n,t.index)):3&t.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=i?i(s,t.value||"",r):s,zt(a)?a.setProperty(l,r,s):En(r)||(l.setProperty?l.setProperty(r,s):l[r]=s))}(Qt(),function(){const e=Zt.lFrame;return Ut(e.tView,e.selectedIndex)}(),r,e,t,r[11],n),Na}function Ca(e,t,n,r,s){const a=s?"class":"style";qs(e,n,t.inputs[a],a,r)}function Sa(e,t,n,r){const s=Jt(),a=Qt(),i=kt+e,o=s[11],l=s[i]=Mr(o,t,Zt.lFrame.currentNamespace),u=a.firstCreatePass?function(e,t,n,r,s,a,i){const o=t.consts,l=ys(t,e,2,s,qt(o,a));return function(e,t,n,r){let s=!1;if(Yt()){const a=function(e,t,n){const r=e.directiveRegistry;let s=null;if(r)for(let a=0;a<r.length;a++){const i=r[a];rs(n,i.selectors,!1)&&(s||(s=[]),Wn(zn(n,t),e,i.type),$t(i)?(_s(e,n),s.unshift(i)):s.push(i))}return s}(e,t,n),i=null===r?null:{"":-1};if(null!==a){s=!0,Es(n,e.data.length,a.length);for(let e=0;e<a.length;e++){const t=a[e];t.providersResolver&&t.providersResolver(t)}let r=!1,o=!1,l=bs(e,t,a.length,null);for(let s=0;s<a.length;s++){const u=a[s];n.mergedAttrs=An(n.mergedAttrs,u.hostAttrs),As(e,n,t,l,u),$s(l,u,i),null!==u.contentQueries&&(n.flags|=8),null===u.hostBindings&&null===u.hostAttrs&&0===u.hostVars||(n.flags|=128);const c=u.type.prototype;!r&&(c.ngOnChanges||c.ngOnInit||c.ngDoCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index),r=!0),o||!c.ngOnChanges&&!c.ngDoCheck||((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index),o=!0),l++}!function(e,t){const n=t.directiveEnd,r=e.data,s=t.attrs,a=[];let i=null,o=null;for(let l=t.directiveStart;l<n;l++){const e=r[l],n=e.inputs,u=null===s||Jr(t)?null:Ds(n,s);a.push(u),i=Cs(n,l,i),o=Cs(e.outputs,l,o)}null!==i&&(i.hasOwnProperty("class")&&(t.flags|=16),i.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=a,t.inputs=i,t.outputs=o}(e,n)}i&&function(e,t,n){if(t){const r=e.localNames=[];for(let e=0;e<t.length;e+=2){const s=n[t[e+1]];if(null==s)throw new Re("301",`Export of name '${t[e+1]}' not found!`);r.push(t[e],s)}}}(n,r,i)}n.mergedAttrs=An(n.mergedAttrs,n.attrs)}(t,n,l,qt(o,i)),null!==l.attrs&&Ks(l,l.attrs,!1),null!==l.mergedAttrs&&Ks(l,l.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,l),l}(i,a,s,0,t,n,r):a.data[i];nn(u,!0);const c=u.mergedAttrs;null!==c&&$n(o,l,c);const h=u.classes;null!==h&&Kr(o,l,h);const d=u.styles;null!==d&&qr(o,l,d),64!=(64&u.flags)&&Wr(a,s,l,u),0===Zt.lFrame.elementDepthCount&&Sr(l,s),Zt.lFrame.elementDepthCount++,_t(u)&&(function(e,t,n){Yt()&&(function(e,t,n,r){const s=n.directiveStart,a=n.directiveEnd;e.firstCreatePass||zn(n,t),Sr(r,t);const i=n.initialInputs;for(let o=s;o<a;o++){const r=e.data[o],a=$t(r);a&&Rs(t,n,r);const l=Xn(t,e,o,n);Sr(l,t),null!==i&&Fs(0,o-s,l,r,0,i),a&&(Ht(n.index,t)[8]=l)}}(e,t,n,Wt(n,t)),128==(128&n.flags)&&function(e,t,n){const r=n.directiveStart,s=n.directiveEnd,a=n.index,i=Zt.lFrame.currentDirectiveIndex;try{vn(a);for(let n=r;n<s;n++){const r=e.data[n],s=t[n];un(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||Ts(r,s)}}finally{vn(-1),un(i)}}(e,t,n))}(a,s,u),function(e,t,n){if(St(t)){const r=t.directiveEnd;for(let s=t.directiveStart;s<r;s++){const t=e.data[s];t.contentQueries&&t.contentQueries(1,n[s],s)}}}(a,u,s)),null!==r&&function(e,t,n=Wt){const r=t.localNames;if(null!==r){let s=t.index+1;for(let a=0;a<r.length;a+=2){const i=r[a+1],o=-1===i?n(t,e):e[i];e[s++]=o}}}(s,u)}function Ta(){let e=en();rn()?Zt.lFrame.isParent=!1:(e=e.parent,nn(e,!1));const t=e;Zt.lFrame.elementDepthCount--;const n=Qt();n.firstCreatePass&&(wn(n,e),St(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function(e){return 0!=(16&e.flags)}(t)&&Ca(n,t,Jt(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function(e){return 0!=(32&e.flags)}(t)&&Ca(n,t,Jt(),t.stylesWithoutHost,!1)}function _a(e){return!!e&&"function"==typeof e.then}function $a(e,t,n=!1,r){const s=Jt(),a=Qt(),i=en();return function(e,t,n,r,s,a,i=!1,o){const l=_t(r),u=e.firstCreatePass&&Gs(e),c=Hs(t);let h=!0;if(3&r.type){const d=Wt(r,t),p=o?o(d):rt,f=p.target||d,m=c.length,g=o?e=>o(Bt(e[r.index])).target:r.index;if(zt(n)){let i=null;if(!o&&l&&(i=function(e,t,n,r){const s=e.cleanup;if(null!=s)for(let a=0;a<s.length-1;a+=2){const e=s[a];if(e===n&&s[a+1]===r){const e=t[7],n=s[a+2];return e.length>n?e[n]:null}"string"==typeof e&&(a+=2)}return null}(e,t,s,r.index)),null!==i)(i.__ngLastListenerFn__||i).__ngNextListenerFn__=a,i.__ngLastListenerFn__=a,h=!1;else{a=Aa(r,t,a,!1);const e=n.listen(p.name||f,s,a);c.push(a,e),u&&u.push(s,g,m,m+1)}}else a=Aa(r,t,a,!0),f.addEventListener(s,a,i),c.push(a),u&&u.push(s,g,m,i)}else a=Aa(r,t,a,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const e=p.length;if(e)for(let n=0;n<e;n+=2){const e=t[p[n]][p[n+1]].subscribe(a),i=c.length;c.push(a,e),u&&u.push(s,r.index,i,-(i+1))}}}(a,s,s[11],i,e,t,n,r),$a}function Ea(e,t,n){try{return!1!==t(n)}catch(r){return js(e,r),!1}}function Aa(e,t,n,r){return function s(a){if(a===Function)return n;const i=2&e.flags?Ht(e.index,t):t;0==(32&t[2])&&Ps(i);let o=Ea(t,n,a),l=s.__ngNextListenerFn__;for(;l;)o=Ea(t,l,a)&&o,l=l.__ngNextListenerFn__;return r&&!1===o&&(a.preventDefault(),a.returnValue=!1),o}}const Ra=[];function Fa(e,t,n,r,s){const a=e[n+1],i=null===t;let o=r?cs(a):ds(a),l=!1;for(;0!==o&&(!1===l||i);){const n=e[o+1];Da(e[o],t)&&(l=!0,e[o+1]=r?fs(n):hs(n)),o=r?cs(n):ds(n)}l&&(e[n+1]=r?hs(a):fs(a))}function Da(e,t){return null===e||null==t||(Array.isArray(e)?e[1]:e)===t||!(!Array.isArray(e)||"string"!=typeof t)&&lr(e,t)>=0}function Oa(e,t){return function(e,t,n,r){const s=Jt(),a=Qt(),i=function(e){const t=Zt.lFrame,n=t.bindingIndex;return t.bindingIndex=t.bindingIndex+2,n}();a.firstUpdatePass&&function(e,t,n,r){const s=e.data;if(null===s[n+1]){const a=s[xn()],i=function(e,t){return t>=e.expandoStartIndex}(e,n);(function(e,t){return 0!=(16&e.flags)})(a)&&null===t&&!i&&(t=!1),t=function(e,t,n,r){const s=function(e){const t=Zt.lFrame.currentDirectiveIndex;return-1===t?null:e[t]}(e);let a=t.residualClasses;if(null===s)0===t.classBindings&&(n=La(n=Ma(null,e,t,n,r),t.attrs,r),a=null);else{const i=t.directiveStylingLast;if(-1===i||e[i]!==s)if(n=Ma(s,e,t,n,r),null===a){let n=function(e,t,n){const r=t.classBindings;if(0!==ds(r))return e[cs(r)]}(e,t);void 0!==n&&Array.isArray(n)&&(n=Ma(null,e,t,n[1],r),n=La(n,t.attrs,r),function(e,t,n,r){e[cs(t.classBindings)]=r}(e,t,0,n))}else a=function(e,t,n){let r;const s=t.directiveEnd;for(let a=1+t.directiveStylingLast;a<s;a++)r=La(r,e[a].hostAttrs,true);return La(r,t.attrs,true)}(e,t)}return void 0!==a&&(t.residualClasses=a),n}(s,a,t,r),function(e,t,n,r,s,a){let i=t.classBindings,o=cs(i),l=ds(i);e[r]=n;let u,c=!1;if(Array.isArray(n)){const e=n;u=e[1],(null===u||lr(e,u)>0)&&(c=!0)}else u=n;if(s)if(0!==l){const t=cs(e[o+1]);e[r+1]=us(t,o),0!==t&&(e[t+1]=ps(e[t+1],r)),e[o+1]=131071&e[o+1]|r<<17}else e[r+1]=us(o,0),0!==o&&(e[o+1]=ps(e[o+1],r)),o=r;else e[r+1]=us(l,0),0===o?o=r:e[l+1]=ps(e[l+1],r),l=r;c&&(e[r+1]=hs(e[r+1])),Fa(e,u,r,!0),Fa(e,u,r,!1),function(e,t,n,r,s){const a=e.residualClasses;null!=a&&"string"==typeof t&&lr(a,t)>=0&&(n[r+1]=fs(n[r+1]))}(t,u,e,r),i=us(o,l),t.classBindings=i}(s,a,t,n,i)}}(a,e,i,true),t!==is&&ka(s,i,t)&&function(e,t,n,r,s,a,i,o){if(!(3&t.type))return;const l=e.data,u=l[o+1];Pa(1==(1&u)?za(l,t,n,s,ds(u),i):void 0)||(Pa(a)||function(e){return 2==(2&e)}(u)&&(a=za(l,null,n,s,o,i)),function(e,t,n,r,s){const a=zt(e);s?a?e.addClass(n,r):n.classList.add(r):a?e.removeClass(n,r):n.classList.remove(r)}(r,0,Vt(xn(),n),s,a))}(a,a.data[xn()],s,s[11],e,s[i+1]=function(e,t){return null==e||"object"==typeof e&&(e=Se(function(e){return e instanceof class{constructor(e){this.changingThisBreaksApplicationSecurity=e}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}?e.changingThisBreaksApplicationSecurity:e}(e))),e}(t),true,i)}(e,t),Oa}function Ma(e,t,n,r,s){let a=null;const i=n.directiveEnd;let o=n.directiveStylingLast;for(-1===o?o=n.directiveStart:o++;o<i&&(a=t[o],r=La(r,a.hostAttrs,s),a!==e);)o++;return null!==e&&(n.directiveStylingLast=o),r}function La(e,t,n){const r=n?1:2;let s=-1;if(null!==t)for(let a=0;a<t.length;a++){const i=t[a];"number"==typeof i?s=i:s===r&&(Array.isArray(e)||(e=void 0===e?[]:["",e]),ir(e,i,!!n||t[++a]))}return void 0===e?null:e}function za(e,t,n,r,s,a){const i=null===t;let o;for(;s>0;){const t=e[s],a=Array.isArray(t),l=a?t[1]:t,u=null===l;let c=n[s+1];c===is&&(c=u?Ra:void 0);let h=u?or(c,r):l===r?c:void 0;if(a&&!Pa(h)&&(h=or(t,r)),Pa(h)&&(o=h,i))return o;const d=e[s+1];s=i?cs(d):ds(d)}if(null!==t){let e=a?t.residualClasses:t.residualStyles;null!=e&&(o=or(e,r))}return o}function Pa(e){return void 0!==e}function Ba(e,t=""){const n=Jt(),r=Qt(),s=e+kt,a=r.firstCreatePass?ys(r,s,1,t,null):r.data[s],i=n[s]=function(e,t){return zt(e)?e.createText(t):e.createTextNode(t)}(n[11],t);Wr(r,n,i,a),nn(a,!1)}function Va(e,t,n){const r=Jt(),s=function(e,t,n,r){return ka(e,on(),n)?t+Fe(n)+r:is}(r,e,t,n);return s!==is&&function(e,t,n){const r=Vt(t,e);!function(e,t,n){zt(e)?e.setValue(t,n):t.textContent=n}(e[11],r,n)}(r,xn(),s),Va}const Wa=void 0;var Ua=["en",[["a","p"],["AM","PM"],Wa],[["AM","PM"],Wa,Wa],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],Wa,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],Wa,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",Wa,"{1} 'at' {0}",Wa],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(e){let t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}];let Ha={};function Ga(e){return e in Ha||(Ha[e]=nt.ng&&nt.ng.common&&nt.ng.common.locales&&nt.ng.common.locales[e]),Ha[e]}var ja=function(e){return e[e.LocaleId=0]="LocaleId",e[e.DayPeriodsFormat=1]="DayPeriodsFormat",e[e.DayPeriodsStandalone=2]="DayPeriodsStandalone",e[e.DaysFormat=3]="DaysFormat",e[e.DaysStandalone=4]="DaysStandalone",e[e.MonthsFormat=5]="MonthsFormat",e[e.MonthsStandalone=6]="MonthsStandalone",e[e.Eras=7]="Eras",e[e.FirstDayOfWeek=8]="FirstDayOfWeek",e[e.WeekendRange=9]="WeekendRange",e[e.DateFormat=10]="DateFormat",e[e.TimeFormat=11]="TimeFormat",e[e.DateTimeFormat=12]="DateTimeFormat",e[e.NumberSymbols=13]="NumberSymbols",e[e.NumberFormats=14]="NumberFormats",e[e.CurrencyCode=15]="CurrencyCode",e[e.CurrencySymbol=16]="CurrencySymbol",e[e.CurrencyName=17]="CurrencyName",e[e.Currencies=18]="Currencies",e[e.Directionality=19]="Directionality",e[e.PluralCase=20]="PluralCase",e[e.ExtraData=21]="ExtraData",e}({});const qa="en-US";let Ka=qa;function Xa(e){var t,n;n="Expected localeId to be defined",null==(t=e)&&function(e,t,n,r){throw new Error(`ASSERTION ERROR: ${e} [Expected=> null != ${t} <=Actual]`)}(n,t),"string"==typeof e&&(Ka=e.toLowerCase().replace(/_/g,"-"))}function Za(e,t,n,r,s){if(e=Ee(e),Array.isArray(e))for(let a=0;a<e.length;a++)Za(e[a],t,n,r,s);else{const a=Qt(),i=Jt();let o=ua(e)?e:Ee(e.provide),l=ia(e);const u=en(),c=1048575&u.providerIndexes,h=u.directiveStart,d=u.providerIndexes>>20;if(ua(e)||!e.multi){const r=new _n(l,s,Ia),p=Qa(o,t,s?c:c+d,h);-1===p?(Wn(zn(u,i),a,o),Ya(a,e,t.length),t.push(o),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(r),i.push(r)):(n[p]=r,i[p]=r)}else{const p=Qa(o,t,c+d,h),f=Qa(o,t,c,c+d),m=p>=0&&n[p],g=f>=0&&n[f];if(s&&!g||!s&&!m){Wn(zn(u,i),a,o);const c=function(e,t,n,r,s){const a=new _n(e,n,Ia);return a.multi=[],a.index=t,a.componentProviders=0,Ja(a,s,r&&!n),a}(s?ti:ei,n.length,s,r,l);!s&&g&&(n[f].providerFactory=c),Ya(a,e,t.length,0),t.push(o),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(c),i.push(c)}else Ya(a,e,p>-1?p:f,Ja(n[s?f:p],l,!s&&r));!s&&r&&g&&n[f].componentProviders++}}}function Ya(e,t,n,r){const s=ua(t);if(s||t.useClass){const a=(t.useClass||t).prototype.ngOnDestroy;if(a){const i=e.destroyHooks||(e.destroyHooks=[]);if(!s&&t.multi){const e=i.indexOf(n);-1===e?i.push(n,[r,a]):i[e+1].push(r,a)}else i.push(n,a)}}}function Ja(e,t,n){return n&&e.componentProviders++,e.multi.push(t)-1}function Qa(e,t,n,r){for(let s=n;s<r;s++)if(t[s]===e)return s;return-1}function ei(e,t,n,r){return ni(this.multi,[])}function ti(e,t,n,r){const s=this.multi;let a;if(this.providerFactory){const e=this.providerFactory.componentProviders,t=Xn(n,n[1],this.providerFactory.index,r);a=t.slice(0,e),ni(s,a);for(let n=e;n<t.length;n++)a.push(t[n])}else a=[],ni(s,a);return a}function ni(e,t){for(let n=0;n<e.length;n++)t.push((0,e[n])());return t}function ri(e,t=[]){return n=>{n.providersResolver=(n,r)=>function(e,t,n){const r=Qt();if(r.firstCreatePass){const s=$t(e);Za(n,r.data,r.blueprint,s,!0),Za(t,r.data,r.blueprint,s,!1)}}(n,r?r(e):e,t)}}class si{}class ai{resolveComponentFactory(e){throw function(e){const t=Error(`No component factory found for ${Se(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(e)}}let ii=(()=>{class e{}return e.NULL=new ai,e})();function oi(...e){}function li(e,t){return new ci(Wt(e,t))}const ui=function(){return li(en(),Jt())};let ci=(()=>{class e{constructor(e){this.nativeElement=e}}return e.__NG_ELEMENT_ID__=ui,e})();class hi{}let di=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>pi(),e})();const pi=function(){const e=Jt(),t=Ht(en().index,e);return function(e){return e[11]}(Nt(t)?t:e)};let fi=(()=>{class e{}return e.\u0275prov=Me({token:e,providedIn:"root",factory:()=>null}),e})();class mi{constructor(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}}const gi=new mi("11.2.3");class yi{constructor(){}supports(e){return va(e)}create(e){return new xi(e)}}const bi=(e,t)=>t;class xi{constructor(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||bi}forEachItem(e){let t;for(t=this._itHead;null!==t;t=t._next)e(t)}forEachOperation(e){let t=this._itHead,n=this._removalsHead,r=0,s=null;for(;t||n;){const a=!n||t&&t.currentIndex<Ii(n,r,s)?t:n,i=Ii(a,r,s),o=a.currentIndex;if(a===n)r--,n=n._nextRemoved;else if(t=t._next,null==a.previousIndex)r++;else{s||(s=[]);const e=i-r,t=o-r;if(e!=t){for(let n=0;n<e;n++){const r=n<s.length?s[n]:s[n]=0,a=r+n;t<=a&&a<e&&(s[n]=r+1)}s[a.previousIndex]=t-e}}i!==o&&e(a,i,o)}}forEachPreviousItem(e){let t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachMovedItem(e){let t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}forEachIdentityChange(e){let t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)}diff(e){if(null==e&&(e=[]),!va(e))throw new Error(`Error trying to diff '${Se(e)}'. Only arrays and iterables are allowed`);return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t,n,r,s=this._itHead,a=!1;if(Array.isArray(e)){this.length=e.length;for(let t=0;t<this.length;t++)n=e[t],r=this._trackByFn(t,n),null!==s&&Object.is(s.trackById,r)?(a&&(s=this._verifyReinsertion(s,n,r,t)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,t),a=!0),s=s._next}else t=0,function(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)t(e[n]);else{const n=e[xa()]();let r;for(;!(r=n.next()).done;)t(r.value)}}(e,e=>{r=this._trackByFn(t,e),null!==s&&Object.is(s.trackById,r)?(a&&(s=this._verifyReinsertion(s,e,r,t)),Object.is(s.item,e)||this._addIdentityChange(s,e)):(s=this._mismatch(s,e,r,t),a=!0),s=s._next,t++}),this.length=t;return this._truncate(s),this.collection=e,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let e;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=e._nextMoved)e.previousIndex=e.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(e,t,n,r){let s;return null===e?s=this._itTail:(s=e._prev,this._remove(e)),null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,s,r)):null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,s,r)):e=this._addAfter(new vi(t,n),s,r),e}_verifyReinsertion(e,t,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?e=this._reinsertAfter(s,e._prev,r):e.currentIndex!=r&&(e.currentIndex=r,this._addToMoves(e,r)),e}_truncate(e){for(;null!==e;){const t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);const r=e._prevRemoved,s=e._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(e,t,n),this._addToMoves(e,n),e}_moveAfter(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e}_addAfter(e,t,n){return this._insertAfter(e,t,n),this._additionsTail=null===this._additionsTail?this._additionsHead=e:this._additionsTail._nextAdded=e,e}_insertAfter(e,t,n){const r=null===t?this._itHead:t._next;return e._next=r,e._prev=t,null===r?this._itTail=e:r._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new ki),this._linkedRecords.put(e),e.currentIndex=n,e}_remove(e){return this._addToRemovals(this._unlink(e))}_unlink(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);const t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e}_addToMoves(e,t){return e.previousIndex===t||(this._movesTail=null===this._movesTail?this._movesHead=e:this._movesTail._nextMoved=e),e}_addToRemovals(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new ki),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e}_addIdentityChange(e,t){return e.item=t,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=e:this._identityChangesTail._nextIdentityChange=e,e}}class vi{constructor(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class wi{constructor(){this._head=null,this._tail=null}add(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)}get(e,t){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&Object.is(n.trackById,e))return n;return null}remove(e){const t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head}}class ki{constructor(){this.map=new Map}put(e){const t=e.trackById;let n=this.map.get(t);n||(n=new wi,this.map.set(t,n)),n.add(e)}get(e,t){const n=this.map.get(e);return n?n.get(e,t):null}remove(e){const t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Ii(e,t,n){const r=e.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+t+s}class Ni{constructor(){}supports(e){return e instanceof Map||wa(e)}create(){return new Ci}}class Ci{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(e){let t;for(t=this._mapHead;null!==t;t=t._next)e(t)}forEachPreviousItem(e){let t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)}forEachChangedItem(e){let t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}diff(e){if(e){if(!(e instanceof Map||wa(e)))throw new Error(`Error trying to diff '${Se(e)}'. Only maps and objects are allowed`)}else e=new Map;return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t=this._mapHead;if(this._appendAfter=null,this._forEach(e,(e,n)=>{if(t&&t.key===n)this._maybeAddToChanges(t,e),this._appendAfter=t,t=t._next;else{const r=this._getOrCreateRecordForKey(n,e);t=this._insertBeforeOrAppend(t,r)}}),t){t._prev&&(t._prev._next=null),this._removalsHead=t;for(let e=t;null!==e;e=e._nextRemoved)e===this._mapHead&&(this._mapHead=null),this._records.delete(e.key),e._nextRemoved=e._next,e.previousValue=e.currentValue,e.currentValue=null,e._prev=null,e._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(e,t){if(e){const n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null}_getOrCreateRecordForKey(e,t){if(this._records.has(e)){const n=this._records.get(e);this._maybeAddToChanges(n,t);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new Si(e);return this._records.set(e,n),n.currentValue=t,this._addToAdditions(n),n}_reset(){if(this.isDirty){let e;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(e,t){Object.is(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))}_addToAdditions(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)}_addToChanges(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)}_forEach(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(n=>t(e[n],n))}}class Si{constructor(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function Ti(){return new _i([new yi])}let _i=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(null!=n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||Ti()),deps:[[e,new wr,new vr]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(null!=t)return t;throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);var n}}return e.\u0275prov=Me({token:e,providedIn:"root",factory:Ti}),e})();function $i(){return new Ei([new Ni])}let Ei=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||$i()),deps:[[e,new wr,new vr]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(t)return t;throw new Error(`Cannot find a differ supporting object '${e}'`)}}return e.\u0275prov=Me({token:e,providedIn:"root",factory:$i}),e})();function Ai(e,t,n,r,s=!1){for(;null!==n;){const a=t[n.index];if(null!==a&&r.push(Bt(a)),Ct(a))for(let e=It;e<a.length;e++){const t=a[e],n=t[1].firstChild;null!==n&&Ai(t[1],t,n,r)}const i=n.type;if(8&i)Ai(e,t,n.child,r);else if(32&i){const e=Er(n,t);let s;for(;s=e();)r.push(s)}else if(16&i){const e=Ur(t,n);if(Array.isArray(e))r.push(...e);else{const n=Ar(t[16]);Ai(n[1],n,e,r,!0)}}n=s?n.projectionNext:n.next}return r}class Ri extends class{constructor(e,t){this._lView=e,this._cdRefInjectingView=t,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const e=this._lView,t=e[1];return Ai(t,e,t.firstChild,[])}get context(){return this._lView[8]}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const e=this._lView[3];if(Ct(e)){const t=e[8],n=t?t.indexOf(this):-1;n>-1&&(function(e,t){if(e.length<=It)return;const n=It+t,r=e[n];if(r){const a=r[17];null!==a&&a!==e&&Lr(a,r),t>0&&(e[n-1][4]=r[4]);const i=ar(e,It+t);Gr(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const o=i[19];null!==o&&o.detachView(i[1]),r[3]=null,r[4]=null,r[2]&=-129}var s}(e,n),ar(t,n))}this._attachedToViewContainer=!1}!function(e,t){if(!(256&t[2])){const n=t[11];zt(n)&&n.destroyNode&&Gr(e,t,n,3,null,null),function(e){let t=e[13];if(!t)return zr(e[1],e);for(;t;){let n=null;if(Nt(t))n=t[13];else{const e=t[10];e&&(n=e)}if(!n){for(;t&&!t[4]&&t!==e;)Nt(t)&&zr(t[1],t),t=t[3];null===t&&(t=e),Nt(t)&&zr(t[1],t),n=t&&t[4]}t=n}}(t)}}(this._lView[1],this._lView)}onDestroy(e){!function(e,t,n,r){const s=Hs(t);s.push(r)}(0,this._lView,0,e)}markForCheck(){Ps(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Bs(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(e,t,n){an(!0);try{Bs(e,t,n)}finally{an(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var e;this._appRef=null,Gr(this._lView[1],e=this._lView,e[11],2,null,null)}attachToAppRef(e){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e}}{constructor(e){super(e),this._view=e}detectChanges(){Vs(this._view)}checkNoChanges(){!function(e){an(!0);try{Vs(e)}finally{an(!1)}}(this._view)}get context(){return null}}const Fi=[new Ni],Di=new _i([new yi]),Oi=new Ei(Fi);class Mi{}const Li={};class zi extends ii{constructor(e){super(),this.ngModule=e}resolveComponentFactory(e){const t=vt(e);return new Vi(t,this.ngModule)}}function Pi(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}const Bi=new rr("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Tr});class Vi extends si{constructor(e,t){super(),this.componentDef=e,this.ngModule=t,this.componentType=e.type,this.selector=e.selectors.map(as).join(","),this.ngContentSelectors=e.ngContentSelectors?e.ngContentSelectors:[],this.isBoundToModule=!!t}get inputs(){return Pi(this.componentDef.inputs)}get outputs(){return Pi(this.componentDef.outputs)}create(e,t,n,r){const s=(r=r||this.ngModule)?function(e,t){return{get:(n,r,s)=>{const a=e.get(n,Li,s);return a!==Li||r===Li?a:t.get(n,r,s)}}}(e,r.injector):e,a=s.get(hi,Pt),i=s.get(fi,null),o=a.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",u=n?function(e,t,n){if(zt(e))return e.selectRootElement(t,n===Ye.ShadowDom);let r="string"==typeof t?e.querySelector(t):t;return r.textContent="",r}(o,n,this.componentDef.encapsulation):Mr(a.createRenderer(null,this.componentDef),l,function(e){const t=e.toLowerCase();return"svg"===t?"http://www.w3.org/2000/svg":"math"===t?"http://www.w3.org/1998/MathML/":null}(l)),c=this.componentDef.onPush?576:528,h={components:[],scheduler:Tr,clean:Us,playerHandler:null,flags:0},d=Ns(0,null,null,1,0,null,null,null,null,null),p=gs(null,d,h,c,null,null,a,o,i,s);let f,m;pn(p);try{const e=function(e,t,n,r,s,a){const i=n[1];n[20]=e;const o=ys(i,20,2,"#host",null),l=o.mergedAttrs=t.hostAttrs;null!==l&&(Ks(o,l,!0),null!==e&&($n(s,e,l),null!==o.classes&&Kr(s,e,o.classes),null!==o.styles&&qr(s,e,o.styles)));const u=r.createRenderer(e,t),c=gs(n,Is(t),null,t.onPush?64:16,n[20],o,r,u,null,null);return i.firstCreatePass&&(Wn(zn(o,n),i,t.type),_s(i,o),Es(o,n.length,1)),zs(n,c),n[20]=c}(u,this.componentDef,p,a,o);if(u)if(n)$n(o,u,["ng-version",gi.full]);else{const{attrs:e,classes:t}=function(e){const t=[],n=[];let r=1,s=2;for(;r<e.length;){let a=e[r];if("string"==typeof a)2===s?""!==a&&t.push(a,e[++r]):8===s&&n.push(a);else{if(!ts(s))break;s=a}r++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);e&&$n(o,u,e),t&&t.length>0&&Kr(o,u,t.join(" "))}if(m=Ut(d,kt),void 0!==t){const e=m.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=t[n];e.push(null!=r?Array.from(r):null)}}f=function(e,t,n,r,s){const a=n[1],i=function(e,t,n){const r=en();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),As(e,r,t,bs(e,t,1,null),n));const s=Xn(t,e,r.directiveStart,r);Sr(s,t);const a=Wt(r,t);return a&&Sr(a,t),s}(a,n,t);if(r.components.push(i),e[8]=i,s&&s.forEach(e=>e(i,t)),t.contentQueries){const e=en();t.contentQueries(1,i,e.directiveStart)}const o=en();return!a.firstCreatePass||null===t.hostBindings&&null===t.hostAttrs||(vn(o.index),Ss(n[1],o,0,o.directiveStart,o.directiveEnd,t),Ts(t,i)),i}(e,this.componentDef,p,h,[da]),xs(d,p,null)}finally{bn()}return new Wi(this.componentType,f,li(m,p),p,m)}}class Wi extends class{}{constructor(e,t,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=t,this.hostView=this.changeDetectorRef=new Ri(r),this.componentType=e}get injector(){return new Jn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(e){this.hostView.onDestroy(e)}}const Ui=new Map;class Hi extends Mi{constructor(e,t){super(),this._parent=t,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new zi(this);const n=wt(e),r=e[ut]||null;r&&Xa(r),this._bootstrapComponents=_r(n.bootstrap),this._r3Injector=ra(e,t,[{provide:Mi,useValue:this},{provide:ii,useValue:this.componentFactoryResolver}],Se(e)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(e)}get(e,t=ha.THROW_IF_NOT_FOUND,n=Ge.Default){return e===ha||e===Mi||e===Xs?this:this._r3Injector.get(e,t,n)}destroy(){const e=this._r3Injector;!e.destroyed&&e.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(e){this.destroyCbs.push(e)}}class Gi extends class{}{constructor(e){super(),this.moduleType=e,null!==wt(e)&&function(e){const t=new Set;!function e(n){const r=wt(n,!0),s=r.id;null!==s&&(function(e,t,n){if(t&&t!==n)throw new Error(`Duplicate module registered for ${e} - ${Se(t)} vs ${Se(t.name)}`)}(s,Ui.get(s),n),Ui.set(s,n));const a=_r(r.imports);for(const i of a)t.has(i)||(t.add(i),e(i))}(e)}(e)}create(e){return new Hi(this.moduleType,e)}}const ji=class extends J{constructor(e=!1){super(),this.__isAsync=e}emit(e){super.next(e)}subscribe(e,t,n){let r,s=e=>null,a=()=>null;e&&"object"==typeof e?(r=this.__isAsync?t=>{setTimeout(()=>e.next(t))}:t=>{e.next(t)},e.error&&(s=this.__isAsync?t=>{setTimeout(()=>e.error(t))}:t=>{e.error(t)}),e.complete&&(a=this.__isAsync?()=>{setTimeout(()=>e.complete())}:()=>{e.complete()})):(r=this.__isAsync?t=>{setTimeout(()=>e(t))}:t=>{e(t)},t&&(s=this.__isAsync?e=>{setTimeout(()=>t(e))}:e=>{t(e)}),n&&(a=this.__isAsync?()=>{setTimeout(()=>n())}:()=>{n()}));const i=super.subscribe(r,s,a);return e instanceof B&&e.add(i),i}},qi=new rr("Application Initializer");let Ki=(()=>{class e{constructor(e){this.appInits=e,this.resolve=oi,this.reject=oi,this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}runInitializers(){if(this.initialized)return;const e=[],t=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const t=this.appInits[n]();_a(t)&&e.push(t)}Promise.all(e).then(()=>{t()}).catch(e=>{this.reject(e)}),0===e.length&&t(),this.initialized=!0}}return e.\u0275fac=function(t){return new(t||e)(gr(qi,8))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Xi=new rr("AppId"),Zi={provide:Xi,useFactory:function(){return`${Yi()}${Yi()}${Yi()}`},deps:[]};function Yi(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Ji=new rr("Platform Initializer"),Qi=new rr("Platform ID"),eo=new rr("appBootstrapListener");let to=(()=>{class e{log(e){console.log(e)}warn(e){console.warn(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const no=new rr("LocaleId"),ro=new rr("DefaultCurrencyCode");class so{constructor(e,t){this.ngModuleFactory=e,this.componentFactories=t}}const ao=function(e){return new Gi(e)},io=ao,oo=function(e){return Promise.resolve(ao(e))},lo=function(e){const t=ao(e),n=_r(wt(e).declarations).reduce((e,t)=>{const n=vt(t);return n&&e.push(new Vi(n)),e},[]);return new so(t,n)},uo=lo,co=function(e){return Promise.resolve(lo(e))};let ho=(()=>{class e{constructor(){this.compileModuleSync=io,this.compileModuleAsync=oo,this.compileModuleAndAllComponentsSync=uo,this.compileModuleAndAllComponentsAsync=co}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const po=(()=>Promise.resolve(0))();function fo(e){"undefined"==typeof Zone?po.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class mo{constructor({enableLongStackTrace:e=!1,shouldCoalesceEventChangeDetection:t=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new ji(!1),this.onMicrotaskEmpty=new ji(!1),this.onStable=new ji(!1),this.onError=new ji(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),e&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&t,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let e=nt.requestAnimationFrame,t=nt.cancelAnimationFrame;if("undefined"!=typeof Zone&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const r=t[Zone.__symbol__("OriginalDelegate")];r&&(t=r)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function(e){const t=()=>{!function(e){-1===e.lastRequestAnimationFrameId&&(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(nt,()=>{e.fakeTopEventTask||(e.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{e.lastRequestAnimationFrameId=-1,bo(e),yo(e)},void 0,()=>{},()=>{})),e.fakeTopEventTask.invoke()}),bo(e))}(e)};e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,s,a,i,o)=>{try{return xo(e),n.invokeTask(s,a,i,o)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===a.type||e.shouldCoalesceRunChangeDetection)&&t(),vo(e)}},onInvoke:(n,r,s,a,i,o,l)=>{try{return xo(e),n.invoke(s,a,i,o,l)}finally{e.shouldCoalesceRunChangeDetection&&t(),vo(e)}},onHasTask:(t,n,r,s)=>{t.hasTask(r,s),n===r&&("microTask"==s.change?(e._hasPendingMicrotasks=s.microTask,bo(e),yo(e)):"macroTask"==s.change&&(e.hasPendingMacrotasks=s.macroTask))},onHandleError:(t,n,r,s)=>(t.handleError(r,s),e.runOutsideAngular(()=>e.onError.emit(s)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!mo.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(mo.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(e,t,n){return this._inner.run(e,t,n)}runTask(e,t,n,r){const s=this._inner,a=s.scheduleEventTask("NgZoneEvent: "+r,e,go,oi,oi);try{return s.runTask(a,t,n)}finally{s.cancelTask(a)}}runGuarded(e,t,n){return this._inner.runGuarded(e,t,n)}runOutsideAngular(e){return this._outer.run(e)}}const go={};function yo(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function bo(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&-1!==e.lastRequestAnimationFrameId)}function xo(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function vo(e){e._nesting--,yo(e)}class wo{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new ji,this.onMicrotaskEmpty=new ji,this.onStable=new ji,this.onError=new ji}run(e,t,n){return e.apply(t,n)}runGuarded(e,t,n){return e.apply(t,n)}runOutsideAngular(e){return e()}runTask(e,t,n,r){return e.apply(t,n)}}let ko=(()=>{class e{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{mo.assertNotInAngularZone(),fo(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())fo(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(t=>!t.updateCb||!t.updateCb(e)||(clearTimeout(t.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,t,n){let r=-1;t&&t>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(e=>e.timeoutId!==r),e(this._didWork,this.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:r,updateCb:n})}whenStable(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,t,n){return[]}}return e.\u0275fac=function(t){return new(t||e)(gr(mo))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),Io=(()=>{class e{constructor(){this._applications=new Map,So.addToWindow(this)}registerApplication(e,t){this._applications.set(e,t)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,t=!0){return So.findTestabilityInTree(this,e,t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class No{addToWindow(e){}findTestabilityInTree(e,t,n){return null}}let Co,So=new No,To=!0,_o=!1;const $o=new rr("AllowMultipleToken");function Eo(e,t,n=[]){const r=`Platform: ${t}`,s=new rr(r);return(t=[])=>{let a=Ao();if(!a||a.injector.get($o,!1))if(e)e(n.concat(t).concat({provide:s,useValue:!0}));else{const e=n.concat(t).concat({provide:s,useValue:!0},{provide:Ys,useValue:"platform"});!function(e){if(Co&&!Co.destroyed&&!Co.injector.get($o,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");Co=e.get(Ro);const t=e.get(Ji,null);t&&t.forEach(e=>e())}(ha.create({providers:e,name:r}))}return function(e){const t=Ao();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(s)}}function Ao(){return Co&&!Co.destroyed?Co:null}let Ro=(()=>{class e{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,t){const n=function(e,t){let n;return n="noop"===e?new wo:("zone.js"===e?void 0:e)||new mo({enableLongStackTrace:(_o=!0,To),shouldCoalesceEventChangeDetection:!!(null==t?void 0:t.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==t?void 0:t.ngZoneRunCoalescing)}),n}(t?t.ngZone:void 0,{ngZoneEventCoalescing:t&&t.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:t&&t.ngZoneRunCoalescing||!1}),r=[{provide:mo,useValue:n}];return n.run(()=>{const t=ha.create({providers:r,parent:this.injector,name:e.moduleType.name}),s=e.create(t),a=s.injector.get(Cr,null);if(!a)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const e=n.onError.subscribe({next:e=>{a.handleError(e)}});s.onDestroy(()=>{Oo(this._modules,s),e.unsubscribe()})}),function(e,t,n){try{const r=n();return _a(r)?r.catch(n=>{throw t.runOutsideAngular(()=>e.handleError(n)),n}):r}catch(r){throw t.runOutsideAngular(()=>e.handleError(r)),r}}(a,n,()=>{const e=s.injector.get(Ki);return e.runInitializers(),e.donePromise.then(()=>(Xa(s.injector.get(no,qa)||qa),this._moduleDoBootstrap(s),s))})})}bootstrapModule(e,t=[]){const n=Fo({},t);return function(e,t,n){const r=new Gi(n);return Promise.resolve(r)}(0,0,e).then(e=>this.bootstrapModuleFactory(e,n))}_moduleDoBootstrap(e){const t=e.injector.get(Do);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(e=>t.bootstrap(e));else{if(!e.instance.ngDoBootstrap)throw new Error(`The module ${Se(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);e.instance.ngDoBootstrap(t)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(t){return new(t||e)(gr(ha))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();function Fo(e,t){return Array.isArray(t)?t.reduce(Fo,e):Object.assign(Object.assign({},e),t)}let Do=(()=>{class e{constructor(e,t,n,r,s){this._zone=e,this._injector=t,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const a=new q(e=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{e.next(this._stable),e.complete()})}),i=new q(e=>{let t;this._zone.runOutsideAngular(()=>{t=this._zone.onStable.subscribe(()=>{mo.assertNotInAngularZone(),fo(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,e.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{mo.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{e.next(!1)}))});return()=>{t.unsubscribe(),n.unsubscribe()}});this.isStable=ge(a,i.pipe(e=>{return ye()((t=Ie,function(e){let n;n="function"==typeof t?t:function(){return t};const r=Object.create(e,we);return r.source=e,r.subjectFactory=n,r})(e));var t}))}bootstrap(e,t){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=e instanceof si?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(Mi),s=n.create(ha.NULL,[],t||n.selector,r),a=s.location.nativeElement,i=s.injector.get(ko,null),o=i&&s.injector.get(Io);return i&&o&&o.registerApplication(a,i),s.onDestroy(()=>{this.detachView(s.hostView),Oo(this.components,s),o&&o.unregisterApplication(a)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const t=e;this._views.push(t),t.attachToAppRef(this)}detachView(e){const t=e;Oo(this._views,t),t.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(eo,[]).concat(this._bootstrapListeners).forEach(t=>t(e))}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return e.\u0275fac=function(t){return new(t||e)(gr(mo),gr(ha),gr(Cr),gr(ii),gr(Ki))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();function Oo(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const Mo=Eo(null,"core",[{provide:Qi,useValue:"unknown"},{provide:Ro,deps:[ha]},{provide:Io,deps:[]},{provide:to,deps:[]}]),Lo=[{provide:Do,useClass:Do,deps:[mo,ha,Cr,ii,Ki]},{provide:Bi,deps:[mo],useFactory:function(e){let t=[];return e.onStable.subscribe(()=>{for(;t.length;)t.pop()()}),function(e){t.push(e)}}},{provide:Ki,useClass:Ki,deps:[[new vr,qi]]},{provide:ho,useClass:ho,deps:[]},Zi,{provide:_i,useFactory:function(){return Di},deps:[]},{provide:Ei,useFactory:function(){return Oi},deps:[]},{provide:no,useFactory:function(e){return Xa(e=e||"undefined"!=typeof $localize&&$localize.locale||qa),e},deps:[[new xr(no),new vr,new wr]]},{provide:ro,useValue:"USD"}];let zo=(()=>{class e{constructor(e){}}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)(gr(Do))},providers:Lo}),e})(),Po=null;function Bo(){return Po}const Vo=new rr("DocumentToken");var Wo=function(e){return e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.Two=2]="Two",e[e.Few=3]="Few",e[e.Many=4]="Many",e[e.Other=5]="Other",e}({});class Uo{}let Ho=(()=>{class e extends Uo{constructor(e){super(),this.locale=e}getPluralCategory(e,t){switch(function(e){return function(e){const t=function(e){return e.toLowerCase().replace(/_/g,"-")}(e);let n=Ga(t);if(n)return n;const r=t.split("-")[0];if(n=Ga(r),n)return n;if("en"===r)return Ua;throw new Error(`Missing locale data for the locale "${e}".`)}(e)[ja.PluralCase]}(t||this.locale)(e)){case Wo.Zero:return"zero";case Wo.One:return"one";case Wo.Two:return"two";case Wo.Few:return"few";case Wo.Many:return"many";default:return"other"}}}return e.\u0275fac=function(t){return new(t||e)(gr(no))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),Go=(()=>{class e{}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)},providers:[{provide:Uo,useClass:Ho}]}),e})();class jo extends class extends class{}{constructor(){super()}supportsDOMEvents(){return!0}}{static makeCurrent(){var e;e=new jo,Po||(Po=e)}getProperty(e,t){return e[t]}log(e){window.console&&window.console.log&&window.console.log(e)}logGroup(e){window.console&&window.console.group&&window.console.group(e)}logGroupEnd(){window.console&&window.console.groupEnd&&window.console.groupEnd()}onAndCancel(e,t,n){return e.addEventListener(t,n,!1),()=>{e.removeEventListener(t,n,!1)}}dispatchEvent(e,t){e.dispatchEvent(t)}remove(e){return e.parentNode&&e.parentNode.removeChild(e),e}getValue(e){return e.value}createElement(e,t){return(t=t||this.getDefaultDocument()).createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null}getHistory(){return window.history}getLocation(){return window.location}getBaseHref(e){const t=Ko||(Ko=document.querySelector("base"),Ko)?Ko.getAttribute("href"):null;return null==t?null:(n=t,qo||(qo=document.createElement("a")),qo.setAttribute("href",n),"/"===qo.pathname.charAt(0)?qo.pathname:"/"+qo.pathname);var n}resetBaseElement(){Ko=null}getUserAgent(){return window.navigator.userAgent}performanceNow(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()}supportsCookies(){return!0}getCookie(e){return function(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const e=n.indexOf("="),[r,s]=-1==e?[n,""]:[n.slice(0,e),n.slice(e+1)];if(r.trim()===t)return decodeURIComponent(s)}return null}(document.cookie,e)}}let qo,Ko=null;const Xo=new rr("TRANSITION_ID"),Zo=[{provide:qi,useFactory:function(e,t,n){return()=>{n.get(Ki).donePromise.then(()=>{const n=Bo();Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t=>t.getAttribute("ng-transition")===e).forEach(e=>n.remove(e))})}},deps:[Xo,Vo,ha],multi:!0}];class Yo{static init(){var e;e=new Yo,So=e}addToWindow(e){nt.getAngularTestability=(t,n=!0)=>{const r=e.findTestabilityInTree(t,n);if(null==r)throw new Error("Could not find testability for element.");return r},nt.getAllAngularTestabilities=()=>e.getAllTestabilities(),nt.getAllAngularRootElements=()=>e.getAllRootElements(),nt.frameworkStabilizers||(nt.frameworkStabilizers=[]),nt.frameworkStabilizers.push(e=>{const t=nt.getAllAngularTestabilities();let n=t.length,r=!1;const s=function(t){r=r||t,n--,0==n&&e(r)};t.forEach(function(e){e.whenStable(s)})})}findTestabilityInTree(e,t,n){if(null==t)return null;const r=e.getTestability(t);return null!=r?r:n?Bo().isShadowRoot(t)?this.findTestabilityInTree(e,t.host,!0):this.findTestabilityInTree(e,t.parentElement,!0):null}}const Jo=new rr("EventManagerPlugins");let Qo=(()=>{class e{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(e=>e.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)}addGlobalEventListener(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)}getZone(){return this._zone}_findPluginFor(e){const t=this._eventNameToPlugin.get(e);if(t)return t;const n=this._plugins;for(let r=0;r<n.length;r++){const t=n[r];if(t.supports(e))return this._eventNameToPlugin.set(e,t),t}throw new Error(`No event manager plugin found for event ${e}`)}}return e.\u0275fac=function(t){return new(t||e)(gr(Jo),gr(mo))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class el{constructor(e){this._doc=e}addGlobalEventListener(e,t,n){const r=Bo().getGlobalEventTarget(this._doc,e);if(!r)throw new Error(`Unsupported event target ${r} for event ${t}`);return this.addEventListener(r,t,n)}}let tl=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(e){const t=new Set;e.forEach(e=>{this._stylesSet.has(e)||(this._stylesSet.add(e),t.add(e))}),this.onStylesAdded(t)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),nl=(()=>{class e extends tl{constructor(e){super(),this._doc=e,this._hostNodes=new Set,this._styleNodes=new Set,this._hostNodes.add(e.head)}_addStylesToHost(e,t){e.forEach(e=>{const n=this._doc.createElement("style");n.textContent=e,this._styleNodes.add(t.appendChild(n))})}addHost(e){this._addStylesToHost(this._stylesSet,e),this._hostNodes.add(e)}removeHost(e){this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach(t=>this._addStylesToHost(e,t))}ngOnDestroy(){this._styleNodes.forEach(e=>Bo().remove(e))}}return e.\u0275fac=function(t){return new(t||e)(gr(Vo))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const rl={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},sl=/%COMP%/g;function al(e,t,n){for(let r=0;r<t.length;r++){let s=t[r];Array.isArray(s)?al(e,s,n):(s=s.replace(sl,e),n.push(s))}return n}function il(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let ol=(()=>{class e{constructor(e,t,n){this.eventManager=e,this.sharedStylesHost=t,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new ll(e)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case Ye.Emulated:{let n=this.rendererByCompId.get(t.id);return n||(n=new ul(this.eventManager,this.sharedStylesHost,t,this.appId),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n}case 1:case Ye.ShadowDom:return new cl(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){const e=al(t.id,t.styles,[]);this.sharedStylesHost.addStyles(e),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(t){return new(t||e)(gr(Qo),gr(nl),gr(Xi))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class ll{constructor(e){this.eventManager=e,this.data=Object.create(null)}destroy(){}createElement(e,t){return t?document.createElementNS(rl[t]||t,e):document.createElement(e)}createComment(e){return document.createComment(e)}createText(e){return document.createTextNode(e)}appendChild(e,t){e.appendChild(t)}insertBefore(e,t,n){e&&e.insertBefore(t,n)}removeChild(e,t){e&&e.removeChild(t)}selectRootElement(e,t){let n="string"==typeof e?document.querySelector(e):e;if(!n)throw new Error(`The selector "${e}" did not match any elements`);return t||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,t,n,r){if(r){t=r+":"+t;const s=rl[r];s?e.setAttributeNS(s,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)}removeAttribute(e,t,n){if(n){const r=rl[n];r?e.removeAttributeNS(r,t):e.removeAttribute(`${n}:${t}`)}else e.removeAttribute(t)}addClass(e,t){e.classList.add(t)}removeClass(e,t){e.classList.remove(t)}setStyle(e,t,n,r){r&($r.DashCase|$r.Important)?e.style.setProperty(t,n,r&$r.Important?"important":""):e.style[t]=n}removeStyle(e,t,n){n&$r.DashCase?e.style.removeProperty(t):e.style[t]=""}setProperty(e,t,n){e[t]=n}setValue(e,t){e.nodeValue=t}listen(e,t,n){return"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,il(n)):this.eventManager.addEventListener(e,t,il(n))}}class ul extends ll{constructor(e,t,n,r){super(e),this.component=n;const s=al(r+"-"+n.id,n.styles,[]);t.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(sl,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(sl,r+"-"+n.id)}applyToHost(e){super.setAttribute(e,this.hostAttr,"")}createElement(e,t){const n=super.createElement(e,t);return super.setAttribute(n,this.contentAttr,""),n}}class cl extends ll{constructor(e,t,n,r){super(e),this.sharedStylesHost=t,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=al(r.id,r.styles,[]);for(let a=0;a<s.length;a++){const e=document.createElement("style");e.textContent=s[a],this.shadowRoot.appendChild(e)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(e,t){return super.appendChild(this.nodeOrShadowRoot(e),t)}insertBefore(e,t,n){return super.insertBefore(this.nodeOrShadowRoot(e),t,n)}removeChild(e,t){return super.removeChild(this.nodeOrShadowRoot(e),t)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}}let hl=(()=>{class e extends el{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,n){return e.addEventListener(t,n,!1),()=>this.removeEventListener(e,t,n)}removeEventListener(e,t,n){return e.removeEventListener(t,n)}}return e.\u0275fac=function(t){return new(t||e)(gr(Vo))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const dl=["alt","control","meta","shift"],pl={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},fl={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},ml={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let gl=(()=>{class e extends el{constructor(e){super(e)}supports(t){return null!=e.parseEventName(t)}addEventListener(t,n,r){const s=e.parseEventName(n),a=e.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Bo().onAndCancel(t,s.domEventName,a))}static parseEventName(t){const n=t.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=e._normalizeKey(n.pop());let a="";if(dl.forEach(e=>{const t=n.indexOf(e);t>-1&&(n.splice(t,1),a+=e+".")}),a+=s,0!=n.length||0===s.length)return null;const i={};return i.domEventName=r,i.fullKey=a,i}static getEventFullKey(e){let t="",n=function(e){let t=e.key;if(null==t){if(t=e.keyIdentifier,null==t)return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&fl.hasOwnProperty(t)&&(t=fl[t]))}return pl[t]||t}(e);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),dl.forEach(r=>{r!=n&&(0,ml[r])(e)&&(t+=r+".")}),t+=n,t}static eventCallback(t,n,r){return s=>{e.getEventFullKey(s)===t&&r.runGuarded(()=>n(s))}}static _normalizeKey(e){switch(e){case"esc":return"escape";default:return e}}}return e.\u0275fac=function(t){return new(t||e)(gr(Vo))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const yl=Eo(Mo,"browser",[{provide:Qi,useValue:"browser"},{provide:Ji,useValue:function(){jo.makeCurrent(),Yo.init()},multi:!0},{provide:Vo,useFactory:function(){return function(e){Lt=e}(document),document},deps:[]}]),bl=[[],{provide:Ys,useValue:"root"},{provide:Cr,useFactory:function(){return new Cr},deps:[]},{provide:Jo,useClass:hl,multi:!0,deps:[Vo,mo,Qi]},{provide:Jo,useClass:gl,multi:!0,deps:[Vo]},[],{provide:ol,useClass:ol,deps:[Qo,nl,Xi]},{provide:hi,useExisting:ol},{provide:tl,useExisting:nl},{provide:nl,useClass:nl,deps:[Vo]},{provide:ko,useClass:ko,deps:[mo]},{provide:Qo,useClass:Qo,deps:[Jo,mo]},[]];let xl=(()=>{class e{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(t){return{ngModule:e,providers:[{provide:Xi,useValue:t.appId},{provide:Xo,useExisting:Xi},Zo]}}}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)(gr(e,12))},providers:bl,imports:[Go,zo]}),e})();"undefined"!=typeof window&&window;class vl{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class wl{refCount(e){return kl("refCount")}incRef(e){return kl("incRef")}timerAvailable(){return!0}time(e){return kl("time")}read(e){return kl("read")}readSync(e){return kl("readSync")}numDataIds(){return kl("numDataIds")}disposeData(e,t){return kl("disposeData")}write(e,t,n){return kl("write")}move(e,t,n,r,s){return kl("move")}memory(){return kl("memory")}floatPrecision(){return kl("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return kl("dispose")}}function kl(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Il(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function Nl(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,s=e.length,a=0;for(;s>0;)a=Math.random()*s|0,s--,n=e[s],r=t[s],e[s]=e[a],t[s]=t[a],e[a]=n,t[a]=r}function Cl(e,t,n){return Math.max(e,Math.min(t,n))}function Sl(e){return e%2==0?e:e+1}function Tl(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function _l(e,t){const n=Math.random();return t*n+(1-n)*e}function $l(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function El(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Al(e,t,n=""){El(Ml(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Rl(e){El(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function Fl(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Yl(e)&&!n)for(let r=0;r<e.length;++r)Fl(e[r],t,n);else t.push(e);return t}function Dl(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Ol(e){return 0===e.length}function Ml(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ll(e){return e%1==0}function zl(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function Pl(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Bl(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Il(t),t}function Vl(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Wl(e,t=(e=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function Ul(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function Hl(e,t){const n=t.length;return El((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),El(e.every(e=>Ll(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function Gl(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:Hl(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function jl(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ql(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Kl(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Xl(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Zl(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Yl(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Jl(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ql(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function eu(e){return"string"==typeof e||e instanceof String}function tu(e){return"boolean"==typeof e}function nu(e){return"number"==typeof e}function ru(e){return Array.isArray(e)?ru(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":nu(e)?"float32":eu(e)?"string":tu(e)?"bool":"float32"}function su(e){return!!(e&&e.constructor&&e.call&&e.apply)}function au(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function iu(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ou(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce((e,t)=>e*t);for(let t=0;t<s;t++)r[t]=ou(e+t*i,a,n)}return r}function lu(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return ou(0,e,t)}function uu(e,t){const n=cu(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function cu(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function hu(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return lu(e,new Float32Array(n));if("int32"===t)return lu(e,new Int32Array(n));if("bool"===t)return lu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function du(e){e.forEach(t=>{El(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function pu(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function fu(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function mu(e){return e&&e.then&&"function"==typeof e.then}class gu{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(mu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function yu(){return xu}let bu,xu=null;function vu(){if(null==bu){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}bu=e}return bu}function wu(e,t){const n=function(){const e=vu();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const ku="Abs",Iu="Acos",Nu="Acosh",Cu="Add",Su="AddN",Tu="All",_u="Any",$u="ArgMax",Eu="ArgMin",Au="Asin",Ru="Asinh",Fu="Atan",Du="Atanh",Ou="Atan2",Mu="AvgPool",Lu="AvgPoolGrad",zu="AvgPool3D",Pu="AvgPool3DGrad",Bu="BatchMatMul",Vu="BatchToSpaceND",Wu="Bincount",Uu="Cast",Hu="Ceil",Gu="ClipByValue",ju="Complex",qu="ComplexAbs",Ku="Concat",Xu="Conv2D",Zu="Conv2DBackpropFilter",Yu="Conv2DBackpropInput",Ju="Conv3D",Qu="Conv3DBackpropFilterV2",ec="Conv3DBackpropInputV2",tc="Cos",nc="Cosh",rc="Cumsum",sc="CropAndResize",ac="DenseBincount",ic="DepthToSpace",oc="DepthwiseConv2dNative",lc="DepthwiseConv2dNativeBackpropFilter",uc="DepthwiseConv2dNativeBackpropInput",cc="Diag",hc="Dilation2D",dc="Dilation2DBackpropInput",pc="Dilation2DBackpropFilter",fc="RealDiv",mc="Elu",gc="EluGrad",yc="Erf",bc="Equal",xc="Exp",vc="ExpandDims",wc="Expm1",kc="FFT",Ic="Fill",Nc="FlipLeftRight",Cc="Floor",Sc="FloorDiv",Tc="FusedBatchNorm",_c="GatherV2",$c="GatherNd",Ec="Greater",Ac="GreaterEqual",Rc="Identity",Fc="IFFT",Dc="Imag",Oc="IsFinite",Mc="IsInf",Lc="IsNan",zc="LeakyRelu",Pc="Less",Bc="LessEqual",Vc="LinSpace",Wc="Log",Uc="Log1p",Hc="LogicalAnd",Gc="LogicalNot",jc="LogicalOr",qc="LRN",Kc="LRNGrad",Xc="Max",Zc="Maximum",Yc="MaxPool",Jc="MaxPoolGrad",Qc="MaxPool3D",eh="MaxPool3DGrad",th="MaxPoolWithArgmax",nh="Mean",rh="Min",sh="Minimum",ah="MirrorPad",ih="Mod",oh="Multinomial",lh="Multiply",uh="Neg",ch="NotEqual",hh="NonMaxSuppressionV3",dh="NonMaxSuppressionV4",ph="NonMaxSuppressionV5",fh="OnesLike",mh="OneHot",gh="Pack",yh="PadV2",bh="Pow",xh="Prelu",vh="Prod",wh="Range",kh="Real",Ih="Reciprocal",Nh="Relu",Ch="Reshape",Sh="ResizeNearestNeighbor",Th="ResizeNearestNeighborGrad",_h="ResizeBilinear",$h="ResizeBilinearGrad",Eh="Relu6",Ah="Reverse",Rh="Round",Fh="Rsqrt",Dh="ScatterNd",Oh="Select",Mh="Selu",Lh="Slice",zh="Sin",Ph="Sinh",Bh="Sign",Vh="Sigmoid",Wh="Softplus",Uh="Sqrt",Hh="Sum",Gh="SpaceToBatchND",jh="SplitV",qh="Softmax",Kh="SquaredDifference",Xh="Square",Zh="Sub",Yh="SparseToDense",Jh="StridedSlice",Qh="Tan",ed="Tanh",td="Tile",nd="TopK",rd="Transpose",sd="Unique",ad="Unpack",id="UnsortedSegmentSum",od="ZerosLike",ld="Step",ud="FromPixels",cd="RotateWithOffset",hd="_FusedMatMul",dd="FusedConv2D",pd="FusedDepthwiseConv2D",fd=wu("kernelRegistry",()=>new Map),md=wu("gradRegistry",()=>new Map);function gd(e,t){const n=wd(e,t);return fd.get(n)}function yd(e){return md.get(e)}function bd(e){const t=fd.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function xd(e){const{kernelName:t,backendName:n}=e,r=wd(t,n);fd.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),fd.set(r,e)}function vd(e){const{kernelName:t}=e;md.has(t)&&yu().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),md.set(t,e)}function wd(e,t){return`${t}_${e}`}function kd(e,t){return"string"===t?Sd(e):Id([e],t)}function Id(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Fl(e)),yu().getBool("DEBUG")&&Kl(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Nd(){return yu().platform.now()}function Cd(e,t){return yu().platform.fetch(e,t)}function Sd(e,t="utf-8"){return t=t||"utf-8",yu().platform.encode(e,t)}function Td(e,t="utf-8"){return t=t||"utf-8",yu().platform.decode(e,t)}class _d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ed)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Nd();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Nd()-i})}if(yu().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then(n=>{$d(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(e=>{Promise.all([e.data(),r,a]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function $d(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class Ed{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?Vl(`${r}ms`,9):r.error,o=Vl(e,25),l=t.rank,u=t.size,c=Vl(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ad(e,t,n,r){const s=iu(t),a=function(e,t,n,r){const s=Dl(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Od(e):e;if(o>1)for(let u=0;u<s/a;u++){const e=u*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Rd(l[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,o=Dd(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function Rd(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:eu(e)?`'${e}'`:"bool"===n?Fd(e):parseFloat(e.toFixed(7)).toString(),Vl(r,t)}function Fd(e){return 0===e?"false":"true"}function Dd(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Rd(Od(e)[0],0,n)]:"bool"===n?[Fd(e[0])]:[e[0].toString()];if(1===l){if(o>20){let t=Array.from(e.slice(0,3*i)),r=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(t=Od(t),r=Od(r)),["["+t.map((e,t)=>Rd(e,s[t],n)).join(", ")+", ..., "+r.map((e,t)=>Rd(e,s[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?Od(e):Array.from(e)).map((e,t)=>Rd(e,s[t],n)).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h;d.push(...Dd(e.slice(r,r+h),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h;d.push(...Dd(e.slice(r,r+h),u,n,c,s,t===o-1))}}else for(let m=0;m<o;m++){const t=m*h;d.push(...Dd(e.slice(t,t+h),u,n,c,s,m===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Od(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Md{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Dl(e),null!=n){const e=n.length;El(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ql(t,this.size),this.strides=iu(e)}set(e,...t){0===t.length&&(t=[0]),El(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ld().makeTensor(this.values,this.shape,this.dtype)}}let Ld=null,zd=null,Pd=null;class Bd{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Dl(e),this.strides=iu(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return zd.buffer(this.shape,this.dtype,e)}bufferSync(){return zd.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return lu(this.shape,e)}arraySync(){return lu(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=Ld().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>Td(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Ld().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Td(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ld().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ld().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return zd.print(this,e)}clone(){return this.throwIfDisposed(),zd.clone(this)}toString(e=!1){return Ad(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),zd.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ld().makeVariable(this,e,t,n)}}function Vd(){return wu("Tensor",()=>Bd)}Object.defineProperty(Bd,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Vd();class Wd extends Bd{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ml(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ld().disposeTensor(this),this.dataId=e.dataId,Ld().incRef(this,null)}dispose(){Ld().disposeVariable(this),this.isDisposedInternal=!0}}var Ud,Hd,Gd,jd,qd;Object.defineProperty(Wd,Symbol.hasInstance,{value:e=>e instanceof Bd&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ud||(Ud={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Hd||(Hd={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Gd||(Gd={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(jd||(jd={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(qd||(qd={}));const Kd={float32:jd,int32:Hd,bool:Gd,complex64:qd};function Xd(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Kd[e][t]}function Zd(e){return Xd(e,"int32")}function Yd(e,t){if(e.dtype===t.dtype)return[e,t];const n=Xd(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Jd(e,t){El(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Qd(e,t){return t.some(t=>t.id===e.id)}function ep(e){const t=[];return tp(e,t,new Set),t}function tp(e,t,n){if(null==e)return;if(e instanceof Bd)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),tp(e,t,n))}}function np(e){return null!=e.kernelName}class rp{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class sp{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new rp}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new _d(this.backendInstance),!0}setupRegisteredKernels(){bd(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){bd(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof wl||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return sp.nextTensorId++}nextVariableId(){return sp.nextVariableId++}clone(e){const t=ip.runKernel(Rc,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>ip.runKernel(Uu,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==gd(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=r-t-s-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const l=np(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(np(e)){const{kernelName:t,inputs:s,attrs:a}=e,l=gd(t,this.backendName);El(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=np(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(e=>null!=u[e]?u[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=yd(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(El(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let s=e;"string"===(n=n||"float32")&&eu(e[0])&&(s=e.map(e=>Sd(e)));const a=r.write(s,t,n),i=new Bd(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Ql(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new Bd(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Wd(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Jl(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Wd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Jl(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=yd(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=cu(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ep(e),n=new Set(t.map(e=>e.id));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(El(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));El(s instanceof Bd,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=uu(Dl(e),"float32");return ip.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(t=>{const n=e[t.id];i.push(null!=n?n:null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!Ml(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,e=>this.tidy(e),op);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return El(su(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;El(t.every(e=>e instanceof Bd),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),El(n.value instanceof Bd,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),El(su(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];El(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),El(a.every(e=>e instanceof Bd),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Nd(),n=await this.backend.time(e);return n.wallMs=Nd()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new rp;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ap(){const e=vu();if(null==e._tfengine){const t=new gu(e);e._tfengine=new sp(t)}return xu=e._tfengine.ENV,Ld=()=>e._tfengine,e._tfengine}sp.nextTensorId=0,sp.nextVariableId=0;const ip=ap();function op(e,t){return ip.runKernel(Cu,{a:e,b:t})}function lp(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function up(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const cp=yu();function hp(e,t){let n=e;if(Yl(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Yl(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&yu().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&dp(e,r,[]),r}function dp(e,t,n){if(n=n||[],!Array.isArray(e)&&!Yl(e))return void El(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);El(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),El(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let s=0;s<e.length;++s)dp(e[s],r,n.concat(s))}function pp(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function fp(e,t,n,r="numeric"){if(e instanceof Bd)return pp(r,e.dtype,t,n),e;let s=ru(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),pp(r,s,t,n),null==e||!Yl(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const a=hp(e,s);Yl(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Id(e,s):Fl(e,[],!0);return ip.makeTensor(i,a,s)}function mp(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>fp(e,`${t}[${s}]`,n,r))}function gp(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ip.startScope(n);try{const t=r(...e);return mu(t)&&console.error("Cannot return a Promise inside of tidy."),ip.endScope(t),t}catch(t){throw ip.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}cp.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),cp.registerFlag("IS_BROWSER",()=>up()),cp.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),cp.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),cp.registerFlag("PROD",()=>!1),cp.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>cp.getBool("DEBUG")),cp.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),cp.registerFlag("IS_TEST",()=>!1),cp.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);const yp=gp({complex_:function(e,t){const n=fp(e,"real","complex"),r=fp(t,"imag","complex");return Al(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),ip.runKernel(ju,{real:n,imag:r})}});function bp(e,t,n,r){if(null==r&&(r=ru(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Yl(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){du(t);const e=Dl(t),r=Dl(n);El(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==Dl(t.slice(s));El(n[s]===t[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Yl(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Id(e,r):Fl(e,[],!0),ip.makeTensor(e,t,r)}function xp(e,t,n){return bp(e,t,hp(e,n),n)}const vp={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function wp(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ip(await Promise.all(r)),specs:n}}function kp(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=Dl(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=vp[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++)u[e]=h[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=$p()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++)u[e]=Math.round(h[e]*n.scale+n.min)}s+=l*o}else if("string"===i){const t=Dl(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=vp[i],a=e.slice(s,s+l*r);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=xp(e,o,"float32"),i=xp(r,o,"float32");n[t]=yp(s,i),s.dispose(),i.dispose()}}s+=l*r}"complex64"!==i&&(n[t]=xp(u,o,i))}return n}function Ip(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const Np="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Cp(e){return Np?Buffer.byteLength(e):new Blob([e]).size}function Sp(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Tp(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function _p(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Cp(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Cp(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function $p(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i];a[i]=e[n[s>>10]+(1023&s)]+t[s>>10]}return new Float32Array(s)}}class Ep{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ep.instance&&(Ep.instance=new Ep),Ep.instance}static registerSaveRouter(e){Ep.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ep.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ep.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ep.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ep.getInstance().loadRouters:Ep.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const Ap=e=>Ep.registerSaveRouter(e),Rp=e=>Ep.registerLoadRouter(e),Fp=e=>Ep.getSaveHandlers(e),Dp=(e,t)=>Ep.getLoadHandlers(e,t),Op="tensorflowjs",Mp="models_store",Lp="model_info_store";function zp(){if(!yu().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Pp(e){const t=e.result;t.createObjectStore(Mp,{keyPath:"modelPath"}),t.createObjectStore(Lp,{keyPath:"modelPath"})}class Bp{constructor(e){if(this.indexedDB=zp(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Op,1);r.onupgradeneeded=()=>Pp(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Mp,"readonly"),r=t.objectStore(Mp).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=_p(t),a=s.transaction(Lp,"readwrite");let i=a.objectStore(Lp);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Mp,"readwrite");const o=l.objectStore(Mp).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Lp);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}Bp.URL_SCHEME="indexeddb://";const Vp=e=>{return yu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bp.URL_SCHEME)?(t=e.slice(Bp.URL_SCHEME.length),new Bp(t)):null;var t};Ep.registerSaveRouter(Vp),Ep.registerLoadRouter(Vp);class Wp{constructor(){this.indexedDB=zp()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Op,1);n.onupgradeneeded=()=>Pp(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Lp,"readonly"),a=s.objectStore(Lp).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Bp.URL_SCHEME)?t.slice(Bp.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Op,1);r.onupgradeneeded=()=>Pp(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Lp,"readwrite"),i=a.objectStore(Lp),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Mp,"readwrite");const r=l.objectStore(Mp).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Up="/",Hp="tensorflowjs_models",Gp="info",jp="model_topology",qp="weight_specs",Kp="weight_data",Xp="model_metadata";function Zp(e){return{info:[Hp,e,Gp].join(Up),topology:[Hp,e,jp].join(Up),weightSpecs:[Hp,e,qp].join(Up),weightData:[Hp,e,Kp].join(Up),modelMetadata:[Hp,e,Xp].join(Up)}}function Yp(e){const t=e.split(Up);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Up)}class Jp{constructor(e){if(!yu().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Zp(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=_p(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(Np)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Np){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}Jp.URL_SCHEME="localstorage://";const Qp=e=>{return yu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Jp.URL_SCHEME)?(t=e.slice(Jp.URL_SCHEME.length),new Jp(t)):null;var t};Ep.registerSaveRouter(Qp),Ep.registerLoadRouter(Qp);class ef{constructor(){El(yu().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),El("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Hp+Up,n=Up+Gp;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Yp(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Zp(e=(t=e).startsWith(Jp.URL_SCHEME)?t.slice(Jp.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const tf="://";class nf{constructor(){this.managers={}}static getInstance(){return null==nf.instance&&(nf.instance=new nf),nf.instance}static registerManager(e,t){El(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(tf)&&(e=e.slice(0,e.indexOf(tf))),El(e.length>0,()=>"scheme must not be an empty string.");const n=nf.getInstance();El(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function rf(e){if(-1===e.indexOf(tf))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${nf.getSchemes().join(",")}`);return{scheme:e.split(tf)[0],path:e.split(tf)[1]}}async function sf(e,t,n=!1){El(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Ep.getLoadHandlers(e);El(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),El(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],a=Ep.getSaveHandlers(t);El(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),El(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],o=rf(e).scheme,l=rf(e).path,u=o===rf(e).scheme,c=await s.load();n&&u&&await nf.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await nf.getManager(o).removeModel(l),h.modelArtifactsInfo}async function af(){const e=nf.getSchemes(),t={};for(const n of e){const e=await nf.getManager(n).listModels();for(const r in e)t[n+tf+r]=e[r]}return t}async function of(e){const t=rf(e);return nf.getManager(t.scheme).removeModel(t.path)}async function lf(e,t){return sf(e,t,!1)}async function uf(e,t){return sf(e,t,!0)}class cf{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(yu().get("IS_BROWSER")){yu().setPlatform("browser",new cf);try{nf.registerManager(Jp.URL_SCHEME,new ef)}catch(HW){}try{nf.registerManager(Bp.URL_SCHEME,new Wp)}catch(HW){}}let hf;function df(e,t="float32",n){return t=t||"float32",du(e),new Md(e,t,n)}yu().get("IS_NODE")&&yu().setPlatform("node",new class{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=yu().global.fetch?yu().global.fetch(e,t):(null==hf&&(hf=n(1)),hf(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const pf=gp({cast_:function(e,t){const n=fp(e,"x","cast");if(!Xl(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return ip.runKernel(Uu,{x:n},{dtype:t})}}),ff=gp({clone_:function(e){const t=fp(e,"x","clone","string_or_numeric");return ip.runKernel(Rc,{x:t})}});function mf(e){return new Promise(e=>setTimeout(e)).then(e)}ap(),zd={buffer:df,cast:pf,clone:ff,print:function(e,t=!1){console.log(e.toString(t))}};class gf{constructor(e){if(!yu().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(gf.URL_SCHEME)&&(e=e.slice(gf.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await mf(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await mf(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:_p(e)}}}}gf.URL_SCHEME="downloads://";class yf{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let l;try{l=this.checkManifestAndWeightFiles(o,t)}catch(HW){return void r(HW)}const u=[],c=[],h=[];o.forEach(e=>{e.paths.forEach(e=>{c.push(e),h.push(null)}),u.push(...e.weights)}),o.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=c.indexOf(e);if(h[s]=r,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:u,weightData:Sp(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(l[e])})})},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Tp(e.name)),s={};for(const a of e)a.paths.forEach(e=>{const a=Tp(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[e]=t[r.indexOf(a)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function bf(e){return new yf(e)}function xf(e,t,n,r){!function(e){El(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){El(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),El(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),El(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const i=n+ ++s/e.length*(r-n);return t(i),a}),a)))}async function vf(e,t){null==t&&(t={});const n=null==t.fetchFunc?yu().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await xf(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await xf(s,t.onProgress,.5,1)}async function wf(e,t="",n,r){return kf(e=>vf(e,{requestInit:r}))(e,t,n)}function kf(e){return async(t,n="",r)=>{const s=t.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const l=vp["quantization"in e?e.quantization.dtype:e.dtype]*Dl(e.shape),u=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(u(),i[n]=!0)}):u(),o.push(e.name),n+=l})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});const c=await e(u),h={};let d=0;return l.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[d+t].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[d+t]);i.set(e,o),o+=e.byteLength}a[e].forEach(e=>{const t=kp(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]}),d+=n}),h}}Ep.registerSaveRouter(e=>yu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gf.URL_SCHEME)?function(e="model"){return new gf(e)}(e.slice(gf.URL_SCHEME.length)):null);class If{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(El("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=yu().platform.fetch,El(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&El(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./model.weights.bin"],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:_p(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(p){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const l of e)a.push(...l.weights);const i=[],o=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Sp(await vf(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Nf(e){return null!=e.match(If.URL_SCHEME_REGEX)}If.URL_SCHEME_REGEX=/^https?:\/\//;const Cf=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Nf(e)):Nf(e),n)return Sf(e,t)}return null};function Sf(e,t){return new If(e,t)}function Tf(e,t){return Sf(e,t)}Ep.registerSaveRouter(Cf),Ep.registerLoadRouter(Cf);class _f{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class $f{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Ef(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new _f(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _f({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _f({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Af(e){return new $f(e)}let Rf;async function Ff(e,t){let n=fp(e,"img","toPixels");if(!(e instanceof Bd)){const e=n;n=pf(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const Df=gp({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=gd(ud,ip.backendName))return ip.runKernel(ud,{pixels:e},{numChannels:t});const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(a||s||o)&&(null==Rf&&(Rf=document.createElement("canvas").getContext("2d")),Rf.canvas.width=l,Rf.canvas.height=u,Rf.drawImage(e,0,0,l,u),c=Rf.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(Rl(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=hp(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return bp(e,t,r,n)}(h,[u,l,t],"int32")}});function Of(e,t,n){const r=e.shape.length;El(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),El(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)El(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Mf(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Lf(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function zf(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Pf(e,t,n){return n<=e?n:n-(t-1)}function Bf(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Vf(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Wf(i,l,u,r,e),h=Uf(o,l,u,s,e),d=zf(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=Gf(i,r,a,e,p,l),h[p]=jf(o,s,a,e,p,l),d[p]=Hf(a,p,l);return{begin:c,end:h,strides:d}}function Wf(e,t,n,r,s){const a=[...s],i=Bf(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=Pf(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function Uf(e,t,n,r,s){const a=[...s],i=Bf(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=Pf(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=s[o];a[o]<0&&(a[o]+=e),a[o]=Cl(0,a[o],s[o])}return a}function Hf(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Gf(e,t,n,r,s,a){let i=t[s];(e&1<<s||a&1<<s||null==i)&&(i=(n[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[s];return i<0&&(i+=o),i=Cl(0,i,o-1),i}function jf(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?Cl(0,i,l):Cl(-1,i,l-1),i}function qf(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Kf(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Xf(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{El(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(El(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function Zf(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Mf(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Mf(o),m=e.slice();f.forEach(e=>{u[e]=0,c[e]=1,m.splice(e,0,1)});const{begin:g,end:y,strides:b}=Vf(m,d,p,u,c,h,s,a,i);u=g,c=y,h=b;const x=Mf(l);x.forEach(e=>{c[e]=u[e]+1,h[e]=1});const v=Lf(u,c,h),w=v.filter((e,t)=>-1===x.indexOf(t));return{nonStrided:h.every(e=>1===e),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}class Yf{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Jf{constructor(){this.classNameMap={}}static getMap(){return null==Jf.instance&&(Jf.instance=new Jf),Jf.instance}static register(e){Jf.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Qf(e){El(null!=e.className,()=>"Class being registered does not have the static className property defined."),El("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),El(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Jf.register(e)}function em(){return ip}function tm(){return ip.memory()}function nm(e,t){return ip.tidy(e,t)}function rm(e){ep(e).forEach(e=>e.dispose())}function sm(e){return ip.keep(e)}function am(e,t,n=1){return ip.registerBackend(e,t,n)}function im(e){return ip.customGrad(e)}function om(e,t){if((Yl(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Yl(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return bp(e,[],[],t)}Pd=function(e){yu().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class lm extends Yf{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return rm(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){El(su(e),()=>"The f passed in variableGrads(f) must be a function"),El(null==t||Array.isArray(t)&&t.every(e=>e instanceof Wd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ip.registeredVariables)t.push(ip.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;El((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=ip.gradients(e,t,null,!0);El(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),El(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&rm(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:om(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(lm,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const um=gp({abs_:function(e){const t=fp(e,"x","abs");return ip.runKernel("complex64"===t.dtype?qu:ku,{x:t})}}),cm=gp({add_:function(e,t){let n=fp(e,"a","add"),r=fp(t,"b","add");return[n,r]=Yd(n,r),ip.runKernel(Cu,{a:n,b:r})}}),hm=gp({all_:function(e,t=null,n=!1){const r=fp(e,"x","all","bool");return ip.runKernel(Tu,{x:r},{axis:t,keepDims:n})}}),dm=gp({any_:function(e,t=null,n=!1){const r=fp(e,"x","any","bool");return ip.runKernel(_u,{x:r},{axis:t,keepDims:n})}}),pm=gp({argMax_:function(e,t=0){const n=fp(e,"x","argMax");return ip.runKernel($u,{x:n},{axis:t})}});function fm(e,t,n,r,s="NHWC",a){return ym(e,[...t,e[3]],n,a,r,null,null,Sm(s))}function mm(e,t,n,r,s,a,i="channelsLast"){const[o,l]=vm(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ym(e,u,n,r,s,a,!1,i)}function gm(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=wm(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return bm(e,c,n,r,s,!1,h,a)}function ym(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=vm(n),[y,b]=vm(r),x=km(d,y),v=km(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=xm(e,t,n));const a=e[1];return[Im((e[0]-t+2*r)/n+1,s),Im((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Im((t-a+d+p)/r+1,o),h=Im((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,v,a,o),N=i?f*h:f;let C;return"channelsFirst"===o?C=[l,N,k,I]:"channelsLast"===o&&(C=[l,k,I,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:C,filterShape:t}}function bm(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=wm(n),[v,w,k]=wm(r),I=km(p,v),N=km(f,w),C=km(m,k),{padInfo:S,outDepth:T,outHeight:_,outWidth:$}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=xm(e,t,r));const i=e[1],o=e[2];return[Im((e[0]-t+2*s)/r+1,a),Im((i-t+2*s)/r+1,a),Im((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,I,N,C,o),E=a?g*d:g;let A;return"channelsFirst"===i?A=[l,E,T,_,$]:"channelsLast"===i&&(A=[l,T,_,$,E]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:_,outWidth:$,outChannels:E,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function xm(e,t,n,r=1){const s=km(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function vm(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function wm(e){return"number"==typeof e?[e,e,e]:e}function km(e,t){return t<=1?e:e+(e-1)*(t-1)}function Im(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Nm(e){const[t,n,r]=vm(e);return 1===t&&1===n&&1===r}function Cm(e,t){return Nm(e)||Nm(t)}function Sm(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Tm=gp({reshape_:function(e,t){const n=fp(e,"x","reshape","string_or_numeric");return ip.runKernel(Ch,{x:n},{shape:t})}}),_m=gp({avgPool_:function(e,t,n,r,s){const a=fp(e,"x","avgPool","float32");El(Cm(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=Tm(a,[1,a.shape[0],a.shape[1],a.shape[2]])),El(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&El(Ll(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let l=ip.runKernel(Mu,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:s});return l=pf(l,a.dtype),o?Tm(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),$m=gp({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=fp(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),El(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),El("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),null!=s&&El(Ll(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let u=ip.runKernel(zu,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a});return u=pf(u,o.dtype),l?Tm(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),Em=gp({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=fp(e,"x","batchNorm"),o=fp(t,"mean","batchNorm"),l=fp(n,"variance","batchNorm");let u,c;null!=s&&(u=fp(s,"scale","batchNorm")),null!=r&&(c=fp(r,"offset","batchNorm")),El(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),El(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),El(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(e){let t;return t=0===e.rank||1===e.rank?Tm(e,[1,1,1,e.size]):2===e.rank?Tm(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Tm(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d=ip.runKernel(Tc,{x:h,scale:u,offset:c,mean:o,variance:l},{varianceEpsilon:a});return Tm(d,i.shape)}}),Am=gp({batchNorm2d_:function(e,t,n,r,s,a){const i=fp(e,"x","batchNorm"),o=fp(t,"mean","batchNorm"),l=fp(n,"variance","batchNorm");let u,c;return null!=s&&(u=fp(s,"scale","batchNorm")),null!=r&&(c=fp(r,"offset","batchNorm")),El(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),El(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),El(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&El(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&El(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Em(i,o,l,c,u,a)}}),Rm=gp({batchNorm3d_:function(e,t,n,r,s,a){const i=fp(e,"x","batchNorm"),o=fp(t,"mean","batchNorm"),l=fp(n,"variance","batchNorm");let u,c;return null!=s&&(u=fp(s,"scale","batchNorm")),null!=r&&(c=fp(r,"offset","batchNorm")),El(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),El(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),El(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&El(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&El(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Em(i,o,l,c,u,a)}}),Fm=gp({batchNorm4d_:function(e,t,n,r,s,a){const i=fp(e,"x","batchNorm"),o=fp(t,"mean","batchNorm"),l=fp(n,"variance","batchNorm");let u,c;return null!=s&&(u=fp(s,"scale","batchNorm")),null!=r&&(c=fp(r,"offset","batchNorm")),El(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),El(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),El(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&El(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&El(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Em(i,o,l,c,u,a)}}),Dm=gp({clipByValue_:function(e,t,n){const r=fp(e,"x","clipByValue");return El(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),ip.runKernel(Gu,{x:r},{clipValueMin:t,clipValueMax:n})}}),Om=gp({concat_:function(e,t=0){El(e.length>=1,()=>"Pass at least one tensor to concat");const n=mp(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?ff(n[0]):ip.runKernel(Ku,n,{axis:t})}}),Mm=gp({concat1d_:function(e){return Om(e,0)}}),Lm=gp({concat2d_:function(e,t){return Om(e,t)}}),zm=gp({concat3d_:function(e,t){return Om(e,t)}}),Pm=gp({concat4d_:function(e,t){return Om(e,t)}}),Bm=gp({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=fp(e,"x","conv2d"),l=fp(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Tm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),El(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),El(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),null!=i&&El(Ll(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h="NHWC"===s?u.shape[3]:u.shape[1];El(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),El(Cm(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d=ip.runKernel(Xu,{x:u,filter:l},{strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return c?Tm(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Vm=gp({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=fp(e,"x","conv1d"),l=fp(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Tm(o,[1,o.shape[0],o.shape[1]])),El(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),El(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),null!=i&&El(Ll(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),El(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),El(Cm(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),El("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=Tm(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Tm(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Bm(d,h,[1,n],r,"NHWC",[1,a],i);return Tm(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Wm=gp({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){El(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Tm(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),El(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),El(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),El(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];El(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),El(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=i&&El(Ll(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d=ip.runKernel(Yu,{dy:l,filter:n},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o});return u?Tm(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Um=gp({conv2dTranspose_:function(e,t,n,r,s,a){const i=fp(e,"x","conv2dTranspose"),o=fp(t,"filter","conv2dTranspose");return Wm(n,i,o,r,s,"NHWC",a)}}),Hm=gp({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=fp(e,"x","conv3d"),o=fp(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),El(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),El(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),El(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),El(Cm(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),El("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c=ip.runKernel(Ju,{x:l,filter:o},{strides:n,pad:r,dataFormat:s,dilations:a});return u?Tm(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Gm=gp({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=fp(e,"x","depthwiseConv2d"),l=fp(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Tm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),El(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),El(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),El(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),null!=i&&El(Ll(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h=ip.runKernel(oc,{x:u,filter:l},{strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return c?Tm(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),jm=gp({floorDiv_:function(e,t){let n=fp(e,"a","floorDiv"),r=fp(t,"b","floorDiv");return[n,r]=Yd(n,r),ip.runKernel(Sc,{a:n,b:r})}}),qm=gp({div_:function(e,t){let n=fp(e,"a","div"),r=fp(t,"b","div");return[n,r]=Yd(n,r),"int32"===n.dtype&&"int32"===r.dtype?jm(n,r):ip.runKernel(fc,{a:n,b:r},{})}}),Km=gp({elu_:function(e){const t=fp(e,"x","elu");return ip.runKernel(mc,{x:t})}});function Xm(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Zm(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ym(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Jm=gp({equal_:function(e,t){let n=fp(e,"a","equal"),r=fp(t,"b","equal");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(bc,{a:n,b:r})}}),Qm=gp({expandDims_:function(e,t=0){const n=fp(e,"x","expandDims","string_or_numeric");return El(t<=n.rank,()=>"Axis must be <= rank of the tensor"),ip.runKernel(vc,{input:n},{dim:t})}}),eg=gp({tile_:function(e,t){const n=fp(e,"x","tile","string_or_numeric");return El(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),ip.runKernel(td,{x:n},{reps:t})}}),tg=gp({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=df([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=Tm(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return eg(Qm(i,0),[n[0],1,1]);if(2===n.length)return eg(Qm(Qm(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return eg(Qm(Qm(Qm(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ng(e,t,n){return ip.runKernel(Ic,{},{shape:e,value:t,dtype:n})}const rg=gp({floor_:function(e){const t=fp(e,"x","floor");return ip.runKernel(Cc,{x:t})}}),sg=gp({gather_:function(e,t,n=0,r=0){const s=fp(e,"x","gather"),a=fp(t,"indices","gather","int32");return ip.runKernel(_c,{x:s,indices:a},{axis:n,batchDims:r})}}),ag=gp({greater_:function(e,t){let n=fp(e,"a","greater"),r=fp(t,"b","greater");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(Ec,{a:n,b:r})}}),ig=gp({greaterEqual_:function(e,t){let n=fp(e,"a","greaterEqual"),r=fp(t,"b","greaterEqual");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(Ac,{a:n,b:r})}}),og=gp({leakyRelu_:function(e,t=.2){const n=fp(e,"x","leakyRelu");return ip.runKernel(zc,{x:n},{alpha:t})}}),lg=gp({log_:function(e){const t=fp(e,"x","log");return ip.runKernel(Wc,{x:t})}}),ug=gp({exp_:function(e){const t=fp(e,"x","exp");return ip.runKernel(xc,{x:t})}}),cg=gp({max_:function(e,t=null,n=!1){const r=fp(e,"x","max");return ip.runKernel(Xc,{x:r},{reductionIndices:t,keepDims:n})}}),hg=gp({mul_:function(e,t){let n=fp(e,"a","mul"),r=fp(t,"b","mul");return[n,r]=Yd(n,r),ip.runKernel(lh,{a:n,b:r})}}),dg=gp({sub_:function(e,t){let n=fp(e,"a","sub"),r=fp(t,"b","sub");return[n,r]=Yd(n,r),ip.runKernel(Zh,{a:n,b:r})}}),pg=gp({sum_:function(e,t=null,n=!1){let r=fp(e,"x","sum");return"bool"===r.dtype&&(r=pf(r,"int32")),ip.runKernel(Hh,{x:r},{axis:t,keepDims:n})}}),fg=gp({logSoftmax_:function(e,t=-1){const n=fp(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return im((e,n)=>{const r=cg(e,t,!0),s=dg(e,r),a=dg(pf(s,"float32"),lg(pg(ug(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=ug(r);return dg(e,hg(pg(e,t,!0),s))}}})(n)}}),mg=gp({logicalAnd_:function(e,t){const n=fp(e,"a","logicalAnd","bool"),r=fp(t,"b","logicalAnd","bool");return Ym(n.shape,r.shape),ip.runKernel(Hc,{a:n,b:r})}}),gg=gp({maxPool_:function(e,t,n,r,s){const a=fp(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Tm(a,[1,a.shape[0],a.shape[1],a.shape[2]])),El(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),El(Cm(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&El(Ll(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const l=ip.runKernel(Yc,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:s});return o?Tm(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),yg=gp({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=fp(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),El(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),El("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),null!=s&&El(Ll(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u=ip.runKernel(Qc,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a});return l?Tm(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),bg=gp({maximum_:function(e,t){let n=fp(e,"a","maximum"),r=fp(t,"b","maximum");return[n,r]=Yd(n,r),"bool"===n.dtype&&(n=pf(n,"int32"),r=pf(r,"int32")),Ym(n.shape,r.shape),ip.runKernel(Zc,{a:n,b:r})}}),xg=gp({mean_:function(e,t=null,n=!1){const r=fp(e,"x","mean");return ip.runKernel(nh,{x:r},{axis:t,keepDims:n})}}),vg=gp({min_:function(e,t=null,n=!1){const r=fp(e,"x","min");return ip.runKernel(rh,{x:r},{axis:t,keepDims:n})}}),wg=gp({minimum_:function(e,t){let n=fp(e,"a","minimum"),r=fp(t,"b","minimum");return[n,r]=Yd(n,r),"bool"===n.dtype&&(n=pf(n,"int32"),r=pf(r,"int32")),Ym(n.shape,r.shape),ip.runKernel(sh,{a:n,b:r})}});function kg(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ig(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Ng(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function Cg(e,t){return Ig(e,t.map(e=>1),t)}function Sg(e,t,n){El(kg(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Tg(e,t){if(kg(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function _g(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function $g(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Eg=gp({square_:function(e){const t=fp(e,"x","square");return ip.runKernel("Square",{x:t},{})}}),Ag=gp({moments_:function(e,t=null,n=!1){const r=Hl(t,(e=fp(e,"x","moments")).shape),s=xg(e,r,n);let a=s.shape;n||(a=Cg(s.shape,r));const i=Eg(dg(pf(e,"float32"),Tm(s,a)));return{mean:s,variance:xg(i,r,n)}}}),Rg=gp({neg_:function(e){const t=fp(e,"x","neg");return ip.runKernel(uh,{x:t})}}),Fg=gp({notEqual_:function(e,t){let n=fp(e,"a","notEqual"),r=fp(t,"b","notEqual");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(ch,{a:n,b:r})}}),Dg=gp({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s=fp(e,"indices","oneHot","int32");return ip.runKernel(mh,{indices:s},{depth:t,onValue:n,offValue:r})}});function Og(e,t="float32"){if("complex64"===t){const t=Og(e,"float32"),n=Og(e,"float32");return yp(t,n)}const n=cu(Dl(e),t);return ip.makeTensor(n,e,t)}function Mg(e,t="float32"){if("complex64"===t){const t=Mg(e,"float32"),n=Og(e,"float32");return yp(t,n)}const n=uu(Dl(e),t);return ip.makeTensor(n,e,t)}const Lg=gp({onesLike_:function(e){const t=fp(e,"x","onesLike");return ip.runKernel(fh,{x:t})}}),zg=gp({pad_:function(e,t,n=0){const r=fp(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return ip.runKernel(yh,{x:r},{paddings:t,constantValue:n})}}),Pg=gp({pow_:function(e,t){let n=fp(e,"base","pow"),r=fp(t,"exp","pow");return[n,r]=Yd(n,r),ip.runKernel(bh,{a:n,b:r})}}),Bg=gp({prelu_:function(e,t){const n=fp(e,"x","prelu"),r=fp(t,"alpha","prelu");return ip.runKernel(xh,{x:n,alpha:r})}});var Vg=n("pDBr");class Wg{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Vg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ug{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Hg=gp({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Wg(t,n,r,!1,s),i=df(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Gg=gp({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=df(e,r),i=new Ug(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}}),jg=gp({relu_:function(e){const t=fp(e,"x","relu");return ip.runKernel(Nh,{x:t})}}),qg=gp({reverse_:function(e,t){const n=fp(e,"x","reverse");return ip.runKernel(Ah,{x:n},{dims:t})}}),Kg=gp({selu_:function(e){const t=fp(e,"x","selu");return ip.runKernel(Mh,{x:t})}}),Xg=gp({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=fp(e,"x","separableConv2d"),l=fp(t,"depthwiseFilter","separableConv2d"),u=fp(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Tm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");El(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),El(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),El(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),El(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),El(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];El(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Gm(c,l,r,s,i,a),m=Bm(f,u,1,"valid",i);return h?Tm(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Zg=gp({sigmoid_:function(e){const t=fp(e,"x","sigmoid");return ip.runKernel(Vh,{x:t})}}),Yg=gp({slice_:function(e,t,n){const r=fp(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return ip.runKernel(Lh,{x:r},{begin:t,size:n})}}),Jg=gp({slice1d_:function(e,t,n){const r=fp(e,"x","slice1d");return El(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Yg(r,[t],[n])}}),Qg=gp({slice2d_:function(e,t,n){const r=fp(e,"x","slice2d");return El(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Yg(r,t,n)}}),ey=gp({slice3d_:function(e,t,n){const r=fp(e,"x","slice3d");return El(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Yg(r,t,n)}}),ty=gp({slice4d_:function(e,t,n){const r=fp(e,"x","slice4d");return El(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Yg(r,t,n)}}),ny=gp({softmax_:function(e,t=-1){const n=fp(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return ip.runKernel(qh,{logits:n},{dim:t})}}),ry=gp({softplus_:function(e){const t=fp(e,"x","softplus");return ip.runKernel(Wh,{x:t})}}),sy=gp({split_:function(e,t,n=0){const r=fp(e,"x","split");return ip.runKernel(jh,{x:r},{numOrSizeSplits:t,axis:n})}}),ay=gp({sqrt_:function(e){const t=fp(e,"x","sqrt");return ip.runKernel(Uh,{x:t})}}),iy=gp({squeeze_:function(e,t){const n=fp(e,"x","squeeze");return Tm(n,Gl(n.shape,t).newShape)}}),oy=gp({stack_:function(e,t=0){const n=mp(e,"tensors","stack","string_or_numeric");return El(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&El(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),ip.runKernel(gh,n,{axis:t})}}),ly=gp({tanh_:function(e){const t=fp(e,"x","tanh");return ip.runKernel(ed,{x:t})}});function uy(e,t){Rl(e);const n=hp(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return bp(e,null,n,t)}function cy(e,t,n){if(Rl(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=hp(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return bp(e,t,r,n)}const hy=gp({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Wg(t,n,r,!0,s),i=df(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),dy=gp({unstack_:function(e,t=0){const n=fp(e,"x","unstack","string_or_numeric");return El(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),ip.runKernel(ad,{value:n},{axis:t})}}),py=gp({broadcastTo_:function(e,t){let n=fp(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Tm(n,e)}const s=n.shape,a=Array.from(t);for(let i=t.length-1;i>=0;i--)if(s[i]===t[i])a[i]=1;else if(1!==n.shape[i])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?ff(n):ip.runKernel(td,{x:n},{reps:a})}}),fy=gp({where_:function(e,t,n){const r=fp(t,"a","where"),s=fp(n,"b","where"),a=fp(e,"condition","where","bool"),i=Ym(r.shape,s.shape),o=py(r,i),l=py(s,i);return 1===a.rank&&El(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==a.rank&&Al(a.shape,l.shape,"Error in where: "),ip.runKernel(Oh,{condition:a,t:o,e:l})}}),my=gp({zerosLike_:function(e){const t=fp(e,"x","zerosLike");return ip.runKernel(od,{x:t})}}),gy=gp({transpose_:function(e,t){const n=fp(e,"x","transpose");return null==t&&(t=n.shape.map((e,t)=>t).reverse()),El(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{El(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`)}),n.rank<=1?n.clone():ip.runKernel(rd,{x:n},{perm:t})}}),yy=gp({dropout_:function(e,t,n,r){const s=fp(e,"x","dropout");if(El("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),El(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Bd?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(Ml(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(s,n),i=1-t,o=qm(rg(cm(Gg(a,0,1,"float32",r),i)),i);return hg(s,o)}}),by=gp({imag_:function(e){const t=fp(e,"input","imag");return ip.runKernel(Dc,{input:t})}}),xy=gp({real_:function(e){const t=fp(e,"input","real");return ip.runKernel(kh,{input:t})}}),vy=gp({fft_:function(e){return El("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),ip.runKernel(kc,{input:e})}}),wy=gp({rfft_:function(e,t){El("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=Yg(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=Om([e,Og(r)],e.shape.length-1),n=t}else s=e;const a=my(s),i=Tm(yp(s,a),[r,n]),o=vy(i),l=Math.floor(n/2)+1,u=xy(o),c=by(o),h=sy(u,[l,n-l],u.shape.length-1),d=sy(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Tm(yp(h[0],d[0]),p)}}),ky=gp({ifft_:function(e){return El("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),ip.runKernel(Fc,{input:e})}}),Iy=gp({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Tm(e,[n,t]);r=ky(s)}else{const s=[n,2*(t-1)],a=Tm(xy(e),[n,t]),i=Tm(by(e),[n,t]),o=qg(Yg(a,[0,1],[n,t-2]),1),l=hg(qg(Yg(i,[0,1],[n,t-2]),1),om(-1)),u=Om([a,o],1),c=Om([i,l],1),h=Tm(yp(u,c),[s[0],s[1]]);r=ky(h)}if(r=xy(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Tm(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Ny=gp({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Tm(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Tm(t,[1,t.shape[0],t.shape[1],t.shape[2]])),El(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),El(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),El(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];return El(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),El(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&El(Ll(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),ip.runKernel(Zu,{x:o,dy:l},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n})}}),Cy=gp({relu6_:function(e){const t=fp(e,"x","relu6");return ip.runKernel(Eh,{x:t})}}),Sy=gp({step_:function(e,t=0){const n=fp(e,"x","step");return ip.runKernel(ld,{x:n},{alpha:t})}});function Ty(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return hg(e,Sy(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _y(e,t){let n=t;const r=Zm(e.shape,t.shape);return r.length>0&&(n=pg(n,r)),Tm(n,e.shape)}function $y(e,t,n,r){if("linear"===t)return e;if("relu"===t)return jg(e);if("elu"===t)return Km(e);if("relu6"===t)return Cy(e);if("prelu"===t)return Bg(e,n);if("leakyrelu"===t)return og(e,r);throw new Error(`Unknown fused activation ${t}.`)}const Ey=(e,t)=>!(e>0)||"linear"===t,Ay=gp({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ey(ip.state.gradientDepth,l=l||"linear")){let h=Bm(e,t,n,r,s,a,i);return null!=o&&(h=cm(h,o)),$y(h,l,u,c)}const h=fp(e,"x","conv2d"),d=fp(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Tm(h,[1,h.shape[0],h.shape[1],h.shape[2]])),El(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),El(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),null!=i&&El(Ll(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),El(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),El(Cm(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),El("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const m=ym(p.shape,d.shape,n,a,r,i);let g,y;null!=o&&(g=fp(o,"bias","fused conv2d"),[g]=Yd(g,h),Ym(m.outShape,g.shape)),null!=u&&(y=fp(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,i,o,u]=t,c=Ty(e,o,l);El(Nm(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const h=[Wm(i.shape,c,s,n,r),Ny(i,c,s.shape,n,r)];if(null!=u){const e=_y(u,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?im((e,t,n)=>{let r=ip.runKernel(dd,x,v);return n([t,e,r]),f&&(r=Tm(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):im((e,t,n,r)=>{let s=ip.runKernel(dd,x,v);return r([t,e,s,n]),f&&(s=Tm(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}})(p,d,g)}}),Ry=gp({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Tm(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;return 3===l.rank&&(l=Tm(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ip.runKernel(lc,{x:o,dy:l},{strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n})}}),Fy=gp({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Tm(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u=ip.runKernel(uc,{dy:o,filter:n},{strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e});return l?Tm(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Dy=gp({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ey(ip.state.gradientDepth,l)){let h=Gm(e,t,n,r,s,a,i);return null!=o&&(h=cm(h,o)),$y(h,l,u,c)}const h=fp(e,"x","depthwiseConv2d"),d=fp(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Tm(h,[1,h.shape[0],h.shape[1],h.shape[2]])),El(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),El(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),El(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),El(Cm(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&El(Ll(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const m=ym(p.shape,d.shape,n,a,r,i,!0);let g,y;null!=o&&(g=fp(o,"bias","fused conv2d"),[g]=Yd(g,h),Ym(m.outShape,g.shape)),null!=u&&(y=fp(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{El(Nm(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[s,o,u,c]=t,h=Ty(e,u,l),d=Fy(o.shape,h,s,n,r,a,i),p=Ry(o,h,s.shape,n,r,a,i);return null!=c?[d,p,_y(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?im((e,t,n)=>{let r=ip.runKernel(pd,x,v);return n([t,e,r]),f&&(r=Tm(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):im((e,t,n,r)=>{let s=ip.runKernel(pd,x,v);return r([t,e,s,n]),f&&(s=Tm(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}})(p,d,g)}}),Oy=gp({matMul_:function(e,t,n=!1,r=!1){let s=fp(e,"a","matMul"),a=fp(t,"b","matMul");return[s,a]=Yd(s,a),ip.runKernel(Bu,{a:s,b:a},{transposeA:n,transposeB:r})}}),My=gp({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Ey(ip.state.gradientDepth,a)){let l=Oy(e,t,n,r);return null!=s&&(l=cm(l,s)),$y(l,a,i,o)}let l=fp(e,"a","fused matMul"),u=fp(t,"b","fused matMul");[l,u]=Yd(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Dl(f),y=Dl(m);El(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),El(Ml(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),El(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=l.shape.slice(0,-2).concat([d,p]),x=Tm(l,n?[g,c,d]:[g,d,c]),v=Tm(u,r?[y,p,h]:[y,h,p]);let w,k;null!=s&&(w=fp(s,"bias","fused matMul"),[w]=Yd(w,l),Ym(b,w.shape)),null!=i&&(k=fp(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Ty(Tm(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=Oy(c,o,!1,!1),d=Oy(c,i,!0,!1)):n&&!r?(h=Oy(o,c,!1,!0),d=Oy(i,c,!1,!1)):(h=Oy(o,c,!0,!0),d=Oy(c,i,!0,!0)):(h=Oy(c,o,!1,!0),d=Oy(i,c,!0,!1)),null!=s?[h,d,_y(u,c)]:[h,d]},N={a:x,b:v,bias:w,preluActivationWeights:k},C={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?im((e,t,n)=>{const r=ip.runKernel(hd,N,C);return n([e,t,r]),{value:Tm(r,b),gradFunc:I}})(x,v):im((e,t,n,r)=>{const s=ip.runKernel(hd,N,C);return r([e,t,s,n]),{value:Tm(s,b),gradFunc:I}})(x,v,w)}});function Ly(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return uy(s,"float32")}gp({hammingWindow_:function(e){return Ly(e,.54,.46)}});const zy=gp({hannWindow_:function(e){return Ly(e,.5,.5)}}),Py=gp({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Yg(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Om([Yg(e,a,t-r),ng([r],s)]);i.push(o),a+=n}return 0===i.length?cy([],[0,t]):Tm(Om(i),[i.length,t])}});function By(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),El(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),El(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),El(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),El(1===t.rank,()=>"scores must be a 1D tensor"),El(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),El(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function Vy(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Wy)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function Wy(e,t){return e>t?1:e<t?-1:0}function Uy(e,t,n,r,s){return jy(e,t,n,r,s,0)}function Hy(e,t,n,r,s,a){return jy(e,t,n,r,s,0,!1,a,!0)}function Gy(e,t,n,r,s,a){return jy(e,t,n,r,s,a,!0)}function jy(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Xy);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=i;--l){const n=qy(e,a,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Ky(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Vy(u,t,Xy))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function qy(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Ky(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Xy(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}gp({stft_:function(e,t,n,r,s=zy){null==r&&(r=Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2)))));const a=Py(e,t,n),i=hg(a,s(t)),o=[];for(let l=0;l<a.shape[0];l++)o.push(wy(Yg(i,[l,0],[1,t]),r));return Om(o)}}),gp({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=fp(e,"image","cropAndResize"),o=fp(t,"boxes","cropAndResize","float32"),l=fp(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return El(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),El(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),El(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),El(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),El(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),El("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`),ip.runKernel(sc,{image:i,boxes:o,boxInd:l},{method:s,extrapolationValue:a,cropSize:r})}}),gp({flipLeftRight_:function(e){const t=fp(e,"image","flipLeftRight","float32");return El(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),ip.runKernel(Nc,{image:t},{})}}),gp({rotateWithOffset_:function(e,t,n=0,r=.5){const s=fp(e,"image","rotateWithOffset","float32");return El(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`),ip.runKernel(cd,{image:s},{radians:t,fillValue:n,center:r})}}),gp({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=fp(e,"boxes","nonMaxSuppression"),i=fp(t,"scores","nonMaxSuppression"),o=By(a,i,n,r,s);return ip.runKernel(hh,{boxes:a,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold})}}),gp({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=fp(e,"boxes","nonMaxSuppression"),o=fp(t,"scores","nonMaxSuppression"),l=By(i,o,n,r,s,a),u=ip.runKernel(ph,{boxes:i,scores:o},{maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma});return{selectedIndices:u[0],selectedScores:u[1]}}}),gp({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=fp(e,"boxes","nonMaxSuppression"),o=fp(t,"scores","nonMaxSuppression"),l=By(i,o,n,r,s,null),u=ip.runKernel(dh,{boxes:i,scores:o},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:u[0],validOutputs:u[1]}}});const Zy=gp({resizeBilinear_:function(e,t,n=!1,r=!1){const s=fp(e,"images","resizeBilinear");El(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),El(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),El(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=Tm(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o=ip.runKernel(_h,{images:a},{alignCorners:n,halfPixelCenters:r,size:t});return i?Tm(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Yy=gp({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=fp(e,"images","resizeNearestNeighbor");El(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),El(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),El("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),El(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=Tm(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o=ip.runKernel(Sh,{images:a},{alignCorners:n,halfPixelCenters:r,size:t});return i?Tm(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Jy=gp({lessEqual_:function(e,t){let n=fp(e,"a","lessEqual"),r=fp(t,"b","lessEqual");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(Bc,{a:n,b:r})}});function Qy(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return ip.runKernel(wh,{},{start:e,stop:t,step:n,dtype:r})}const eb=gp({bandPart_:function(e,t,n){El(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),El(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=fp(e,"a","bandPart");El(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Tm(Qy(0,a,1,"int32"),[-1,1]),l=Qy(0,i,1,"int32"),u=dg(o,l),c=mg(Jy(u,om(+t,"int32")),ig(u,om(-n,"int32"))),h=Og([a,i],r.dtype);return Tm(oy(dy(Tm(r,[-1,a,i])).map(e=>fy(c,e,h))),s)}});function tb(e,t,n=null){if(0===e.rank)return um(e);if(1!==e.rank&&null===n)return tb(Tm(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return pg(um(e),n);if(t===1/0)return cg(um(e),n);if(t===-1/0)return vg(um(e),n);if("euclidean"===t||2===t)return ay(pg(Pg(um(e),om(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return cg(pg(um(e),n[0]),n[1]-1);if(t===1/0)return cg(pg(um(e),n[1]),n[0]);if(t===-1/0)return vg(pg(um(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ay(pg(Eg(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const nb=gp({norm_:function(e,t="euclidean",n=null,r=!1){const s=tb(e=fp(e,"x","norm"),t,n);let a=s.shape;if(r){const t=Hl(n,e.shape);a=Cg(s.shape,t)}return Tm(s,a)}}),rb=gp({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,El(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)El(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=sy(e,e.shape[0],0).map(e=>iy(e,[0]));El(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let s=0;s<e.length;++s)n.push(ip.tidy(()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=hg(pg(hg(n[t],e)),n[t]);e=dg(e,r)}return qm(e,nb(e,"euclidean"))}));return t?oy(n,0):n}});function sb(e,t=!1){return ip.tidy(()=>{El(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=tg(n),a=ff(e);const i=cy([[1]],[1,1]);let o=ff(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=ip.tidy(()=>{const t=Yg(a,[e,e],[n-e,1]),l=nb(t),u=Yg(a,[e,e],[1,1]),c=fy(ag(u,0),cy([[-1]]),cy([[1]])),h=dg(u,hg(c,l)),d=qm(t,h);o=1===d.shape[0]?ff(i):Om([i,Yg(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Rg(qm(Oy(c,h),l)),f=Yg(a,[e,0],[n-e,r]),m=hg(p,o),g=gy(o);if(0===e)a=dg(f,Oy(m,Oy(g,f)));else{const t=dg(f,Oy(m,Oy(g,f)));a=Om([Yg(a,[0,0],[e,r]),t],0)}const y=gy(m),b=Yg(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=dg(b,Oy(Oy(b,o),y));else{const t=dg(b,Oy(Oy(b,o),y));s=Om([Yg(s,[0,0],[n,e]),t],1)}return[o,a,s]}),rm([t,l,u])}return!t&&n>r&&(s=Yg(s,[0,0],[n,r]),a=Yg(a,[0,0],[r,r])),[s,a]})}const ab=gp({qr_:function(e,t=!1){if(El(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return sb(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=dy(Tm(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach(e=>{const[n,r]=sb(e,t);s.push(n),a.push(r)}),[Tm(oy(s,0),e.shape),Tm(oy(a,0),e.shape)]}}});var ib;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ib||(ib={}));const ob=gp({computeWeightedLoss_:function(e,t,n=ib.SUM_BY_NONZERO_WEIGHTS){const r=fp(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=fp(t,"weights","computeWeightedLoss"));const a=null==s?r:hg(r,s);if(n===ib.NONE)return a;if(n===ib.SUM)return pg(a);if(n===ib.MEAN){if(null==s)return xg(a);{const e=r.size/s.size,t=qm(pg(a),pg(s));return e>1?qm(t,om(e)):t}}if(n===ib.SUM_BY_NONZERO_WEIGHTS){if(null==s)return qm(pg(a),om(r.size));{const e=hg(s,Mg(r.shape)),t=pf(pg(Fg(e,om(0))),"float32");return qm(pg(a),t)}}throw Error(`Unknown reduction: ${n}`)}});gp({absoluteDifference_:function(e,t,n,r=ib.SUM_BY_NONZERO_WEIGHTS){const s=fp(e,"labels","absoluteDifference"),a=fp(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=fp(n,"weights","absoluteDifference")),Al(s.shape,a.shape,"Error in absoluteDifference: ");const o=um(dg(s,a));return ob(o,i,r)}}),gp({cosineDistance_:function(e,t,n,r,s=ib.SUM_BY_NONZERO_WEIGHTS){const a=fp(e,"labels","cosineDistance"),i=fp(t,"predictions","cosineDistance");let o=null;null!=r&&(o=fp(r,"weights","cosineDistance")),Al(a.shape,i.shape,"Error in cosineDistance: ");const l=om(1),u=dg(l,pg(hg(a,i),n,!0));return ob(u,o,s)}}),gp({hingeLoss_:function(e,t,n,r=ib.SUM_BY_NONZERO_WEIGHTS){let s=fp(e,"labels","hingeLoss");const a=fp(t,"predictions","hingeLoss");let i=null;null!=n&&(i=fp(n,"weights","hingeLoss")),Al(s.shape,a.shape,"Error in hingeLoss: ");const o=om(1);s=dg(hg(om(2),s),o);const l=jg(dg(o,hg(s,a)));return ob(l,i,r)}}),gp({huberLoss_:function(e,t,n,r=1,s=ib.SUM_BY_NONZERO_WEIGHTS){const a=fp(e,"labels","huberLoss"),i=fp(t,"predictions","huberLoss");let o=null;null!=n&&(o=fp(n,"weights","huberLoss")),Al(a.shape,i.shape,"Error in huberLoss: ");const l=om(r),u=um(dg(i,a)),c=wg(u,l),h=dg(u,c),d=cm(hg(om(.5),Eg(c)),hg(l,h));return ob(d,o,s)}}),gp({logLoss_:function(e,t,n,r=1e-7,s=ib.SUM_BY_NONZERO_WEIGHTS){const a=fp(e,"labels","logLoss"),i=fp(t,"predictions","logLoss");let o=null;null!=n&&(o=fp(n,"weights","logLoss")),Al(a.shape,i.shape,"Error in logLoss: ");const l=om(1),u=om(r),c=Rg(hg(a,lg(cm(i,u)))),h=hg(dg(l,a),lg(cm(dg(l,i),u))),d=dg(c,h);return ob(d,o,s)}});const lb=gp({squaredDifference_:function(e,t){let n=fp(e,"a","squaredDifference"),r=fp(t,"b","squaredDifference");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(Kh,{a:n,b:r},{})}});gp({meanSquaredError_:function(e,t,n,r=ib.SUM_BY_NONZERO_WEIGHTS){const s=fp(e,"labels","meanSquaredError"),a=fp(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=fp(n,"weights","meanSquaredError")),Al(s.shape,a.shape,"Error in meanSquaredError: ");const o=lb(s,a);return ob(o,i,r)}});const ub=gp({log1p_:function(e){const t=fp(e,"x","log1p");return ip.runKernel(Uc,{x:t})}});gp({sigmoidCrossEntropy_:function(e,t,n,r=0,s=ib.SUM_BY_NONZERO_WEIGHTS){let a=fp(e,"multiClassLabels","sigmoidCrossEntropy");const i=fp(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=fp(n,"weights","sigmoidCrossEntropy")),Al(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=om(r),t=om(1),n=om(.5);a=cm(hg(a,dg(t,e)),hg(n,e))}const l=function(e,t){const n=fp(e,"labels","sigmoidCrossEntropyWithLogits"),r=fp(t,"logits","sigmoidCrossEntropyWithLogits");Al(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=jg(r),a=hg(r,n),i=ub(ug(Rg(um(r))));return cm(dg(s,a),i)}(a,i);return ob(l,o,s)}});const cb=gp({logSumExp_:function(e,t=null,n=!1){const r=fp(e,"x","logSumExp"),s=Hl(t,r.shape),a=cg(r,s,!0),i=dg(r,a),o=ug(i),l=pg(o,s),u=lg(l),c=cm(Tm(a,u.shape),u);if(n){const e=Cg(c.shape,s);return Tm(c,e)}return c}});gp({softmaxCrossEntropy_:function(e,t,n,r=0,s=ib.SUM_BY_NONZERO_WEIGHTS){let a=fp(e,"onehotLabels","softmaxCrossEntropy");const i=fp(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=fp(n,"weights","softmaxCrossEntropy")),Al(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=om(r),t=om(1),n=om(a.shape[1]);a=cm(hg(a,dg(t,e)),qm(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return im((e,t,r)=>{const s=cb(t,[n],!0),a=dg(pf(t,"float32"),s);r([e,a]);const i=Rg(hg(a,e));return{value:pg(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Cg(e.shape,[n]);return[hg(Tm(e,a),dg(pf(r,"float32"),ug(s))),hg(Tm(e,a),dg(ug(s),pf(r,"float32")))]}}})(e,t)}(a,i);return ob(l,o,s)}});const hb={bandPart:eb,gramSchmidt:rb,qr:ab};class db extends lm{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ip.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ip.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:nm(()=>my(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:nm(()=>my(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;nm(()=>{const e=cm(hg(a,this.rho),hg(Eg(s),1-this.rho)),t=hg(qm(ay(cm(i,this.epsilon)),ay(cm(a,this.epsilon))),s),n=cm(hg(i,this.rho),hg(Eg(t),1-this.rho));a.assign(e),i.assign(n);const o=cm(hg(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(rm(this.accumulatedGrads.map(e=>e.variable)),rm(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}db.className="Adadelta",Qf(db);class pb extends lm{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ip.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:nm(()=>ng(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;nm(()=>{const e=cm(a,Eg(s));a.assign(e);const t=cm(hg(qm(s,ay(cm(e,ip.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&rm(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}pb.className="Adagrad",Qf(pb);class fb extends lm{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],nm(()=>{this.accBeta1=om(t).variable(),this.accBeta2=om(n).variable()}),null==r&&(this.epsilon=ip.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);nm(()=>{const n=dg(1,this.accBeta1),r=dg(1,this.accBeta2);t.forEach((t,s)=>{const a=ip.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:nm(()=>my(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:nm(()=>my(a).variable(!1))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=cm(hg(o,this.beta1),hg(i,1-this.beta1)),c=cm(hg(l,this.beta2),hg(Eg(i),1-this.beta2)),h=qm(u,n),d=qm(c,r);o.assign(u),l.assign(c);const p=cm(hg(qm(h,cm(ay(d),this.epsilon)),-this.learningRate),a);a.assign(p)}),this.accBeta1.assign(hg(this.accBeta1,this.beta1)),this.accBeta2.assign(hg(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&rm(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&rm(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),nm(()=>{this.accBeta1.assign(Pg(this.beta1,this.iterations_+1)),this.accBeta2.assign(Pg(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}fb.className="Adam",Qf(fb);class mb extends lm{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],nm(()=>{this.iteration=om(0).variable(),this.accBeta1=om(t).variable()}),null==r&&(this.epsilon=ip.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);nm(()=>{const n=dg(1,this.accBeta1),r=qm(-this.learningRate,cm(hg(this.iteration,this.decay),1));t.forEach((t,s)=>{const a=ip.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:my(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:my(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=cm(hg(o,this.beta1),hg(i,1-this.beta1)),c=hg(l,this.beta2),h=um(i),d=bg(c,h);o.assign(u),l.assign(d);const p=cm(hg(qm(r,n),qm(u,cm(d,this.epsilon))),a);a.assign(p)}),this.iteration.assign(cm(this.iteration,1)),this.accBeta1.assign(hg(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&rm(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&rm(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}mb.className="Adamax",Qf(mb);class gb extends lm{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ip.registeredVariables[t];nm(()=>{const e=cm(hg(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=sm(om(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}gb.className="SGD",Qf(gb);class yb extends gb{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=om(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ip.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:nm(()=>my(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&nm(()=>{let e;const t=cm(hg(this.m,s),a);e=cm(hg(this.c,this.useNesterov?cm(a,hg(t,this.m)):t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&rm(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}yb.className="Momentum",Qf(yb);class bb extends lm{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ip.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ip.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:nm(()=>my(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:nm(()=>my(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:nm(()=>my(r).variable(s))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;nm(()=>{const e=cm(hg(i,this.decay),hg(Eg(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=cm(hg(t,this.decay),hg(a,1-this.decay)),l=qm(hg(a,this.learningRate),ay(dg(e,cm(Eg(s),this.epsilon)))),u=cm(hg(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=dg(r,u);r.assign(c)}else{const e=cm(hg(i,this.decay),hg(Eg(a),1-this.decay)),t=cm(hg(o,this.momentum),qm(hg(a,this.learningRate),ay(cm(e,this.epsilon))));i.assign(e),o.assign(t);const n=dg(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&rm(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&rm(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&rm(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}bb.className="RMSProp",Qf(bb);class xb{static sgd(e){return new gb(e)}static momentum(e,t,n=!1){return new yb(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new bb(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new fb(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new db(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new mb(e,t,n,r,s)}static adagrad(e,t=.1){return new pb(e,t)}}const vb={sgd:xb.sgd,momentum:xb.momentum,adadelta:xb.adadelta,adagrad:xb.adagrad,rmsprop:xb.rmsprop,adamax:xb.adamax,adam:xb.adam},wb="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function kb(){return new Promise(e=>wb(()=>e()))}function Ib(e,t){const n=e[0].length;e.forEach((e,t)=>{El(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),El(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)El(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Nb(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Cb=30;function Sb(e){return e<=Cb?e:au(e,Math.floor(Math.sqrt(e)))}function Tb(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function _b(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function $b(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Eb(e,t,n,r=!0){const s=[];s.push(r?e[0]/n:e[0]*n);for(let a=1;a<e.length;++a)s.push(a<=t.length?r?t[a-1]*e[a]:e[a]/t[a-1]:e[a]);return s}function Ab(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Rb(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Fb(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Dl(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...iu(e.shape).map(e=>e/u),1].slice(0,a);return[l,i,u,c]}function Db(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function Ob(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Db(n,t,e)}function Mb(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let l=s;l<a;++l)i*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:Dl(t.shape)/o,sliceSize:i,strides:[...iu(n.slice(0,s)),1],outputSize:Dl(n)}}const Lb=1.7580993408473768,zb=1.0507009873554805,Pb=.3275911,Bb=.254829592,Vb=-.284496736,Wb=1.421413741,Ub=-1.453152027,Hb=1.061405429;function Gb(...e){yu().getBool("IS_TEST")||console.warn(...e)}function jb(...e){yu().getBool("IS_TEST")||console.log(...e)}function qb(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Kb(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Xb(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Zb(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Yb(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Jb(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Qb(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function ex(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function tx(e,t,n=0){let r=[];if("number"==typeof t)El(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{El(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}El(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function nx(e,t){let n,r=!1;for(e<=Cb?(n=e,r=!0):n=au(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=au(e,n+1);return n}function rx(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)r.push(a!==t?e[a]:n);return r}function sx(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function ax(e){try{return e.map(e=>Td(e))}catch(HW){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${HW}`)}}function ix(e){return e.map(e=>Sd(e))}function ox(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=df(e,"int32"),s=df([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]);s.values.set(t,a*e.length)}return s.toTensor()}const lx={kernelName:ku,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,Sy(pf(n,"float32"),-1))}}},ux={kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Eg(pf(n,"float32")),r=ay(dg(om(1),t));return Rg(qm(e,r))}}}},cx={kernelName:Nu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ay(dg(Eg(pf(n,"float32")),1));return qm(e,t)}}}},hx={kernelName:Cu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{let t=e;const r=Zm(n.shape,s);return r.length>0&&(t=pg(t,r)),Tm(t,n.shape)},b:()=>{let t=e;const n=Zm(r.shape,s);return n.length>0&&(t=pg(t,n)),Tm(t,r.shape)}}}},dx={kernelName:Su,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},px={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>my(n)}}},fx={kernelName:Eu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>my(n)}}},mx={kernelName:Au,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,ay(dg(om(1),Eg(pf(n,"float32")))))}}},gx={kernelName:Ru,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ay(cm(om(1),Eg(pf(n,"float32"))));return qm(e,t)}}}},yx={kernelName:Ou,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{const t=cm(Eg(n),Eg(r));let a=hg(e,qm(r,t));const i=Zm(n.shape,s);return i.length>0&&(a=pg(a,i)),Tm(a,n.shape)},b:()=>{const t=cm(Eg(n),Eg(r));let a=Rg(hg(e,qm(n,t)));const i=Zm(r.shape,s);return i.length>0&&(a=pg(a,i)),Tm(a,r.shape)}}}},bx={kernelName:Fu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,cm(Eg(pf(n,"float32")),1))}}},xx={kernelName:Du,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,dg(om(1),Eg(pf(n,"float32"))))}}},vx=gp({avgPool3dGrad_:function(e,t,n,r,s,a){const i=fp(e,"dy","avgPool3dGrad"),o=fp(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Tm(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),El(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),El(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),null!=a&&El(Ll(s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const h=ip.runKernel(Pu,{dy:l,input:u},{filterSize:n,strides:r,pad:s,dimRoundingMode:a});return c?Tm(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),wx={kernelName:zu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>vx(e,r,s,a,i,o)}}},kx=gp({avgPoolGrad_:function(e,t,n,r,s){const a=fp(e,"dy","avgPoolGrad"),i=fp(t,"input","avgPoolGrad");El(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Tm(a,[1,a.shape[0],a.shape[1],a.shape[2]])),El(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),El(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c=ip.runKernel(Lu,{dy:l,input:o},{filterSize:n,strides:r,pad:s});return u?Tm(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ix={kernelName:Mu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>kx(e,r,s,a,i)}}},Nx={kernelName:Bu,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Oy(e,s,!1,!1),b:()=>Oy(e,r,!0,!1)}:a&&!i?{a:()=>Oy(s,e,!1,!0),b:()=>Oy(r,e,!1,!1)}:{a:()=>Oy(s,e,!0,!0),b:()=>Oy(e,r,!0,!0)}:{a:()=>Oy(e,s,!1,!0),b:()=>Oy(r,e,!0,!1)}}},Cx=gp({spaceToBatchND_:function(e,t,n){const r=fp(e,"x","spaceToBatchND");return El(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),El(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),El(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),ip.runKernel(Gh,{x:r},{blockShape:t,paddings:n})}}),Sx={kernelName:Vu,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Cx(e,r,s)}}},Tx={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n.inputShape,s=n.shape,a=Array.from(s);for(let o=r.length-1;o>=0;o--)if(r[o]===s[o])a[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const i=[];for(let o=0;o<a.length;o++)a[o]>1&&i.push(o);return{x:()=>pg(e,i,!0)}}},_x={kernelName:Uu,gradFunc:e=>({x:()=>e.clone()})},$x={kernelName:Hu,gradFunc:e=>({x:()=>my(e)})},Ex={kernelName:Gu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>fy(mg(ig(r,s),Jy(r,a)),e,my(e))}}},Ax={kernelName:qu,inputsToSave:["x"],gradFunc:lx.gradFunc},Rx={kernelName:Ku,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=Hl(s,t[0].shape)[0],i=r.map(e=>e[a]);return sy(e,i,a).map(e=>()=>e)}},Fx={kernelName:Xu,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return El(Nm(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Wm(r.shape,e,s,i,o,l),filter:()=>Ny(r,e,s.shape,i,o,l)}}},Dx={kernelName:Yu,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Bm(e,s,a,i,o,1,l),filter:()=>Ny(e,r,s.shape,a,i,o,l)}}},Ox=gp({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Tm(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=Tm(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),El(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),El(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),El(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),El(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),El(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),ip.runKernel(Qu,{x:a,dy:i},{strides:r,pad:s,filterShape:n})}}),Mx=gp({conv3DBackpropInput_:function(e,t,n,r,s){El(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Tm(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];El(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),El(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),El(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),El(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),El(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c=ip.runKernel(ec,{dy:i,filter:n},{pad:s,strides:r,inputShape:a});return o?Tm(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Lx={kernelName:Ju,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;El(Nm(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Mx(i.shape,e,o,s,a),filter:()=>Ox(i,e,o.shape,s,a)}}},zx=gp({sin_:function(e){const t=fp(e,"x","sin");return ip.runKernel(zh,{x:t})}}),Px={kernelName:tc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(Rg(zx(pf(n,"float32"))),e)}}},Bx=gp({sinh_:function(e){const t=fp(e,"x","sinh");return ip.runKernel(Ph,{x:t})}}),Vx={kernelName:nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(Bx(pf(n,"float32")),e)}}},Wx=gp({cumsum_:function(e,t=0,n=!1,r=!1){const s=fp(e,"x","cumsum");return ip.runKernel(rc,{x:s},{axis:t,exclusive:n,reverse:r})}}),Ux={kernelName:rc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Tg([s],r.rank);let n=Wx(e,s,a,!i);return null!=t&&(n=gy(n,t)),n}}}},Hx={kernelName:oc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;El(Nm(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=t;return El(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),El(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),El(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),El(Cm(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=i&&El(Ll(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),{x:()=>Fy(l.shape,e,u,s,a,r,i),filter:()=>Ry(l,e,u.shape,s,a,r,i)}}},Gx={kernelName:hc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>ip.runKernel(dc,a,n),filter:()=>ip.runKernel(pc,i,n)}}},jx={kernelName:mc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ip.runKernel(gc,r)}}},qx={kernelName:yc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hg(ug(Rg(Eg(n))),2/Math.sqrt(Math.PI));return{x:()=>hg(e,r)}}},Kx={kernelName:xc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,n)}}},Xx={kernelName:vc,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Tm(e,n.shape)}}},Zx={kernelName:wc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,ug(n))}}},Yx={kernelName:Cc,gradFunc:e=>({x:()=>my(e)})},Jx={kernelName:Sc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{const t=qm(e,pf(r,"float32")),a=Zm(n.shape,s);return a.length>0?Tm(pg(t,a),n.shape):t},b:()=>{let t=hg(e,pf(n,"float32"));const a=Zm(r.shape,s);a.length>0&&(t=Tm(pg(t,a),r.shape));const i=Eg(r);return Rg(qm(t,pf(i,"float32")))}}}},Qx=gp({rsqrt_:function(e){const t=fp(e,"x","rsqrt");return ip.runKernel(Fh,{x:t})}}),ev={kernelName:Tc,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?om(1):o,u=Zm(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=dg(s,a),d=hg(e,l),p=Qx(cm(i,om(r))),f=hg(hg(hg(p,p),p),om(-.5));return{x:()=>Tm(hg(hg(e,1===a.rank?eg(Tm(p,[1,1,1,a.shape[0]]),c):p),l),s.shape),mean:()=>{let e=hg(hg(p,om(-1)),d);return 1===a.rank&&(e=pg(e,u)),Tm(e,a.shape)},variance:()=>{let e=hg(hg(f,h),d);return 1===a.rank&&(e=pg(e,u)),Tm(e,a.shape)},scale:()=>{const t=hg(h,p);let n=hg(e,t);return 1===a.rank&&(n=pg(n,u)),Tm(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=pg(t,u)),Tm(t,a.shape)}}}},tv=gp({unsortedSegmentSum_:function(e,t,n){const r=fp(e,"x","unsortedSegmentSum"),s=fp(t,"segmentIds","unsortedSegmentSum","int32");return El(Ll(n),()=>"numSegments must be of dtype int"),ip.runKernel(id,{x:r,segmentIds:s},{numSegments:n})}}),nv={kernelName:_c,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=Hl(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=rv(0,l),d=rv(l+1,l+1+c),p=sv([o,[n],u]),f=Tm(e,p),m=Tm(s,[n]),g=sv([[l],h,d]),y=gy(f,g);let b=tv(y,m,r.shape[i]);const x=_g(g);return b=gy(b,x),b},indices:()=>s}}};function rv(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function sv(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const av={kernelName:Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>my(n),b:()=>my(r)}}},iv={kernelName:Rc,gradFunc:e=>({x:()=>pf(e,"float32")})},ov={kernelName:Oc,gradFunc:e=>({x:()=>my(e)})},lv={kernelName:Mc,gradFunc:e=>({x:()=>my(e)})},uv={kernelName:Lc,gradFunc:e=>({x:()=>my(e)})},cv={kernelName:zc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ag(r,0);return{x:()=>fy(a,e,hg(e,s))}}},hv={kernelName:Uc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,cm(n,1))}}},dv={kernelName:Wc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,pf(n,"float32"))}}},pv={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=ug(r);return dg(e,hg(pg(e,s,!0),t))}}}},fv=gp({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){return ip.runKernel(Kc,{x:e,y:t,dy:n},{depthRadius:r,bias:s,alpha:a,beta:i})}}),mv={kernelName:qc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>fv(r,s,e,a,i,o,l)}}};function gv(e,t,n,r){return t.rank<n.rank&&(t=Tm(t,Cg(t.shape,r))),e.rank<n.rank&&(e=Tm(e,Cg(e.shape,r))),{x:()=>hg(e,pf(Jm(n,t),e.dtype))}}const yv={kernelName:Xc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=gv(e,t[1],a,Hl(s,a.shape));return{x:()=>i.x()}}},bv=gp({less_:function(e,t){let n=fp(e,"a","less"),r=fp(t,"b","less");return[n,r]=Yd(n,r),Ym(n.shape,r.shape),ip.runKernel(Pc,{a:n,b:r})}}),xv={kernelName:Zc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hg(e,pf(ig(n,r),"float32")),b:()=>hg(e,pf(bv(n,r),"float32"))}}},vv=gp({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=fp(e,"dy","maxPool3dGrad"),l=fp(t,"input","maxPool3dGrad"),u=fp(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Tm(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Tm(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Tm(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),El(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),El(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),El(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),null!=i&&El(Ll(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const f=ip.runKernel(eh,{dy:c,input:h,output:d},{filterSize:r,strides:s,pad:a,dimRoundingMode:i});return p?Tm(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),wv={kernelName:Qc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>vv(e,r,s,a,i,o,l)}}},kv=gp({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=fp(e,"dy","maxPoolGrad"),l=fp(t,"input","maxPoolGrad"),u=fp(n,"output","maxPoolGrad");return El(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),El(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),El(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),null!=i&&El(Ll(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),ip.runKernel(Jc,{dy:o,input:l,output:u},{filterSize:r,strides:s,pad:a,dimRoundingMode:i})}}),Iv={kernelName:Yc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>kv(e,r,s,a,i,o)}}},Nv={kernelName:nh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=Hl(s,r.shape),i=Dl(Ng(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});const n=Tm(e,t);return qm(hg(n,Mg(r.shape,"float32")),i)}}}},Cv={kernelName:rh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=gv(e,i,a,Hl(s,a.shape));return{x:()=>o.x()}}},Sv={kernelName:sh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hg(e,pf(Jy(n,r),"float32")),b:()=>hg(e,pf(ag(n,r),"float32"))}}},Tv={kernelName:ah,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>Yg(e,a,r.shape)}}},_v={kernelName:ih,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{const t=Zm(n.shape,s);return t.length>0?Tm(pg(e,t),n.shape):e},b:()=>{const t=hg(e,Rg(rg(qm(n,r)))),a=Zm(r.shape,s);return a.length>0?Tm(pg(t,a),r.shape):t}}}},$v={kernelName:lh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{const t=hg(e,pf(r,"float32")),a=Zm(n.shape,s);return a.length>0?Tm(pg(t,a),n.shape):t},b:()=>{const t=hg(e,pf(n,"float32")),a=Zm(r.shape,s);return a.length>0?Tm(pg(t,a),r.shape):t}}}},Ev={kernelName:uh,gradFunc:e=>({x:()=>Rg(e)})},Av={kernelName:mh,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Og(n.shape,"float32")}}},Rv={kernelName:fh,gradFunc:e=>({x:()=>my(e)})},Fv={kernelName:gh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return dy(e,r).map(e=>()=>e)}},Dv={kernelName:yh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>Yg(e,a,r.shape)}}},Ov={kernelName:bh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Ym(a.shape,i.shape);return{a:()=>{const t=pf(i,"float32");let n=hg(e,hg(t,Pg(a,dg(t,om(1)))));const r=Zm(a.shape,o);return r.length>0&&(n=pg(n,r)),Tm(n,a.shape)},b:()=>{const t=ag(a,0),n=fy(t,lg(a),my(a));let r=hg(e,hg(s,n));const l=Zm(i.shape,o);return l.length>0&&(r=pg(r,l)),Tm(r,i.shape)}}}},Mv={kernelName:xh,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ag(n,0);return{x:()=>fy(s,e,hg(e,r)),alpha:()=>{let t=fy(s,my(e),hg(e,n));const a=Zm(r.shape,e.shape);return a.length>0&&(t=pg(t,a)),Tm(t,r.shape)}}}},Lv={kernelName:fc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{const t=qm(e,pf(r,"float32")),a=Zm(n.shape,s);return a.length>0?Tm(pg(t,a),n.shape):t},b:()=>{let t=hg(e,pf(n,"float32"));const a=Zm(r.shape,s);a.length>0&&(t=Tm(pg(t,a),r.shape));const i=Eg(r);return Rg(qm(t,pf(i,"float32")))}}}},zv={kernelName:Ih,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,Rg(Eg(n)))}}},Pv={kernelName:Eh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hg(Jy(n,6),Sy(n));return{x:()=>hg(e,pf(r,"float32"))}}},Bv={kernelName:Nh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,pf(Sy(n),"float32"))}}},Vv={kernelName:Ch,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tm(e,n.shape)}}},Wv={kernelName:_h,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ip.runKernel($h,s,n)}}},Uv={kernelName:Sh,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ip.runKernel(Th,s,n)}}},Hv={kernelName:Ah,gradFunc:(e,t,n)=>{const{dims:r}=n,s=Hl(r,e.shape);return{x:()=>qg(e,s)}}},Gv={kernelName:Rh,gradFunc:e=>({x:()=>my(e)})},jv={kernelName:Fh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Rg(qm(e,hg(Pg(n,1.5),2)))}}},qv=gp({logicalNot_:function(e){const t=fp(e,"x","logicalNot","bool");return ip.runKernel(Gc,{x:t})}}),Kv={kernelName:Oh,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>pf(my(n),"float32"),t:()=>hg(e,pf(n,e.dtype)),e:()=>hg(e,pf(qv(n),e.dtype))}}},Xv={kernelName:Mh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ag(n,om(0)),r=om(Lb),s=om(zb),a=hg(e,s),i=hg(hg(e,r),ug(pf(n,"float32")));return fy(t,a,i)}}}},Zv={kernelName:Vh,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,hg(n,dg(om(1),n)))}}},Yv={kernelName:Bh,gradFunc:e=>({x:()=>my(e)})},Jv=gp({cos_:function(e){const t=fp(e,"x","cos");return ip.runKernel(tc,{x:t})}}),Qv={kernelName:zh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(Jv(pf(n,"float32")),e)}}},ew=gp({cosh_:function(e){const t=fp(e,"x","cosh");return ip.runKernel(nc,{x:t})}}),tw={kernelName:Ph,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(ew(pf(n,"float32")),e)}}},nw={kernelName:Lh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Xf(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>zg(e,u)}}},rw={kernelName:qh,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=hg(e,r);return{logits:()=>dg(a,hg(pg(a,[s],!0),r))}}},sw={kernelName:Wh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,Zg(n))}}},aw=gp({batchToSpaceND_:function(e,t,n){const r=fp(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);return El(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),El(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),El(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`),ip.runKernel(Vu,{x:r},{blockShape:t,crops:n})}}),iw={kernelName:Gh,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>aw(e,r,s)}}},ow={kernelName:jh,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Om(e,r)}}},lw=[lx,ux,cx,hx,dx,px,fx,mx,gx,yx,bx,xx,wx,Ix,Nx,Sx,Tx,_x,$x,Ex,Ax,Rx,Dx,Fx,Lx,Px,Vx,Ux,Hx,Gx,Lv,jx,qx,Kx,Xx,Zx,Jx,Yx,ev,nv,av,iv,ov,lv,uv,cv,hv,dv,pv,mv,yv,yv,xv,wv,Iv,Nv,Cv,Sv,Tv,_v,$v,Ev,Av,Rv,Fv,Dv,Dv,Ov,Mv,zv,Pv,Bv,Vv,Wv,Uv,Hv,Gv,jv,Kv,Xv,Zv,Yv,Qv,tw,nw,rw,sw,iw,iw,ow,ow,{kernelName:Uh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,hg(ay(pf(n,"float32")),2))}}},{kernelName:Kh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=om(2);return{a:()=>hg(e,hg(s,dg(n,r))),b:()=>hg(e,hg(s,dg(r,n)))}}},{kernelName:Xh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(e,hg(pf(n,"float32"),2))}}},{kernelName:ld,gradFunc:e=>({x:()=>my(e)})},{kernelName:Zh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ym(n.shape,r.shape);return{a:()=>{let t=e;const r=Zm(n.shape,s);return r.length>0&&(t=pg(t,r)),Tm(t,n.shape)},b:()=>{let t=e;const n=Zm(r.shape,s);return n.length>0&&(t=pg(t,n)),Tm(Rg(t),r.shape)}}}},{kernelName:Hh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;Hl(a,r.shape).forEach(e=>{s[e]=1});const i=Tm(e,s),o=hg(i,Mg(r.shape,"float32"));return{x:()=>o}}},{kernelName:Qh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qm(e,Eg(Jv(n)))}}},{kernelName:ed,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hg(dg(om(1),Eg(n)),e)}}},{kernelName:td,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=my(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=cm(t,Yg(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=cm(t,Yg(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=cm(t,Yg(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=cm(t,Yg(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:rd,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=_g(s);return{x:()=>gy(e,a)}}},{kernelName:ad,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>oy(e,s)}}},{kernelName:id,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=bg(t,my(t)),r=sg(e,n);let s=ig(t,om(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=Qm(s,o+1);s=mg(s,Mg(r.shape,"bool"));const i=my(r);return fy(s,r,i)}(e,n)}}},{kernelName:od,gradFunc:e=>({x:()=>my(e)})}];for(const GW of lw)vd(GW);Vd().prototype.abs=function(){return this.throwIfDisposed(),um(this)};const uw=gp({acos_:function(e){const t=fp(e,"x","acos");return ip.runKernel(Iu,{x:t})}});Vd().prototype.acos=function(){return this.throwIfDisposed(),uw(this)};const cw=gp({acosh_:function(e){const t=fp(e,"x","acosh");return ip.runKernel(Nu,{x:t})}});Vd().prototype.acosh=function(){return this.throwIfDisposed(),cw(this)},Vd().prototype.add=function(e){return this.throwIfDisposed(),cm(this,e)},Vd().prototype.all=function(e,t){return this.throwIfDisposed(),hm(this,e,t)},Vd().prototype.any=function(e,t){return this.throwIfDisposed(),dm(this,e,t)},Vd().prototype.argMax=function(e){return this.throwIfDisposed(),pm(this,e)};const hw=gp({argMin_:function(e,t=0){const n=fp(e,"x","argMin");return ip.runKernel(Eu,{x:n},{axis:t})}});Vd().prototype.argMin=function(e){return this.throwIfDisposed(),hw(this,e)},Vd().prototype.asScalar=function(){return this.throwIfDisposed(),El(1===this.size,()=>"The array must have only 1 element."),Tm(this,[])},Vd().prototype.asType=function(e){return this.throwIfDisposed(),pf(this,e)},Vd().prototype.as1D=function(){return this.throwIfDisposed(),Tm(this,[this.size])},Vd().prototype.as2D=function(e,t){return this.throwIfDisposed(),Tm(this,[e,t])},Vd().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Tm(this,[e,t,n])},Vd().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Tm(this,[e,t,n,r])},Vd().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Tm(this,[e,t,n,r,s])};const dw=gp({asin_:function(e){const t=fp(e,"x","asin");return ip.runKernel(Au,{x:t})}});Vd().prototype.asin=function(){return this.throwIfDisposed(),dw(this)};const pw=gp({asinh_:function(e){const t=fp(e,"x","asinh");return ip.runKernel(Ru,{x:t})}});Vd().prototype.asinh=function(){return this.throwIfDisposed(),pw(this)};const fw=gp({atan_:function(e){const t=fp(e,"x","atan");return ip.runKernel(Fu,{x:t})}});Vd().prototype.atan=function(){return this.throwIfDisposed(),fw(this)};const mw=gp({atan2_:function(e,t){let n=fp(e,"a","atan2"),r=fp(t,"b","atan2");return[n,r]=Yd(n,r),ip.runKernel(Ou,{a:n,b:r})}});Vd().prototype.atan2=function(e){return this.throwIfDisposed(),mw(this,e)};const gw=gp({atanh_:function(e){const t=fp(e,"x","atanh");return ip.runKernel(Du,{x:t})}});Vd().prototype.atanh=function(){return this.throwIfDisposed(),gw(this)},Vd().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),_m(this,e,t,n,r)},Vd().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),aw(this,e,t)},Vd().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Em(this,e,t,n,r,s)},Vd().prototype.broadcastTo=function(e){return this.throwIfDisposed(),py(this,e)},Vd().prototype.cast=function(e){return this.throwIfDisposed(),pf(this,e)};const yw=gp({ceil_:function(e){const t=fp(e,"x","ceil");return ip.runKernel(Hu,{x:t})}});Vd().prototype.ceil=function(){return this.throwIfDisposed(),yw(this)},Vd().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Dm(this,e,t)},Vd().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Bd&&(e=[e]),Om([this,...e],t)},Vd().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Vm(this,e,t,n,r,s,a)},Vd().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Um(this,e,t,n,r,s)},Vd().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Bm(this,e,t,n,r,s,a)},Vd().prototype.cos=function(){return this.throwIfDisposed(),Jv(this)},Vd().prototype.cosh=function(){return this.throwIfDisposed(),ew(this)},Vd().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Wx(this,e,t,n)};const bw=gp({depthToSpace_:function(e,t,n="NHWC"){const r=fp(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return El(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),El(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),El(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),ip.runKernel(ic,{x:r},{blockSize:t,dataFormat:n})}});Vd().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),bw(this,e,t)},Vd().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Gm(this,e,t,n,r,s,a)};const xw=gp({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=fp(e,"x","dilation2d"),o=fp(t,"filter","dilation2d");El(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),El(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),El("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=i,u=!1;3===i.rank&&(l=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c=ip.runKernel(hc,{x:l,filter:o},{strides:n,pad:r,dilations:s});return u?Tm(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Vd().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),xw(this,e,t,n,r,s)};const vw=gp({divNoNan_:function(e,t){let n=fp(e,"a","div"),r=fp(t,"b","div");[n,r]=Yd(n,r);const s=qm(n,r),a=my(s),i=Jm(r,a);return fy(i,a,s)}});Vd().prototype.divNoNan=function(e){return this.throwIfDisposed(),vw(this,e)},Vd().prototype.div=function(e){return this.throwIfDisposed(),qm(this,e)};const ww=gp({dot_:function(e,t){const n=fp(e,"t1","dot"),r=fp(t,"t2","dot");El(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(El(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=Tm(n,[1,-1]),t=Tm(r,[-1,1]),s=Oy(e,t);return Tm(s,[])}if(1===n.rank&&2===r.rank){const e=Tm(n,[1,-1]),t=Tm(r,[r.shape[0],r.shape[1]]),s=Oy(e,t);return Tm(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Tm(r,[-1,1]),t=Oy(n,e);return Tm(t,[t.size])}{const e=Tm(r,[r.shape[0],r.shape[1]]);return Oy(n,e)}}});Vd().prototype.dot=function(e){return this.throwIfDisposed(),ww(this,e)},Vd().prototype.elu=function(){return this.throwIfDisposed(),Km(this)},Vd().prototype.equal=function(e){return this.throwIfDisposed(),Jm(this,e)};const kw=gp({erf_:function(e){let t=fp(e,"x","erf");return El("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=pf(t,"float32")),ip.runKernel(yc,{x:t})}});Vd().prototype.erf=function(){return this.throwIfDisposed(),kw(this)},Vd().prototype.exp=function(){return this.throwIfDisposed(),ug(this)},Vd().prototype.expandDims=function(e){return this.throwIfDisposed(),Qm(this,e)};const Iw=gp({expm1_:function(e){const t=fp(e,"x","expm1");return ip.runKernel(wc,{x:t})}});Vd().prototype.expm1=function(){return this.throwIfDisposed(),Iw(this)},Vd().prototype.fft=function(){return this.throwIfDisposed(),vy(this)},Vd().prototype.flatten=function(){return this.throwIfDisposed(),Tm(this,[this.size])},Vd().prototype.floor=function(){return this.throwIfDisposed(),rg(this)},Vd().prototype.floorDiv=function(e){return this.throwIfDisposed(),jm(this,e)},Vd().prototype.gather=function(e,t){return this.throwIfDisposed(),sg(this,e,t)},Vd().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ig(this,e)},Vd().prototype.greater=function(e){return this.throwIfDisposed(),ag(this,e)},Vd().prototype.ifft=function(){return this.throwIfDisposed(),ky(this)},Vd().prototype.irfft=function(){return this.throwIfDisposed(),Iy(this)};const Nw=gp({isFinite_:function(e){const t=fp(e,"x","isFinite");return ip.runKernel(Oc,{x:t})}});Vd().prototype.isFinite=function(){return this.throwIfDisposed(),Nw(this)};const Cw=gp({isInf_:function(e){const t=fp(e,"x","isInf");return ip.runKernel(Mc,{x:t})}});Vd().prototype.isInf=function(){return this.throwIfDisposed(),Cw(this)};const Sw=gp({isNaN_:function(e){const t=fp(e,"x","isNaN");return ip.runKernel(Lc,{x:t})}});Vd().prototype.isNaN=function(){return this.throwIfDisposed(),Sw(this)},Vd().prototype.leakyRelu=function(e){return this.throwIfDisposed(),og(this,e)},Vd().prototype.lessEqual=function(e){return this.throwIfDisposed(),Jy(this,e)},Vd().prototype.less=function(e){return this.throwIfDisposed(),bv(this,e)};const Tw=gp({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=fp(e,"x","localResponseNormalization");El(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),El(Ll(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=Tm(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l=ip.runKernel(qc,{x:i},{depthRadius:t,bias:n,alpha:r,beta:s});return o?Tm(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});Vd().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Tw(this,e,t,n,r)};const _w=gp({logSigmoid_:function(e){const t=fp(e,"x","logSigmoid");return im(e=>({value:Rg(ry(Rg(e))),gradFunc:t=>hg(t,Zg(Rg(e)))}))(t)}});Vd().prototype.logSigmoid=function(){return this.throwIfDisposed(),_w(this)},Vd().prototype.logSoftmax=function(e){return this.throwIfDisposed(),fg(this,e)},Vd().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),cb(this,e,t)},Vd().prototype.log=function(){return this.throwIfDisposed(),lg(this)},Vd().prototype.log1p=function(){return this.throwIfDisposed(),ub(this)},Vd().prototype.logicalAnd=function(e){return this.throwIfDisposed(),mg(this,e)},Vd().prototype.logicalNot=function(){return this.throwIfDisposed(),qv(this)};const $w=gp({logicalOr_:function(e,t){const n=fp(e,"a","logicalOr","bool"),r=fp(t,"b","logicalOr","bool");return Ym(n.shape,r.shape),ip.runKernel(jc,{a:n,b:r})}});Vd().prototype.logicalOr=function(e){return this.throwIfDisposed(),$w(this,e)};const Ew=gp({logicalXor_:function(e,t){const n=fp(e,"a","logicalXor","bool"),r=fp(t,"b","logicalXor","bool");return Ym(n.shape,r.shape),mg($w(e,t),qv(mg(e,t)))}});Vd().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ew(this,e)},Vd().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Oy(this,e,t,n)},Vd().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),gg(this,e,t,n,r)},Vd().prototype.max=function(e,t){return this.throwIfDisposed(),cg(this,e,t)},Vd().prototype.maximum=function(e){return this.throwIfDisposed(),bg(this,e)},Vd().prototype.mean=function(e,t){return this.throwIfDisposed(),xg(this,e,t)},Vd().prototype.min=function(e,t){return this.throwIfDisposed(),vg(this,e,t)},Vd().prototype.minimum=function(e){return this.throwIfDisposed(),wg(this,e)};const Aw=gp({mirrorPad_:function(e,t,n){El("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=fp(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");El(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let a=0;a<r.rank;a++)El(2===t[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),El(t[a][0]>=0&&t[a][0]<=r.shape[a]-s&&t[a][1]>=0&&t[a][1]<=r.shape[a]-s,()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);return ip.runKernel(ah,{x:r},{paddings:t,mode:n})}});Vd().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Aw(this,e,t)};const Rw=gp({mod_:function(e,t){let n=fp(e,"a","mod"),r=fp(t,"b","mod");return[n,r]=Yd(n,r),ip.runKernel(ih,{a:n,b:r})}});Vd().prototype.mod=function(e){return this.throwIfDisposed(),Rw(this,e)},Vd().prototype.mul=function(e){return this.throwIfDisposed(),hg(this,e)},Vd().prototype.neg=function(){return this.throwIfDisposed(),Rg(this)},Vd().prototype.norm=function(e,t,n){return this.throwIfDisposed(),nb(this,e,t,n)},Vd().prototype.notEqual=function(e){return this.throwIfDisposed(),Fg(this,e)},Vd().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Dg(this,e,t,n)},Vd().prototype.onesLike=function(){return this.throwIfDisposed(),Lg(this)},Vd().prototype.pad=function(e,t){return this.throwIfDisposed(),zg(this,e,t)};const Fw=gp({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=fp(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=Tm(i,[1,i.shape[0],i.shape[1],i.shape[2]])),El(Cm(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const u=mm(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),i=t.map((e,t)=>(e-a[t]%e)%e),o=s.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:Cx(o,c,p),y=("avg"===n?()=>_m(g,t,a,m):()=>gg(g,t,a,m))(),b=d?y:aw(y,c,f);return l?Tm(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Vd().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),Fw(this,e,t,n,r,s)},Vd().prototype.pow=function(e){return this.throwIfDisposed(),Pg(this,e)},Vd().prototype.prelu=function(e){return this.throwIfDisposed(),Bg(this,e)};const Dw=gp({prod_:function(e,t=null,n=!1){let r=fp(e,"x","prod");return"bool"===r.dtype&&(r=pf(r,"int32")),ip.runKernel(vh,{x:r},{axis:t,keepDims:n})}});Vd().prototype.prod=function(e,t){return this.throwIfDisposed(),Dw(this,e,t)};const Ow=gp({reciprocal_:function(e){const t=fp(e,"x","reciprocal");return ip.runKernel(Ih,{x:t})}});Vd().prototype.reciprocal=function(){return this.throwIfDisposed(),Ow(this)},Vd().prototype.relu=function(){return this.throwIfDisposed(),jg(this)},Vd().prototype.relu6=function(){return this.throwIfDisposed(),Cy(this)},Vd().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Tm(this,e.shape)},Vd().prototype.reshape=function(e){return this.throwIfDisposed(),Tm(this,e)},Vd().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Zy(this,e,t,n)},Vd().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Yy(this,e,t,n)},Vd().prototype.reverse=function(e){return this.throwIfDisposed(),qg(this,e)},Vd().prototype.rfft=function(){return this.throwIfDisposed(),wy(this)};const Mw=gp({round_:function(e){const t=fp(e,"x","round");return ip.runKernel(Rh,{x:t})}});Vd().prototype.round=function(){return this.throwIfDisposed(),Mw(this)},Vd().prototype.rsqrt=function(){return this.throwIfDisposed(),Qx(this)},Vd().prototype.selu=function(){return this.throwIfDisposed(),Kg(this)},Vd().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Xg(this,e,t,n,r,s,a)},Vd().prototype.sigmoid=function(){return this.throwIfDisposed(),Zg(this)};const Lw=gp({sign_:function(e){const t=fp(e,"x","sign");return ip.runKernel(Bh,{x:t})}});Vd().prototype.sign=function(){return this.throwIfDisposed(),Lw(this)},Vd().prototype.sin=function(){return this.throwIfDisposed(),zx(this)},Vd().prototype.sinh=function(){return this.throwIfDisposed(),Bx(this)},Vd().prototype.slice=function(e,t){return this.throwIfDisposed(),Yg(this,e,t)},Vd().prototype.softmax=function(e){return this.throwIfDisposed(),ny(this,e)},Vd().prototype.softplus=function(){return this.throwIfDisposed(),ry(this)},Vd().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Cx(this,e,t)},Vd().prototype.split=function(e,t){return this.throwIfDisposed(),sy(this,e,t)},Vd().prototype.sqrt=function(){return this.throwIfDisposed(),ay(this)},Vd().prototype.square=function(){return this.throwIfDisposed(),Eg(this)},Vd().prototype.squaredDifference=function(e){return this.throwIfDisposed(),lb(this,e)},Vd().prototype.squeeze=function(e){return this.throwIfDisposed(),iy(this,e)},Vd().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Bd?[this,e]:[this,...e];return oy(n,t)},Vd().prototype.step=function(e){return this.throwIfDisposed(),Sy(this,e)};const zw=gp({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u=fp(e,"x","stridedSlice");return ip.runKernel(Jh,{x:u},{begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}});Vd().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),zw(this,e,t,n,r,s,a,i,o)},Vd().prototype.sub=function(e){return this.throwIfDisposed(),dg(this,e)},Vd().prototype.sum=function(e,t){return this.throwIfDisposed(),pg(this,e,t)};const Pw=gp({tan_:function(e){const t=fp(e,"x","tan");return ip.runKernel(Qh,{x:t})}});Vd().prototype.tan=function(){return this.throwIfDisposed(),Pw(this)},Vd().prototype.tanh=function(){return this.throwIfDisposed(),ly(this)},Vd().prototype.tile=function(e){return this.throwIfDisposed(),eg(this,e)},Vd().prototype.toBool=function(){return this.throwIfDisposed(),pf(this,"bool")},Vd().prototype.toFloat=function(){return this.throwIfDisposed(),pf(this,"float32")},Vd().prototype.toInt=function(){return this.throwIfDisposed(),pf(this,"int32")};const Bw=gp({topk_:function(e,t=1,n=!0){const r=fp(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=ip.runKernel(nd,a,i);return{values:o,indices:l}}});Vd().prototype.topk=function(e,t){return this.throwIfDisposed(),Bw(this,e,t)},Vd().prototype.transpose=function(e){return this.throwIfDisposed(),gy(this,e)};const Vw=gp({unique_:function(e,t=0){const n=fp(e,"x","unique","string_or_numeric");El(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[a,i]=ip.runKernel(sd,r,s);return{values:a,indices:i}}});let Ww;function Uw(){return null==Ww&&(Ww=ip.backend.epsilon()),Ww}Vd().prototype.unique=function(e){return this.throwIfDisposed(),Vw(this,e)},Vd().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),tv(this,e,t)},Vd().prototype.unstack=function(e){return this.throwIfDisposed(),dy(this,e)},Vd().prototype.where=function(e,t){return this.throwIfDisposed(),fy(e,this,t)},Vd().prototype.zerosLike=function(){return this.throwIfDisposed(),my(this)};class Hw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hw.prototype)}}class Gw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gw.prototype)}}class jw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jw.prototype)}}class qw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qw.prototype)}}class Kw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kw.prototype)}}function Xw(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Zw(e,t){if(!e)throw new Kw(t)}function Yw(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Jw(e){return 1===e.length?e[0]:e}function Qw(e){return Array.isArray(e)?e:[e]}function ek(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function tk(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}Error;let nk={};function rk(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function sk(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>sk(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?sk(t):e[n]=t.value)}}}function ak(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in nk)a=nk[s];else if(a=t[s],null==a)throw new jw(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new jw(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in nk?[o,l]=nk.className:i in t&&([o,l]=t[i]),null==o)throw new jw(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(nk))e[n]=nk[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},nk);for(const s of Object.keys(n))nk[s]=n[s];sk(a.config);const r=l(o,a.config,n,s);return nk=Object.assign({},t),r}{const e=Object.assign({},nk);for(const r of Object.keys(n))nk[r]=n[r];const t=new o(a.config);return nk=Object.assign({},e),t}}}function ik(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ok(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function lk(e){if(null==e)throw new jw(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function uk(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new jw(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ck(e,t,n=0,r=1/0){return Zw(n>=0),Zw(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function hk(e,t){Array.isArray(e)?(r.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>hk(e,`element ${n+1} of ${t}`))):r.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${dk(e)}.`)}function dk(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>dk(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function pk(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function fk(e,t){return nm(()=>ay(pg(hg(e,e),t,!0)))}class mk extends u.Serializable{getConfig(){return{}}}class gk extends mk{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return nm(()=>{const t=fk(e,this.axis),n=Dm(t,0,this.maxValue);return hg(e,qm(n,cm(Uw(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}gk.className="MaxNorm",u.registerClass(gk);class yk extends mk{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return nm(()=>qm(e,cm(Uw(),fk(e,this.axis))))}getConfig(){return{axis:this.axis}}}yk.className="UnitNorm",u.registerClass(yk);class bk extends mk{apply(e){return jg(e)}}bk.className="NonNeg",u.registerClass(bk);class xk extends mk{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return nm(()=>{const t=fk(e,this.axis),n=cm(hg(this.rate,Dm(t,this.minValue,this.maxValue)),hg(1-this.rate,t));return hg(e,qm(n,cm(Uw(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}xk.className="MinMaxNorm",u.registerClass(xk);const vk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function wk(e){return rk(e)}function kk(e,t={}){return ak(e,u.SerializationMap.getMap().classNameMap,t,"constraint")}function Ik(e){return null==e?null:"string"==typeof e?kk({className:e in vk?vk[e]:e,config:{}}):e instanceof mk?e:kk(e)}const Nk=["channelsFirst","channelsLast"],Ck=["nearest","bilinear"],Sk=["valid","same","causal"],Tk=["max","avg"],_k=["sum","mul","concat","ave"],$k=new Map;function Ek(e){uk(Nk,"DataFormat",e)}function Ak(e){uk(Sk,"PaddingMode",e)}function Rk(e){uk(Tk,"PoolMode",e)}const Fk=[];function Dk(e,t){Fk.push(e);try{const e=t();return Fk.pop(),e}catch(n){throw Fk.pop(),n}}function Ok(e){if(!zk(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Fk.length?"":Fk.join("/")+"/")+e}function Mk(e){if(!zk(e))throw new Error("Not a valid tensor name: '"+e+"'");$k.has(e)||$k.set(e,0);const t=$k.get(e);if($k.set(e,$k.get(e)+1),t>0){const n=`${e}_${t}`;return $k.set(n,1),n}return e}const Lk=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function zk(e){return!!e.match(Lk)}function Pk(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Bk(e){return uy(e=Array.isArray(e)?new Float32Array(e):e)}function Vk(e){return vg(Bk(e)).dataSync()[0]}function Wk(e){return cg(Bk(e)).dataSync()[0]}function Uk(e,t){if(t<e)throw new jw(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Hk(e,t){return e.asType(t)}function Gk(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function jk(e,t,n){return nm(()=>{switch(e.rank){case 1:return Jg(e,t,n);case 2:return Qg(e,[t,0],[n,e.shape[1]]);case 3:return ey(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ty(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Yg(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Yg(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new jw(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function qk(e,t,n){return nm(()=>{switch(e.rank){case 1:return Jg(e,t,n);case 2:return Qg(e,[0,t],[e.shape[0],n]);case 3:return ey(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ty(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new jw(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Kk(e,t,n,r){return nm(()=>{switch(e.rank){case 1:return Jg(e,t,n);case 2:switch(r){case 1:return jk(e,t,n);case 2:return qk(e,t,n);default:throw new jw(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return jk(e,t,n);case 2:return ey(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qk(e,t,n);default:throw new jw(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return jk(e,t,n);case 2:return ty(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ty(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qk(e,t,n);default:throw new jw(`The axis is not within the rank of the tensor ${r}`)}default:throw new jw(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Xk(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Om(e,t)}function Zk(e,t){switch(e.rank){case 1:return Mm([e,t]);case 2:return Lm([e,t],0);case 3:return zm([e,t],0);case 4:return Pm([e,t],0);default:throw new jw(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Yk(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new jw(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return eg(e,t)}function Jk(e,t=0,n=1,r,s){return Hg(e,t,n,r,s)}function Qk(e,t,n,r){if(e.rank<2||t.rank<2)throw new qw(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new qw(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return c.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?nI(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(h).reshape([l,-1]);const d=[...s,...u];return c.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?nI(e.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function eI(e,t,n){return nm(()=>(t=Array.isArray(t)?uy(t,"int32"):t.toInt(),sg(e,t,n)))}function tI(e){return hg(e,e)}function nI(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new jw(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new jw(`Unsupported input rank by biasAdd: ${t.rank}`)}function rI(e,t,n){return nm(()=>(null==n&&(n="channelsLast"),Ek(n),e.add(nI(e.rank,t,n))))}function sI(e,t,n,r){return nm(()=>yy(e,t,n,r))}function aI(e,t,n=!1){return n?e():t()}const iI=["fanIn","fanOut","fanAvg"],oI=["normal","uniform","truncatedNormal"];class lI extends u.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class uI extends lI{apply(e,t){return Og(e,t)}}uI.className="Zeros",u.registerClass(uI);class cI extends lI{apply(e,t){return Mg(e,t)}}cI.className="Ones",u.registerClass(cI);class hI extends lI{constructor(e){if(super(),"object"!=typeof e)throw new jw(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new jw(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return nm(()=>hg(om(this.value),Mg(e,t)))}getConfig(){return{value:this.value}}}hI.className="Constant",u.registerClass(hI);class dI extends lI{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Gg(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dI.className="RandomUniform",u.registerClass(dI);class pI extends lI{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new qw(`randomNormal does not support dType ${t}.`);return Jk(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}pI.className="RandomNormal",u.registerClass(pI);class fI extends lI{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new qw(`truncatedNormal does not support dType ${t}.`);return hy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fI.className="TruncatedNormal",u.registerClass(fI);class mI extends lI{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return nm(()=>{if(2!==e.length||e[0]!==e[1])throw new jw("Identity matrix initializer can only be used for 2D square matrices.");return hg(this.gain,tg(e[0]))})}getConfig(){return{gain:this.gain}}}mI.className="Identity",u.registerClass(mI);class gI extends lI{constructor(e){if(super(),e.scale<0)throw new jw(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,uk(iI,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,uk(oI,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Ek(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Pk(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Pk(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Pk(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if(a/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,s):Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new qw(`${this.getClassName()} does not support dType ${t}.`);return hy(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Gg(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gI.className="VarianceScaling",u.registerClass(gI);class yI extends gI{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gI.className}}yI.className="GlorotUniform",u.registerClass(yI);class bI extends gI{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gI.className}}bI.className="GlorotNormal",u.registerClass(bI);class xI extends gI{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gI.className}}xI.className="HeNormal",u.registerClass(xI);class vI extends gI{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gI.className}}vI.className="HeUniform",u.registerClass(vI);class wI extends gI{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gI.className}}wI.className="LeCunNormal",u.registerClass(wI);class kI extends gI{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gI.className}}kI.className="LeCunNormal",u.registerClass(kI);class II extends lI{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new qw("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return nm(()=>{if(e.length<2)throw new qw("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Jk(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=hb.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),hg(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}II.className="Orthogonal",u.registerClass(II);const NI={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function CI(e,t={}){return ak(e,u.SerializationMap.getMap().classNameMap,t,"initializer")}function SI(e){return rk(e)}function TI(e){if("string"==typeof e){const t=e in NI?NI[e]:e;if("GlorotNormal"===t)return new bI;if("GlorotUniform"===t)return new yI;if("HeNormal"===t)return new xI;if("HeUniform"===t)return new vI;if("LeCunNormal"===t)return new wI;if("LeCunUniform"===t)return new kI;{const e={};return e.className=t,e.config={},CI(e)}}return e instanceof lI?e:CI(e)}let _I=0;function $I(){return _I++}const EI={};function AI(e=""){return e in EI||(EI[e]=0),EI[e]+=1,e+EI[e].toString()}function RI(e){return Array.isArray(e)&&Array.isArray(e[0])}function FI(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function DI(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new jw(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function OI(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new jw(`Expected exactly 1 Shape; got ${e.length}`)}return e}function MI(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce((e,t)=>e*t);return t}class LI{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=$I(),this.originalName=Ok(n=null==n?"Variable":n),this.name=Mk(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return ip.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function zI(e){return e.map(e=>e.read())}function PI(e){e.forEach(e=>{e[0].write(e[1])})}class BI{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class VI{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=$I(),null!=a&&(this.originalName=Ok(a),this.name=Mk(this.originalName)),this.rank=t.length}}let WI=0;class UI{constructor(e,t){this.callArgs=t,this.id=WI++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let HI=0;class GI extends u.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=HI++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ek(e)+"_"+AI(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Gw(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new jw(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Jw(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Jw(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Hw(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Hw(`Layer ${this.name} is not connected, no input to return.`);return Jw(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Hw(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Hw(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Jw(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Qw(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Qw(this.inputSpec);if(e.length!==t.length)throw new jw(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new jw(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new jw(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new jw(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new jw(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new jw(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new jw(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Qw(e);let r=!0;for(const a of n)if(!(a instanceof VI)){r=!1;break}let s=!0;for(const a of n)if(a instanceof VI){s=!1;break}if(r===s)throw new jw("Arguments to apply() must be all SymbolicTensors or all Tensors");return Dk(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Qw(e))t.push(n.shape);this.build(Jw(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=Qw(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Jw(a),null!=this.activityRegularizer)throw new qw("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Qw(e);const t=[];for(const n of e)t.push(n.shape);return Jw(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new VI(a,n,this,Qw(e),t,this.name,r)):new VI(a,r,this,Qw(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new qw("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Hw(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Hw(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Gw(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return MI(this.weights)}build(e){this.built=!0}getWeights(e=!1){return zI(e?this.trainableWeights:this.weights)}setWeights(e){nm(()=>{const t=this.weights;if(t.length!==e.length)throw new jw(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=zI(t);for(let a=0;a<s.length;++a){const i=s[a],o=t[a],l=e[a];if(!r.arraysEqual(i.shape,l.shape))throw new jw(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}PI(n)})}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new jw(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=TI("zeros"));const o=r.apply(t,n),l=new LI(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Qw(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=Qw(e);t=Qw(t),n=Qw(n),r=Qw(r),s=FI(s),a=FI(a);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new UI({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function jI(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=jI(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class qI extends GI{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:AI("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new jw("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new jw("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new jw("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new VI(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new UI({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new jw(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function KI(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];rm(r)}}function XI(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ZI;qI.className="InputLayer",u.registerClass(qI),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ZI||(ZI={}));class YI{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class JI{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class QI extends YI{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=nm(()=>cm(this.totals[r],hg(e,n)));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:nm(()=>{const e=hg(qm(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),sm(t[n])}))}}class eN extends YI{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)"number"!=typeof r[a]&&(e.push(r[a].data()),t.push(s),n.push(a))}const r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}class tN extends YI{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=r.now();return(...a)=>{const i=r.now();return i-s<t||(s=i,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await KI(n),r.push(this.yield(e,t,n))),r.push(kb()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await KI(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await KI(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(kb()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await KI(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await KI(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(kb()):r.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await KI(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await KI(e),await this.trainEnd(e))}}function nN(e,t){return null==e&&(e={}),e instanceof YI?[e]:Array.isArray(e)&&e[0]instanceof YI?e:Qw(e).map(e=>new tN(e,t))}class rN{constructor(){}static registerCallbackConstructor(e,t){r.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),rN.checkForDuplicate(t),null==rN.constructors[e]&&(rN.constructors[e]=[]),rN.constructors[e].push(t)}static checkForDuplicate(e){for(const t in rN.constructors)rN.constructors[+t].forEach(t=>{if(t===e)throw new jw("Duplicate callback constructor.")})}static clear(){rN.constructors={}}static createCallbacks(e){const t=[];for(const n in rN.constructors){const r=+n;e>=r&&t.push(...rN.constructors[r])}return t.map(e=>new e)}}function sN(e,t,n,r,s,a,i,o,l){const u=new eN,c=[new QI,...rN.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new JI(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function aN(e,t={},n=!1){return ak(e,u.SerializationMap.getMap().classNameMap,t,"layer",n)}function iN(e,t){return nm(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=pg(tI(e),t,!0),r=ng(n.shape,Uw()),s=ay(bg(n,r));return qm(e,s)})}function oN(e,t){return nm(()=>xg(tI(dg(t,e)),-1))}function lN(e,t){return nm(()=>xg(um(dg(t,e)),-1))}function uN(e,t){return nm(()=>{const n=dg(e,t),r=Dm(um(e),Uw(),Number.MAX_VALUE),s=um(qm(n,r));return hg(100,xg(s,-1))})}function cN(e,t,n=!1){return nm(()=>{if(n)t=ny(t);else{const e=pg(t,t.shape.length-1,!0);t=qm(t,e)}return t=Dm(t,Uw(),1-Uw()),Rg(pg(hg(e.toFloat(),lg(t)),t.shape.length-1))})}function hN(e,t,n=!1){return nm(()=>{const r=rg(function(e){const t=[Pk(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Dm(t,Uw(),1-Uw())).shape;return cN(Dg(r,s[s.length-1]).reshape(s),t,n)})}function dN(e,t){return nm(()=>{let n;return n=Dm(t,Uw(),1-Uw()),n=lg(qm(n,dg(1,n))),xg(function(e,t){if(!r.arraysEqual(e.shape,t.shape))throw new jw(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return nm(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}(e,n),-1)})}function pN(e,t){return nm(()=>{const n=iN(e,-1),r=iN(t,-1),s=hg(n,r);return Rg(pg(s,-1))})}rN.constructors={};const fN={meanSquaredError:oN,meanAbsoluteError:lN,meanAbsolutePercentageError:uN,meanSquaredLogarithmicError:function(e,t){return nm(()=>{const n=Dm(t,Uw(),Number.MAX_VALUE),r=lg(cm(1,n)),s=Dm(e,Uw(),Number.MAX_VALUE),a=lg(cm(1,s));return xg(tI(dg(r,a)),-1)})},squaredHinge:function(e,t){return nm(()=>{const n=bg(0,dg(1,hg(e,t)));return xg(tI(n),-1)})},hinge:function(e,t){return nm(()=>{const n=bg(0,dg(1,hg(e,t)));return xg(n,-1)})},categoricalHinge:function(e,t){return nm(()=>{const n=pg(hg(e,t),-1),r=cg(hg(dg(1,e),t),-1);return bg(0,cm(1,dg(r,n)))})},logcosh:function(e,t){return nm(()=>{const n=Math.log(2),r=dg(t,e),s=dg(cm(r,ry(hg(-2,r))),n);return xg(s,-1)})},categoricalCrossentropy:cN,sparseCategoricalCrossentropy:hN,binaryCrossentropy:dN,kullbackLeiblerDivergence:function(e,t){return nm(()=>{const n=Dm(e,Uw(),1),r=Dm(t,Uw(),1);return pg(hg(e,lg(qm(n,r))),-1)})},poisson:function(e,t){return nm(()=>{const n=lg(cm(Uw(),t));return xg(dg(t,hg(e,n)),-1)})},cosineProximity:pN};function mN(e){if("string"==typeof e){if(e in fN)return fN[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new jw(t)}return e}function gN(e,t){return nm(()=>{const n=hg(.5,Lg(t)),r=Hk(ag(t,n),e.dtype);return xg(Jm(e,r),-1)})}function yN(e,t){return nm(()=>Hk(Jm(pm(e,-1),pm(t,-1)),"float32"))}function bN(e,t){return dN(e,t)}function xN(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Jm(e,t).asType("float32")}const vN=cN,wN=hN,kN={binaryAccuracy:gN,categoricalAccuracy:yN,precision:function(e,t){return nm(()=>{const n=function(e,t){return nm(()=>mg(e.equal(1),t.equal(1)).sum().cast("float32"))}(e,t),r=function(e,t){return nm(()=>mg(e.equal(0),t.equal(1)).sum().cast("float32"))}(e,t),s=n.add(r);return fy(ag(s,0),n.div(s),0).cast("float32")})},categoricalCrossentropy:vN,sparseCategoricalCrossentropy:wN,mse:oN,MSE:oN,mae:lN,MAE:lN,mape:uN,MAPE:uN,cosine:pN};function IN(e){if("string"==typeof e&&e in kN)return kN[e];if("string"!=typeof e&&null!=e)return e;throw new jw(`Unknown metric ${e}`)}function NN(e){if(Zw(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(fN))if(fN[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(kN))if(kN[n]===e){t=n;break}return void 0!==t?t:e.name}}function CN(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!SN(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function SN(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!SN(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!SN(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function TN(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function _N(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(HW){r="multiple"}TN([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function $N(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(HW){s="multiple"}const a=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e)a.push(`${u.inboundLayers[e].name}[${u.nodeIndices[e]}][${u.tensorIndices[e]}]`);const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];TN([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let u=1;u<a.length;++u)TN(["","","",a[u]],t,r)}function EN(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function AN(e,t){if(null===e)return null;if("string"==typeof e)return tk(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];EN(t,s,r)?n.push(r):n.push(AN(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=tk(n);t[e]=AN(r,e)}}return t}}function RN(e,t){if(null==e)return null;if("string"==typeof e)return ek(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];EN(t,s,r)?n.push(r):n.push(RN(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[ek(n)]="name"!==n&&"className"!==n||"string"!=typeof r?RN(r,n):r}return t}}class FN{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof FN)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new jw(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return pf(t,e.dtype)}catch(HW){throw new jw(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof VI){if(null==this.id2Value[e.id])throw new jw(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new jw(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof VI){if(null==this.id2Value[e.id])throw new jw(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new jw(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&rm(this.id2Mask)}}const DN={},ON={};function MN(e,t,n,s){const a=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map(e=>e.name),u=[],c=t.names();for(const r of l)-1!==c.indexOf(r)?u.push(t.getValue(r)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().join(",");let d,p;if(null==DN[h]){const e=function(e,t){r.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(1===e.length){const r=zN(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=zN(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach(e=>s[t].add(e))}}return{sorted:n,recipientCounts:LN(s)}}(o,t);d=e.sorted,p=e.recipientCounts,DN[h]=d,ON[h]=p}d=DN[h],p={},a||Object.assign(p,ON[h]);const f=new FN(t);for(let r=0;r<d.length;++r){if(null!=s){const e=tm().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=d[r],i=e.sourceLayer;if(i instanceof qI)continue;const o=[],c=[],h=[];let m=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);o.push(e),c.push(r),null!=r&&(m=!0),a||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==l.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||h.push(e))}m&&((n=n||{}).mask=c[0]);const g=Qw(i.apply(o,n));let y=null;i.supportsMasking&&(y=i.computeMask(o,c));const b=PN(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=l.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}a||rm(h)}return f.disposeMasks(),i?u:u[0]}function LN(e){const t={};for(const n in e)t[n]=e[n].size;return t}function zN(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function PN(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class BN extends GI{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=AI(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],ok(this.inputs).length!==this.inputs.length)throw new jw(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);ok(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.nodeIndex,t=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Zw(0===t,"input layer has >1 nodes"),Zw(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof qI))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Gw(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(BN.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++)o(u.inputTensors[a],t,n,u.inboundLayers[a],u.nodeIndices[a],u.tensorIndices[a]);for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];e=Math.max(e,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r].inboundNodes[y.nodeIndices[r]];t[s.id]=Math.max(e+1,null==t[s.id]?0:t[s.id]),n[s.id]=s}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(s[y])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(ik);this.layers=[];for(const y of p){const e=d[y];e.sort((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof BN&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(ik);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Gw(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const y of g){const e=g.filter(e=>e===y).length;if(1!==e)throw new Gw(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new UI({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new jw("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new jw(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new jw(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new jw(`${e.length} of ${r} weights are not set: ${e}`)}PI(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.2.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=RN(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return nm(()=>{e=Qw(e);const n=new FN;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return MN(this.outputs,n,t)})}computeMask(e,t){return nm(()=>{let n;return e=Qw(e),n=null==t?Xw(null,e.length):Qw(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=FI(e);if(t.length!==this.inputLayers.length)throw new jw(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(ik);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++)r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`]);const s=FI(e.computeOutputShape(Jw(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++)a.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<a.length;i++){const e=a[i];Zw(e in n),s.push(n[e])}return Jw(s)}runInternalGraph(e,t){null==t&&(t=Xw(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(ik);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=Qw(e.call(t,u)),l=Qw(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map(e=>e[0]),i=a.map(e=>e[1]),null==u.mask&&(u.mask=i),o=Qw(e.call(r,u)),l=Qw(e.computeMask(r,i));if(e.activityRegularizer)throw new qw("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e)n[s[e].id]=[o[e],l[e]]}}}const s=[],a=[],i=[];for(const o of this.outputs){Zw(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof BN?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=BN.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new jw(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new jw("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new jw(`No such layer: ${e}`)}calculateLosses(){return nm(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=BN.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=BN.nodeKey(a,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(HW){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.tensorIndices[r];let o=t[BN.nodeKey(s,e.nodeIndices[r])];null==o&&(o=0),n.push([s.name,o,a,i])}s.push(n)}}}const i={};i.name=a.name,i.className=e,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=BN.nodeKey(e,this.inputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let s=t[n];null==s&&(s=0),r.push([e.name,s,this.inputLayersTensorIndices[a]])}e.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=BN.nodeKey(e,this.outputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let r=t[n];null==r&&(r=0),s.push([e.name,r,this.outputLayersTensorIndices[a]])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);n.push(c.inboundNodes[l].outputTensors[u])}n.length>0&&e.apply(Jw(n),r)}function l(e){const n=e.name,a=aN(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new jw(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)})}const u=t.name,c=t.layers;for(const m of c)l(m);for(;!lk(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];Zw(e in s),h.push(s[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];Zw(e in s),d.push(s[e].inboundNodes[t].outputTensors[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new jw("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){nm(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function VN(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{n.push(t in e?e[t]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function WN(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=nm(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1)return e.argMax(1);if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());rm(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),uy(s,"float32")}return null}function UN(e,t){return hg(e,t)}function HN(e,t){let n,s;n=t.xs,s=t.ys,r.assert(null!=n&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=GN("input",e.inputNames,n),i=GN("output",e.outputNames,s),o=a[0].shape[0];r.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),r.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)r.assert(a[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)r.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function GN(e,t,n){if(n instanceof Bd)return[n];if(Array.isArray(n))return r.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new jw(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function jN(e){return"function"==typeof e.iterator}function qN(e){r.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function KN(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>jk(e,t,n-t)):jk(e,t,n-t)}function XN(e,t){return nm(()=>null==e?null:Array.isArray(e)?e.map(e=>XN(e,t)):eI(e,"int32"===t.dtype?t:t.toInt()))}function ZN(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function YN(e){const t=[];e instanceof Bd&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Gk(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function JN(e,t){if(null==e)return;const n=[];if(t instanceof Bd)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const s in t)n.push(t[s].id);const r=[];if(e instanceof Bd)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function QN(e){return Array.isArray(e)}function eC(e){return!function(e){return e instanceof Bd}(e)&&!QN(e)}function tC(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(QN(e)&&e.length>0)t=!0;else if(eC(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new jw(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let a;if(eC(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new jw(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(QN(e)){if((e=e).length!==t.length)throw new jw(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new jw(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=YN(a),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new jw(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=e.shape[a],l=n[i][a];if(null!=l&&l>=0&&o!==l)throw new jw(`Error when checking ${s}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${e.shape}].`)}}return a}function nC(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new jw(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new jw(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new jw(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=e.shape[a],l=n[i][a];if(null!=l&&l!==o)throw new jw(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class rC extends BN{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new jw("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),TN(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?_N(o[c],n,r):$N(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=MI(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),u=MI(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>vb.adagrad(.01),Adadelta:()=>vb.adadelta(1,.95,Uw()),Adam:()=>vb.adam(.001,.9,.999,Uw()),Adamax:()=>vb.adamax(.002,.9,.999,Uw(),0),RMSProp:()=>vb.rmsprop(.001,.9,0,Uw()),SGD:()=>vb.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new jw(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof lm))throw new jw("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new jw(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>mN(e))}else{const n=mN(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new jw(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(mN(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a];this.feedOutputNames.push(this.outputNames[a]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Dk("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Dk("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===dN?-1!==["accuracy","acc"].indexOf(i)?r=gN:-1!==["crossentropy","ce"].indexOf(i)&&(r=bN):this.lossFunctions[e]===hN?-1!==["accuracy","acc"].indexOf(i)?r=xN:-1!==["crossentropy","ce"].indexOf(i)&&(r=wN):-1!==["accuracy","acc"].indexOf(i)?r=yN:-1!==["crossentropy","ce"].indexOf(i)&&(r=vN),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=IN(i);a=e,n=""+NN(i)}let t;Dk(n,()=>{t=a}),s(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;qN(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);return this.makeTestFunction(),Jw(this.testLoop(this.testFunction,a,r,n.verbose,n.steps))}finally{JN(s[0],e),JN(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new qw("Verbose mode is not implemented yet.");r.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const o="function"==typeof t.next?t:await t.iterator();let l=0,u=0;for(;!s||u<n.batches;){const t=await o.next();if(i=nm(()=>{if(t.value){const{xs:n,ys:r}=HN(e,t.value),s=n.concat(r),o=nm(()=>a(s));if(rm(s),0===u)for(let e=0;e<o.length;++e)i.push(om(0));const c=s[0].shape[0];for(let e=0;e<o.length;++e){const t=o[e],n=i[e];i[e]=nm(()=>cm(i[e],hg(c,t))),u>0&&rm(n)}rm(o),l+=c,++u}return i}),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let r=0;r<i.length;++r){const e=i[r];i[r]=qm(i[r],l),rm(e)}return Jw(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new jw(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new jw(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new jw("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),s=new FN;if(e instanceof Bd&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new jw(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new jw(`No value is provided for the model's input ${i.name}`);s.add(i,t)}const a=MN(r,s);return n?a:a[0]}retrieveSymbolicTensors(e){const t=Xw(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(e=>e.name);for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new jw(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return nm(()=>{const r=this.checkNumSamples(e);if(n)throw new qw("Verbose predictLoop() is not implemented yet.");const s=ZN(r,t),a=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)nm(()=>{const n=KN(e,s[t][0],s[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const a=new FN(r);return MN(this.outputs,a)}).forEach((e,t)=>a[t].push(e));return Jw(a.map(e=>Om(e,0)))})}predict(e,t={}){const n=YN(e);nC(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return qN(r),this.predictLoop(n,r)}finally{JN(n,e)}}predictOnBatch(e){nC(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Gw("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];a.push(this.feedLossFns[r]===hN?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const s=ok(e.map(e=>e.shape[0]));s.sort();const a=ok(t.map(e=>e.shape[0]));if(a.sort(),s.length>1)throw new jw(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new jw(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(s.length>0&&a.length>0&&!r.arraysEqual(s,a))throw new jw(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=tC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=tC(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[oN,dN,cN];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===cN&&1===a.shape[a.shape.length-1])throw new jw(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new jw(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new jw(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=VN(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await WN(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return nm(()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new qw("Verbose mode is not implemented yet.");if(null!=s)throw new qw("steps mode in testLoop() is not implemented yet");{const r=ZN(a,n),s=uy(Uk(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=jk(s,a,o-a),u=XN(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(om(0));for(let e=0;e<c.length;++e)i[e]=cm(i[e],hg(o-a,c[e]))}for(let e=0;e<i.length;++e)i[e]=qm(i[e],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Yw(e,r)>1&&(s+=`_${Yw(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new FN(e),o=MN(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=UN(e,s[n]));const a=xg(e);t.push(a),l=0===n?e:cm(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=xg((0,this.metricsTensors[n][0])(r[t],o[t]))}sm(e),a.push(e)}return l=xg(l),this.calculateLosses().forEach(e=>{l=cm(l,e)}),l},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>nm(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new FN(a),o=MN(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=xg((0,this.lossFunctions[e])(s[e],o[e]));n=0===e?r:cm(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=xg((0,this.metricsTensors[e][0])(s[n],o[n]));t.push(r)}return t})}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,l,u,c,h;e.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;qN(d);const p=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);a=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new qw("validationData including sample weights is not supported yet."):new jw(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);o=s.validationData[0],l=s.validationData[1];const t=!0,n=await e.standardizeUserData(o,l,null,null,t,d);u=n[0],c=n[1],m=u.concat(c)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-s.validationSplit)),t=a[0].shape[0];u=KN(a,e,t),a=KN(a,0,e),c=KN(i,e,t),i=KN(i,0,e),m=u.concat(c)}else null!=s.validationSteps&&(g=!0);const y=a.concat(i).concat(h);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;g?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map(e=>"val_"+e))):(v=null,m=[],w=x.slice());const k=nN(s.callbacks,s.yieldEvery);return await async function(e,t,n,s,a,i,o,l,u,c,h,d,p,f,m){null==a&&(a=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=u&&null!=c&&(g=!0);const y=e.checkNumSamples(n,a,null,"steps_per_epoch");let b;null!=y&&(b=Uk(0,y)),null==o&&(o=1);const{callbackList:x,history:v}=sN(l,o,i,p,y,null,a,g,d);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<i;++w){await x.onEpochBegin(w);const i={};{if("batch"===h)throw new qw("batch shuffling is not implemneted yet");h&&r.shuffle(b);const o=uy(b),l=ZN(y,a);for(let r=0;r<l.length;++r){const h={};if(await x.onBatchBegin(r,h),nm(()=>{const d=l[r][0],p=l[r][1],f=jk(o,d,p-d);h.batch=r,h.size=p-d;const m=XN(n,f),y=t(m);for(let e=0;e<s.length;++e){const t=y[e];h[s[e]]=t,sm(t)}if(r===l.length-1&&g){const t=e.testLoop(u,c,a);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];sm(r),i["val_"+n]=r}}}),await x.onBatchEnd(r,h),XI(h),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(w,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,d,s.epochs,s.verbose,k,v,m,s.shuffle,w,s.initialEpoch)}finally{e.isTraining=!1,JN(a,t),JN(i,n),JN(u,o),JN(c,l),null!=h&&rm(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(r.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),r.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),r.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(jN(n.validationData))r.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new qw("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const h=nN(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=sN(h,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const r={};await p.onEpochBegin(m);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=HN(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=VN(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await WN(s[e],null,t[e]))}const o=r.concat(s).concat(i),d=l(o);rm(o);for(let e=0;e<u.length;++e){const t=d[e];a[u[e]]=t,sm(t)}await p.onBatchEnd(h,a),XI(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(a){let t;t=jN(n.validationData)?Qw(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Qw(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)r[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,r),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return rm(a),Jw(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=tm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-tm().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ek(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>ek(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ek(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ek(NN(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ek(NN(e)));{const e={};for(const t in this.metrics)e[t]=ek(NN(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=aN(AN(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=tk(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>tk(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=tk(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>tk(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=tk(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=i.getSaveHandlers(e);if(0===t.length)throw new jw(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new jw(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new jw("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.2.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=i.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(CN(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){CN(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}rC.className="Model",u.registerClass(rC);class sC extends rC{}sC.className="Functional",u.registerClass(sC);class aC extends rC{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:AI("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new jw(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof aC||e instanceof rC;let n;if(t){if(n=e,1!==n.outputs.length)throw new jw("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new jw("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new jw("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new jw("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new qI({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new jw(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new jw("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=jI(this.outputs[0])}this.inboundNodes=[],new UI({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Xw(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(OI(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new rC({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Gw("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Gw("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Gw("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Gw("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new jw("Legacy serialization format not supported yet.");a=t}else r.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof aC))throw new qw(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const r of a){const e=aN(r,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new jw("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new jw("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}aC.className="Sequential",u.registerClass(aC);class iC extends u.Serializable{getConfig(){return{}}}class oC extends iC{apply(e,t=1){return function(e,t=1){if(1!==t)throw new qw(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Km(e)}(e,t)}}oC.className="elu",u.registerClass(oC);class lC extends iC{apply(e){return Kg(e)}}lC.className="selu",u.registerClass(lC);class uC extends iC{apply(e){return jg(e)}}uC.className="relu",u.registerClass(uC);class cC extends iC{apply(e){return nm(()=>wg(6,jg(e)))}}cC.className="relu6",u.registerClass(cC);class hC extends iC{apply(e){return e}}hC.className="linear",u.registerClass(hC);class dC extends iC{apply(e){return Zg(e)}}dC.className="sigmoid",u.registerClass(dC);class pC extends iC{apply(e){return function(e){return nm(()=>{const t=cm(.5,hg(.2,e));return Dm(t,0,1)})}(e)}}pC.className="hardSigmoid",u.registerClass(pC);class fC extends iC{apply(e){return ry(e)}}fC.className="softplus",u.registerClass(fC);class mC extends iC{apply(e){return function(e){return nm(()=>qm(e,um(e).add(1)))}(e)}}mC.className="softsign",u.registerClass(mC);class gC extends iC{apply(e){return ly(e)}}gC.className="tanh",u.registerClass(gC);class yC extends iC{apply(e,t=-1){return ny(e,t)}}yC.className="softmax",u.registerClass(yC);class bC extends iC{apply(e,t=-1){return fg(e,t)}}bC.className="logSoftmax",u.registerClass(bC);class xC extends iC{apply(e,t=1){return nm(()=>Zg(e.mul(t)).mul(e))}}function vC(e){return e.getClassName()}function wC(e,t={}){return ak(e,u.SerializationMap.getMap().classNameMap,t,"activation")}function kC(e){if(null==e)return wC({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},wC(t)}return e instanceof iC?e:wC(e)}xC.className="swish",u.registerClass(xC);class IC extends u.Serializable{}class NC extends IC{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return nm(()=>{let t=Og([1]);return this.hasL1&&(t=cm(t,pg(hg(this.l1,um(e))))),this.hasL2&&(t=cm(t,pg(hg(this.l2,tI(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}NC.className="L1L2",u.registerClass(NC);const CC={l1l2:"L1L2"};function SC(e){return rk(e)}function TC(e,t={}){return ak(e,u.SerializationMap.getMap().classNameMap,t,"regularizer")}function _C(e){return null==e?null:"string"==typeof e?TC({className:e in CC?CC[e]:e,config:{}}):e instanceof IC?e:TC(e)}class $C extends GI{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=DI(e);let n=jg(e);return null!=this.maxValue&&(n=Dm(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}$C.className="ReLU",u.registerClass($C);class EC extends GI{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=DI(e);return og(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}EC.className="LeakyReLU",u.registerClass(EC);class AC extends GI{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=TI(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_C(e.alphaRegularizer),this.alphaConstraint=Ik(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new jw(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=OI(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new BI({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=DI(e),Bg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:SI(this.alphaInitializer),alphaRegularizer:SC(this.alphaRegularizer),alphaConstraint:wk(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}AC.className="PReLU",u.registerClass(AC);class RC extends GI{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new qw(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=DI(e);return Km(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}RC.className="ELU",u.registerClass(RC);class FC extends GI{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=DI(e);return n.mul(Hk(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}FC.className="ThresholdedReLU",u.registerClass(FC);class DC extends GI{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new yC).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=DI(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function OC(e,t,n){if("number"==typeof e)return Xw(e,t);if(e.length!==t)throw new jw(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new jw(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function MC(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function LC(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Wk([n-t,0]);else{if("same"!==r)throw new jw(`Unsupport padding mode: ${r}.`);e*=t}return e}function zC(e,t){return nm(()=>(Ek(t),"channelsFirst"===t?gy(e,[0,2,3,1]):e))}function PC(e,t){return nm(()=>(Ek(t),"channelsFirst"===t?gy(e,[0,2,3,4,1]):e))}function BC(e,t,n,r=[1,1],s="valid",a,i,o=null){return nm(()=>{if(null==a&&(a="channelsLast"),Ek(a),3!==e.rank&&4!==e.rank)throw new jw(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new jw(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=zC(e,a);if("causal"===s)throw new qw("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=c.conv2d({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=gy(l,[0,3,1,2])),l})}DC.className="Softmax",u.registerClass(DC);class VC extends GI{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",VC.verifyArgs(t),this.rank=e,hk(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new qw(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=OC(t.kernelSize,e,"kernelSize"),this.strides=OC(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ak(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ek(this.dataFormat),this.activation=kC(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=TI(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ik(t.biasConstraint),this.biasRegularizer=_C(t.biasRegularizer),this.activityRegularizer=_C(t.activityRegularizer),this.dilationRate=OC(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new jw(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new jw(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new jw(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Zw("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!ck(e.kernelSize,"number",1,3))throw new jw(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vC(this.activation),useBias:this.useBias,biasInitializer:SI(this.biasInitializer),biasRegularizer:SC(this.biasRegularizer),activityRegularizer:SC(this.activityRegularizer),biasConstraint:wk(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class WC extends VC{constructor(e,t){super(e,t),this.kernel=null,WC.verifyArgs(t),this.filters=t.filters,hk(this.filters,"filters"),this.kernelInitializer=TI(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ik(t.kernelConstraint),this.kernelRegularizer=_C(t.kernelRegularizer)}build(e){e=OI(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new jw(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return nm(()=>{let t;e=DI(e);const n=null==this.bias?null:this.bias.read(),r=pk(this.activation.getClassName());if(null!=r&&2===this.rank)t=BC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return nm(()=>{if(null==a&&(a="channelsLast"),Ek(a),3!==e.shape.length)throw new jw(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new jw(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new jw(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=gy(e,[0,2,1])),"causal"===s)throw new qw("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Vm(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=rI(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=BC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new qw("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return nm(()=>{if(null==a&&(a="channelsLast"),Ek(a),4!==e.rank&&5!==e.rank)throw new jw(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new jw(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=PC(e,a);if("causal"===s)throw new qw("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Hm(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=rI(o,n)),"channelsFirst"===a&&(o=gy(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=OI(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=MC(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:SI(this.kernelInitializer),kernelRegularizer:SC(this.kernelRegularizer),kernelConstraint:wk(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new jw(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class UC extends WC{constructor(e){super(2,e),UC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ck(e.kernelSize,"number",1,2))throw new jw(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}UC.className="Conv2D",u.registerClass(UC);class HC extends WC{constructor(e){super(3,e),HC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new jw(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}HC.className="Conv3D",u.registerClass(HC);class GC extends UC{constructor(e){if(super(e),this.inputSpec=[new BI({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new jw(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=OI(e)).length)throw new jw("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new jw("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new BI({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return nm(()=>{let t=DI(e);if(4!==t.shape.length)throw new jw(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const a=n[s],i=this.kernelSize[1],o=this.strides[1],l=[n[0],LC(n[r],this.strides[0],this.kernelSize[0],this.padding),LC(a,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=gy(t,[0,2,3,1]));let u=Um(t,this.kernel.read(),l,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(u=gy(u,[0,3,1,2])),null!=this.bias&&(u=rI(u,this.bias.read(),this.dataFormat)),null!=this.activation&&(u=this.activation.apply(u)),u})}computeOutputShape(e){const t=(e=OI(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=LC(t[r],o,a,this.padding),t[s]=LC(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}GC.className="Conv2DTranspose",u.registerClass(GC);class jC extends WC{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new jw("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new jw("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new jw(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=TI(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_C(t.depthwiseRegularizer),this.depthwiseConstraint=Ik(t.depthwiseConstraint),this.pointwiseInitializer=TI(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_C(t.pointwiseRegularizer),this.pointwiseConstraint=Ik(t.pointwiseConstraint)}build(e){if((e=OI(e)).length<this.rank+2)throw new jw(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new jw(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):null,this.inputSpec=[new BI({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return nm(()=>{let t;if(e=DI(e),1===this.rank)throw new qw("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=gy(e,[0,2,3,1])),t=Xg(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=rI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=gy(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=SI(this.depthwiseInitializer),e.pointwiseInitializer=SI(this.pointwiseInitializer),e.depthwiseRegularizer=SC(this.depthwiseRegularizer),e.pointwiseRegularizer=SC(this.pointwiseRegularizer),e.depthwiseConstraint=wk(this.depthwiseConstraint),e.pointwiseConstraint=wk(this.pointwiseConstraint),e}}jC.className="SeparableConv";class qC extends jC{constructor(e){super(2,e)}}qC.className="SeparableConv2D",u.registerClass(qC);class KC extends WC{constructor(e){super(1,e),KC.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ck(e.kernelSize,"number",1,1))throw new jw(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}KC.className="Conv1D",u.registerClass(KC);class XC extends GI{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return nm(()=>{if(e=DI(e),"channelsLast"===this.dataFormat){const t=Kk(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Kk(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Kk(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Kk(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}XC.className="Cropping2D",u.registerClass(XC);class ZC extends GI{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ek(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,uk(Ck,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return nm(()=>{let t=DI(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=gy(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return gy(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ZC.className="UpSampling2D",u.registerClass(ZC);class YC extends VC{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=TI(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ik(e.depthwiseConstraint),this.depthwiseRegularizer=_C(e.depthwiseRegularizer)}build(e){if((e=OI(e)).length<4)throw new jw(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new jw(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return nm(()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return nm(()=>{null==s&&(s="channelsLast"),Ek(s);let i=zC(e,s);if(4!==e.rank)throw new jw(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new jw(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Gm(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=gy(i,[0,3,1,2])),i})}(e=DI(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=rI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=OI(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=MC("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),s=MC(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,s]:[e[0],r,s,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=SI(this.depthwiseInitializer),e.depthwiseRegularizer=SC(this.depthwiseRegularizer),e.depthwiseConstraint=wk(this.depthwiseRegularizer),e}}function JC(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new jw("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function QC(e,t,n,r=!1,s,a,i=!1,o=!1){return nm(()=>{const l=t.shape.length;if(l<3)throw new jw(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Uk(2,l));if(t=gy(t,u),null!=a)throw new qw("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Qm(s,-1)),s=gy(s,u)),r&&(t=qg(t,0),null!=s&&(s=qg(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=dy(t);let m,g;null!=s&&(m=dy(s));for(let t=0;t<p;++t){const n=f[t],r=nm(()=>e(n,d));if(null==s)h=r[0],d=r[1];else{const e=nm(()=>{const e=m[t],n=Lg(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map((t,s)=>r[1][s].mul(e).add(t.mul(n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=oy(c,1)),[h,g,d]})}YC.className="DepthwiseConv2D",u.registerClass(YC);class eS extends GI{constructor(e){let t;if(super(e),null==e.cell)throw new jw("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new lS({cells:e.cell}):e.cell,null==t.stateSize)throw new jw("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new BI({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Uk(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){RI(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return nm(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new qw("Constants support is not implemented in RNN yet.");RI(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new BI({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new jw(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(e=>new BI({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){nm(()=>{if(!this.stateful)throw new Hw("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new jw("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>Og([n,e])):[Og([n,this.cell.stateSize])];else if(null==e)rm(this.states_),null!=this.keptStates&&(rm(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Og([n,e])):this.states_[0]=Og([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new jw(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):rm(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!r.arraysEqual(s.shape,i))throw new jw(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map(e=>sm(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=JC(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new BI({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof VI){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return nm(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=DI(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new jw(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=QC((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(e){return nm(()=>{let t=Og(e.shape);return t=pg(t,[1,2]),t=Gk(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?Yk(t,[1,e]):t):this.cell.stateSize>1?[Yk(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===eS.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=aN(t.cell,n);return new e(Object.assign(t,{cell:r}))}}eS.className="RNN",u.registerClass(eS);class tS extends GI{}class nS extends tS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,hk(this.units,"units"),this.activation=kC(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=TI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=TI(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=TI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_C(e.kernelRegularizer),this.recurrentRegularizer=_C(e.recurrentRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.kernelConstraint=Ik(e.kernelConstraint),this.recurrentConstraint=Ik(e.recurrentConstraint),this.biasConstraint=Ik(e.biasConstraint),this.dropout=Vk([1,Wk([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vk([1,Wk([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=OI(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return nm(()=>{if(2!==(e=e).length)throw new jw(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=uS({ones:()=>Lg(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=uS({ones:()=>Lg(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Qk(null!=a?hg(e,a):e,this.kernel.read()),null!=this.bias&&(s=rI(s,this.bias.read())),null!=i&&(n=hg(n,i));let o=cm(s,Qk(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vC(this.activation),useBias:this.useBias,kernelInitializer:SI(this.kernelInitializer),recurrentInitializer:SI(this.recurrentInitializer),biasInitializer:SI(this.biasInitializer),kernelRegularizer:SC(this.kernelRegularizer),recurrentRegularizer:SC(this.recurrentRegularizer),biasRegularizer:SC(this.biasRegularizer),activityRegularizer:SC(this.activityRegularizer),kernelConstraint:wk(this.kernelConstraint),recurrentConstraint:wk(this.recurrentConstraint),biasConstraint:wk(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}nS.className="SimpleRNNCell",u.registerClass(nS);class rS extends eS{constructor(e){e.cell=new nS(e),super(e)}call(e,t){return nm(()=>(null!=this.cell.dropoutMask&&(rm(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(rm(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}}rS.className="SimpleRNN",u.registerClass(rS);class sS extends tS{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new jw("GRUCell does not support reset_after parameter set to true.");this.units=e.units,hk(this.units,"units"),this.activation=kC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=kC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=TI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=TI(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=TI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_C(e.kernelRegularizer),this.recurrentRegularizer=_C(e.recurrentRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.kernelConstraint=Ik(e.kernelConstraint),this.recurrentConstraint=Ik(e.recurrentConstraint),this.biasConstraint=Ik(e.biasConstraint),this.dropout=Vk([1,Wk([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vk([1,Wk([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=OI(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return nm(()=>{if(2!==(e=e).length)throw new jw(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=uS({ones:()=>Lg(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=uS({ones:()=>Lg(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.recurrentDropoutMask;let a,i,o;0<this.dropout&&this.dropout<1&&(e=hg(e,this.dropoutMask[0]));let l=Qk(e,this.kernel.read());this.useBias&&(l=rI(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hg(r,s[0]));const u=this.recurrentKernel.read(),[c,h]=sy(u,[2*this.units,this.units],u.rank-1),d=Qk(r,c),[p,f,m]=sy(l,3,l.rank-1),[g,y]=sy(d,2,d.rank-1);a=this.recurrentActivation.apply(cm(p,g)),i=this.recurrentActivation.apply(cm(f,y));const b=Qk(hg(i,r),h);o=this.activation.apply(cm(m,b));const x=cm(hg(a,r),hg(cm(1,Rg(a)),o));return[x,x]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vC(this.activation),recurrentActivation:vC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:SI(this.kernelInitializer),recurrentInitializer:SI(this.recurrentInitializer),biasInitializer:SI(this.biasInitializer),kernelRegularizer:SC(this.kernelRegularizer),recurrentRegularizer:SC(this.recurrentRegularizer),biasRegularizer:SC(this.biasRegularizer),activityRegularizer:SC(this.activityRegularizer),kernelConstraint:wk(this.kernelConstraint),recurrentConstraint:wk(this.recurrentConstraint),biasConstraint:wk(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}sS.className="GRUCell",u.registerClass(sS);class aS extends eS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new sS(e),super(e)}call(e,t){return nm(()=>(null!=this.cell.dropoutMask&&(rm(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(rm(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}aS.className="GRU",u.registerClass(aS);class iS extends tS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,hk(this.units,"units"),this.activation=kC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=kC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=TI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=TI(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=TI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_C(e.kernelRegularizer),this.recurrentRegularizer=_C(e.recurrentRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.kernelConstraint=Ik(e.kernelConstraint),this.recurrentConstraint=Ik(e.recurrentConstraint),this.biasConstraint=Ik(e.biasConstraint),this.dropout=Vk([1,Wk([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vk([1,Wk([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;if(e=OI(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends lI{apply(t,n){const s=e.apply([r]),a=(new cI).apply([r]),i=e.apply([2*r]);return Zk(Zk(s,a),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return nm(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new jw(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=uS({ones:()=>Lg(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=uS({ones:()=>Lg(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.recurrentDropoutMask;let i,o,l,u;0<this.dropout&&this.dropout<1&&(e=hg(e,this.dropoutMask[0]));let c=Qk(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hg(r,a[0])),c=cm(c,Qk(r,this.recurrentKernel.read())),this.useBias&&(c=rI(c,this.bias.read()));const[h,d,p,f]=sy(c,4,c.rank-1);i=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(d),l=cm(hg(o,s),hg(i,this.activation.apply(p))),u=this.recurrentActivation.apply(f);const m=hg(u,this.activation.apply(l));return[m,m,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vC(this.activation),recurrentActivation:vC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:SI(this.kernelInitializer),recurrentInitializer:SI(this.recurrentInitializer),biasInitializer:SI(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:SC(this.kernelRegularizer),recurrentRegularizer:SC(this.recurrentRegularizer),biasRegularizer:SC(this.biasRegularizer),activityRegularizer:SC(this.activityRegularizer),kernelConstraint:wk(this.kernelConstraint),recurrentConstraint:wk(this.recurrentConstraint),biasConstraint:wk(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}iS.className="LSTMCell",u.registerClass(iS);class oS extends eS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new iS(e),super(e)}call(e,t){return nm(()=>(null!=this.cell.dropoutMask&&(rm(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(rm(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}oS.className="LSTM",u.registerClass(oS);class lS extends tS{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return nm(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;RI(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{Dk(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const s of t.cells)r.push(aN(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return zI(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}PI(t)}}function uS(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>sI(t(),n),i=()=>aI(a,t,r);return!s||s<=1?sm(i().clone()):Array(s).fill(void 0).map(i).map(e=>sm(e.clone()))}var cS,hS;lS.className="StackedRNNCells",u.registerClass(lS);class dS extends eS{constructor(e){if(e.unroll)throw new qw("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new qw("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new BI({ndim:5})]}call(e,t){return nm(()=>{if(null!=this.cell.dropoutMask&&(rm(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(rm(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new jw("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return nm(()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=Og([n[0],...n.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){nm(()=>{if(!this.stateful)throw new Hw("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new jw("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>Og(a)):[Og(a)];else if(null==e)rm(this.states_),null!=this.keptStates&&(rm(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Og(a)):this.states_[0]=Og(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new jw(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):rm(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.arraysEqual(n.shape,s))throw new jw(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>sm(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?4:3],u=MC(e[o?3:2],r[0],s,a[0],i[0]),c=MC(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,u,c]:[u,c,n]]}}dS.className="ConvRNN2D";class pS extends iS{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,hk(this.filters,"filters"),this.kernelSize=OC(n,2,"kernelSize"),this.kernelSize.forEach(e=>hk(e,"kernelSize")),this.strides=OC(r||1,2,"strides"),this.strides.forEach(e=>hk(e,"strides")),this.padding=s||"valid",Ak(this.padding),this.dataFormat=a||"channelsLast",Ek(this.dataFormat),this.dilationRate=OC(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>hk(e,"dilationRate"))}build(e){var t;e=OI(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new jw(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends lI{apply(e,t){return Xk([n.apply([r]),Mg([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return nm(()=>{if(3!==e.length)throw new jw(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=uS({ones:()=>Lg(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?hg(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=uS({ones:()=>Lg(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,v]=sy(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?sy(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,N,this.padding);const[C,S,T,_]=sy(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,S),m=this.recurrentConv(m,T),g=this.recurrentConv(g,_);const $=this.recurrentActivation.apply(cm(l,p)),E=this.recurrentActivation.apply(cm(u,f)),A=cm(hg(E,a),hg($,this.activation.apply(cm(c,m)))),R=hg(this.recurrentActivation.apply(cm(h,g)),this.activation.apply(A));return[R,R,A]})}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(super.getConfig(),["units"]);return Object.assign({},e,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const s=Bm(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?rI(s,n,this.dataFormat):s}recurrentConv(e,t){return Bm(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}pS.className="ConvLSTM2DCell",u.registerClass(pS);class fS extends dS{constructor(e){const t=new pS(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}fS.className="ConvLSTM2D",u.registerClass(fS);class mS extends GI{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return aI(()=>sI(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}mS.className="Dropout",u.registerClass(mS);class gS extends mS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}gS.className="SpatialDropout1D",u.registerClass(gS);class yS extends GI{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,hk(this.units,"units"),this.activation=kC(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=TI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=TI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ik(e.kernelConstraint),this.biasConstraint=Ik(e.biasConstraint),this.kernelRegularizer=_C(e.kernelRegularizer),this.biasRegularizer=_C(e.biasRegularizer),this.activityRegularizer=_C(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=OI(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=OI(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e),r=pk(this.activation.getClassName());let s;return null!=r?s=Qk(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Qk(n,this.kernel.read()),null!=this.bias&&(s=rI(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:vC(this.activation),useBias:this.useBias,kernelInitializer:SI(this.kernelInitializer),biasInitializer:SI(this.biasInitializer),kernelRegularizer:SC(this.kernelRegularizer),biasRegularizer:SC(this.biasRegularizer),activityRegularizer:SC(this.activityRegularizer),kernelConstraint:wk(this.kernelConstraint),biasConstraint:wk(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}yS.className="Dense",u.registerClass(yS);class bS extends GI{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=OI(e);for(const t of e.slice(1))if(null==t)throw new jw(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Pk(e,1)]}call(e,t){return nm(()=>{this.invokeCallHook(e,t);let n=DI(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new jw(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Pk(e.shape,1)];return e.reshape(t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}bS.className="Flatten",u.registerClass(bS);class xS extends GI{constructor(e){super(e),this.supportsMasking=!0,this.activation=kC(e.activation)}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e);return this.activation.apply(n)})}getConfig(){const e={activation:vC(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}xS.className="Activation",u.registerClass(xS);class vS extends GI{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return nm(()=>{return e=DI(e),t=e,n=this.n,nm(()=>{if(2!==t.shape.length)throw new jw(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Yk(Gk(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}vS.className="RepeatVector",u.registerClass(vS);class wS extends GI{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new jw("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=Pk(e);if(null!==a){if(0===s||i%s!=0)throw new jw(n);r[a]=i/s}else if(i!==s)throw new jw(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}wS.className="Reshape",u.registerClass(wS);class kS extends GI{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Uk(1,e.dims.length+1);if(!r.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new BI({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=OI(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return gy(DI(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}kS.className="Permute",u.registerClass(kS);class IS extends GI{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=DI(e);return dm(Fg(n,this.maskValue),-1)}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e),r=dm(Fg(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}IS.className="Masking",u.registerClass(IS);class NS extends GI{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(Qw(e.inputLength))}this.inputDim=e.inputDim,hk(this.inputDim,"inputDim"),this.outputDim=e.outputDim,hk(this.outputDim,"outputDim"),this.embeddingsInitializer=TI(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_C(e.embeddingsRegularizer),this.activityRegularizer=_C(e.activityRegularizer),this.embeddingsConstraint=Ik(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return nm(()=>this.maskZero?(e=DI(e),Fg(e,my(e))):null)}computeOutputShape(e){if(e=OI(e),null==this.inputLength)return[...e,this.outputDim];const t=Qw(this.inputLength);if(t.length!==e.length-1)throw new jw(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new jw(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return nm(()=>{this.invokeCallHook(e,t);let n=DI(e);return"int32"!==n.dtype&&(n=Hk(n,"int32")),eI(this.embeddings.read(),n.as1D()).reshape(OI(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:SI(this.embeddingsInitializer),embeddingsRegularizer:SC(this.embeddingsRegularizer),activityRegularizer:SC(this.activityRegularizer),embeddingsConstraint:wk(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}NS.className="Embedding",u.registerClass(NS);class CS extends GI{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new qw}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new jw("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[OI(e)]),(e=e).length<2)throw new jw(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=ok(t),t.length>1)throw new jw(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==ok(r).length}call(e,t){return nm(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Wk(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Gk(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=a.reshape([r].concat(Pk(e.slice(1))));i=gy(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const r=Uk(1,e).concat([0]);t.push(gy(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=gy(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(Uk(0,s-1));r=gy(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=ok(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return nm(()=>{if(null==t)return null;if(!Array.isArray(t))throw new jw("`mask` should be an Array");if(!Array.isArray(e))throw new jw("`inputs` should be an Array");if(t.length!==e.length)throw new jw(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:Qm(e,0)))[0];for(let e=1;e<t.length-1;++e)n=mg(n,t[e]);return n})}}class SS extends CS{constructor(e){super(e)}mergeFunction(e){return nm(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=cm(t,e[n]);return t})}}SS.className="Add",u.registerClass(SS);class TS extends CS{constructor(e){super(e)}mergeFunction(e){return nm(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=hg(t,e[n]);return t})}}TS.className="Multiply",u.registerClass(TS);class _S extends CS{constructor(e){super(e)}mergeFunction(e){return nm(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=cm(t,e[n]);return hg(1/e.length,t)})}}_S.className="Average",u.registerClass(_S);class $S extends CS{constructor(e){super(e)}mergeFunction(e){return nm(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=bg(t,e[n]);return t})}}$S.className="Maximum",u.registerClass($S);class ES extends CS{constructor(e){super(e)}mergeFunction(e){return nm(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wg(t,e[n]);return t})}}ES.className="Minimum",u.registerClass(ES);class AS extends CS{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new jw("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(r.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new jw("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return nm(()=>Xk(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new jw("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new jw("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new jw("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new jw(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return nm(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let a=0;a<e.length;++a)r.push(null==t[a]?Lg(e[a]).asType("bool"):t[a].rank<e[a].rank?Qm(t[a],-1):t[a]);const s=Om(r,this.axis);return hm(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function RS(e,t){for(;e<0;)e+=t;return e}AS.className="Concatenate",u.registerClass(AS);class FS extends CS{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new qw("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new jw(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new jw(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>RS(t,e[n].shape.length)):[RS(this.axes,n.shape.length),RS(this.axes,s.shape.length)],this.normalize&&(n=iN(n,t[0]),s=iN(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new qw("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),r.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new qw("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return nm(()=>{let n,r;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(r=2===e.shape.length&&2===t.shape.length?i[0]===i[1]?e.mul(t).sum(i[0]):e.transpose([1,0]).mul(t).sum(i[1]):e.matMul(t,i[0]!==e.shape.length-1,i[1]===t.shape.length-1),n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);r=r.squeeze(t)}return 1===r.shape.length&&(r=r.expandDims(1)),r})}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[RS(this.axes,e.length),RS(this.axes,t.length)],n}computeOutputShape(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new qw("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}FS.className="Dot",u.registerClass(FS);class DS extends GI{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e);return aI(()=>Jk(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}}DS.className="GaussianNoise",u.registerClass(DS);class OS extends GI{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return nm(()=>{this.invokeCallHook(e,t);const n=DI(e);return this.rate>0&&this.rate<1?aI(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Jk(n.shape,1,e))},()=>n,t.training||!1):n})}}OS.className="GaussianDropout",u.registerClass(OS);class MS extends GI{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||DI(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return nm(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return aI(()=>{const t=DI(e),r=-1.7580993408473766;let s=ig(Gg(n),this.rate);s=Hk(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)},()=>DI(e),t.training||!1)}return e})}}function LS(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Am(e,t,n,r,s,a);else if(3===e.rank)i=Rm(e,t,n,r,s,a);else{if(4!==e.rank)throw new qw(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Fm(e,t,n,r,s,a)}return i}MS.className="AlphaDropout",u.registerClass(MS);class zS extends GI{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=TI(e.betaInitializer||"zeros"),this.gammaInitializer=TI(e.gammaInitializer||"ones"),this.movingMeanInitializer=TI(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=TI(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ik(e.betaConstraint),this.gammaConstraint=Ik(e.gammaConstraint),this.betaRegularizer=_C(e.betaRegularizer),this.gammaRegularizer=_C(e.gammaRegularizer)}build(e){e=OI(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new jw(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new BI({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return nm(()=>{const n=null!=t.training&&t.training,s=DI(e),a=s.shape,i=a.length,o=Uk(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Xw(1,i);u[l]=a[l];const c=o.slice();c.sort();const h=!r.arraysEqual(c,Uk(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,r=this.scale?this.gamma.read().reshape(u):null;return LS(s,e,t,n,r,this.epsilon)}return LS(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,f]=function(e,t,n,s,a=.001){return r.arraysEqual(s.slice().sort(),Uk(0,e.rank-1))?function(e,t,n,r,s=.001){return nm(()=>{const a=Ag(e,r),i=a.mean,o=a.variance;return[LS(e,i,o,n,t,s),i,o]})}(e,t,n,s,a):function(e,t,n,r,s=.001){return nm(()=>{const a=Ag(e,r),i=a.mean,o=a.variance,l=[];for(const t of Uk(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[LS(e,u,c,d,h,s),i,o]})}(e,t,n,s,a)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{nm(()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:SI(this.betaInitializer),gammaInitializer:SI(this.gammaInitializer),movingMeanInitializer:SI(this.movingMeanInitializer),movingVarianceInitializer:SI(this.movingVarianceInitializer),betaRegularizer:SC(this.betaRegularizer),gammaRegularizer:SC(this.gammaRegularizer),betaConstraint:wk(this.betaConstraint),gammaConstraint:wk(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zS.className="BatchNormalization",u.registerClass(zS);class PS extends GI{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=TI(e.betaInitializer||"zeros"),this.gammaInitializer=TI(e.gammaInitializer||"ones"),this.betaRegularizer=_C(e.betaRegularizer),this.gammaRegularizer=_C(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=OI(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ok(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const n=DI(e),r=n.shape,s=r.length;return nm(()=>{let{mean:e,variance:t}=Ag(n,this.axis,!0);const a=Xw(1,s);for(const n of this.axis)a[n]=r[n];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),LS(n,e,t,l,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:SI(this.betaInitializer),gammaInitializer:SI(this.gammaInitializer),betaRegularizer:SC(this.betaRegularizer),gammaRegularizer:SC(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}PS.className="LayerNormalization",u.registerClass(PS);class BS extends GI{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new jw(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new jw(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new jw(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new BI({ndim:4})]}computeOutputShape(e){let t,n;return e=OI(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return nm(()=>{return t=DI(e),n=this.padding,r=this.dataFormat,nm(()=>{if(4!==t.rank)throw new jw(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new jw("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new jw(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],zg(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function VS(e,t,n,r,s,a){return nm(()=>{let i;Ek(s),Rk(a),Ak(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=zC(e,s);const o="same"===r?"same":"valid";return i="max"===a?gg(e,t,n,o):_m(e,t,n,o),"channelsFirst"===s&&(i=gy(i,[0,3,1,2])),i})}function WS(e,t,n,r,s,a){return nm(()=>{let i;Ek(s),Rk(a),Ak(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=PC(e,s);const o="same"===r?"same":"valid";return i="max"===a?yg(e,t,n,o):$m(e,t,n,o),"channelsFirst"===s&&(i=gy(i,[0,4,1,2,3])),i})}BS.className="ZeroPadding2D",u.registerClass(BS);class US extends GI{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new jw(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(hk(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new jw(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}hk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ak(this.padding),this.inputSpec=[new BI({ndim:3})]}computeOutputShape(e){const t=MC((e=OI(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return nm(()=>{this.invokeCallHook(e,t),e=Gk(DI(e),2);const n=this.poolingFunction(DI(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return iy(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class HS extends US{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ek(s),Ak(r),VS(e,t,n,r,s,"max")}}HS.className="MaxPooling1D",u.registerClass(HS);class GS extends US{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ek(s),Ak(r),VS(e,t,n,r,s,"avg")}}GS.className="AveragePooling1D",u.registerClass(GS);class jS extends GI{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new jw(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];hk(this.poolSize,"poolSize"),hk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ek(this.dataFormat),Ak(this.padding),this.inputSpec=[new BI({ndim:4})]}computeOutputShape(e){e=OI(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=MC(t,this.poolSize[0],this.padding,this.strides[0]),n=MC(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return nm(()=>(this.invokeCallHook(e,t),this.poolingFunction(DI(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qS extends jS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ek(s),Ak(r),VS(e,t,n,r,s,"max")}}qS.className="MaxPooling2D",u.registerClass(qS);class KS extends jS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ek(s),Ak(r),VS(e,t,n,r,s,"avg")}}KS.className="AveragePooling2D",u.registerClass(KS);class XS extends GI{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new jw(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];hk(this.poolSize,"poolSize"),hk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ek(this.dataFormat),Ak(this.padding),this.inputSpec=[new BI({ndim:5})]}computeOutputShape(e){e=OI(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=MC(t,this.poolSize[0],this.padding,this.strides[0]),n=MC(n,this.poolSize[1],this.padding,this.strides[1]),r=MC(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return nm(()=>(this.invokeCallHook(e,t),this.poolingFunction(DI(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ZS extends XS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ek(s),Ak(r),WS(e,t,n,r,s,"max")}}ZS.className="MaxPooling3D",u.registerClass(ZS);class YS extends XS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ek(s),Ak(r),WS(e,t,n,r,s,"avg")}}YS.className="AveragePooling3D",u.registerClass(YS);class JS extends GI{constructor(e){super(e),this.inputSpec=[new BI({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new qw}}class QS extends JS{constructor(e){super(e||{})}call(e,t){return nm(()=>{const t=DI(e);return xg(t,1)})}}QS.className="GlobalAveragePooling1D",u.registerClass(QS);class eT extends JS{constructor(e){super(e||{})}call(e,t){return nm(()=>{const t=DI(e);return cg(t,1)})}}eT.className="GlobalMaxPooling1D",u.registerClass(eT);class tT extends GI{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ek(this.dataFormat),this.inputSpec=[new BI({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new qw}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class nT extends tT{call(e,t){return nm(()=>{const t=DI(e);return xg(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}nT.className="GlobalAveragePooling2D",u.registerClass(nT);class rT extends tT{call(e,t){return nm(()=>{const t=DI(e);return cg(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}rT.className="GlobalMaxPooling2D",u.registerClass(rT);class sT extends GI{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=aN(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class aT extends sT{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=OI(e)).length<3)throw new jw(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=OI(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return nm(()=>QC((e,n)=>[DI(this.layer.call(e,t)),[]],e=DI(e),[],!1,null,null,!1,!0)[1])}}aT.className="TimeDistributed",u.registerClass(aT);class iT extends sT{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=aN(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=aN(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,uk(_k,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new qw("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Jw(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=JC(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new jw("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map(e=>new BI({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new qw("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof VI;for(const l of a)if(l instanceof VI!==o)throw new jw("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return nm(()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=qg(s,1)),"concat"===this.mergeMode?i=Xk([r,s]):"sum"===this.mergeMode?i=cm(r,s):"ave"===this.mergeMode?i=hg(.5,cm(r,s)):"mul"===this.mergeMode?i=hg(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Dk(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Dk(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=aN(t.layer);if(delete t.layer,null!=t.numConstants)throw new qw("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}iT.className="Bidirectional",u.registerClass(iT),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(cS||(cS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(hS||(hS={}));const oT=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lT=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uT=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],cT=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hT=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],dT=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pT=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],fT=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],mT=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],gT=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],yT=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bT=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xT=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],vT=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],wT=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],kT=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],IT=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];gp({addN_:function(e){El(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),El(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>fp(e,`tensors${t}`,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!Ml(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),ip.runKernel(Su,t)}}),gp({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a=fp(e,"x","maxPoolWithArgmax"),i=ip.runKernel(th,{x:a},{filterSize:t,strides:n,pad:r,includeBatchInIndex:s});return{result:i[0],indexes:i[1]}}}),gp({multinomial_:function(e,t,n,r=!1){const s=fp(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?Tm(s,[1,-1]):s,l=ip.runKernel(oh,{logits:o},{numSamples:t,seed:n,normalized:r});return 1===i?Tm(l,[l.size]):l}}),gp({sparseToDense_:function(e,t,n,r=0){const s=fp(e,"sparseIndices","sparseToDense","int32"),a=fp(t,"sparseValues","sparseToDense"),i=fp(r,"defaultValue","sparseToDense",a.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);if(0!==t.rank&&(1!==t.rank||t.size!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i),ip.runKernel(Yh,{sparseIndices:s,sparseValues:a,defaultValue:i},{outputShape:n})}}),gp({bincount_:function(e,t,n){const r=fp(e,"x","bincount"),s=fp(t,"weights","bincount");return El("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),El(n>=0,()=>`size must be non-negative, but got ${n}.`),El(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`),ip.runKernel(Wu,{x:r,weights:s},{size:n})}}),gp({denseBincount_:function(e,t,n,r=!1){const s=fp(e,"x","denseBincount"),a=fp(t,"weights","denseBincount");return El("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),El(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),El(n>=0,()=>`size must be non-negative, but got ${n}.`),El(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`),ip.runKernel(ac,{x:s,weights:a},{size:n,binaryOutput:r})}}),gp({scatterND_:function(e,t,n){const r=fp(e,"indices","scatterND","int32"),s=fp(t,"updates","scatterND");return Ob(s,r,n),ip.runKernel(Dh,{indices:r,updates:s},{shape:n})}}),gp({gatherND_:function(e,t){const n=fp(t,"indices","gatherND","int32"),r=fp(e,"x","gatherND");return ip.runKernel($c,{params:r,indices:n})}});var NT,CT=n("YSVl");function ST(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(ET(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=ST(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function TT(e,t=$T){return _T(e,t)}function _T(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(ET(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=_T(e.map(e=>e[a]),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function $T(e){return null===e?null:ET(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function ET(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Bd))}function AT(e){return ST(e,RT)}function RT(e){return e instanceof Bd?{value:e.clone(),recurse:!1}:ET(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class FT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class DT extends FT{constructor(){super(DT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}DT.INITIAL_CAPACITY=32;class OT{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new HT(this,e)}filter(e){return new WT(this,e)}map(e){return new UT(this,e)}mapAsync(e){return new GT(this,e)}serialMapAsync(e){return new GT(this,e).serial()}flatmap(e){return new qT(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new VT(this,e,t)}columnMajorBatch(e,t=!0,n=$T){return this.rowMajorBatch(e,t).map(e=>TT(e,n))}concatenate(e,t){return new KT(new MT([this,e]),t)}take(e){return e<0||null==e?this:new BT(this,e)}skip(e){return e<0||null==e?this:new PT(this,e)}prefetch(e){return new XT(this,e)}shuffle(e,t){return new ZT(this,e,t)}serial(){return new zT(this)}}class MT extends OT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:AT(e),done:!1}}}class LT extends OT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class zT extends OT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class PT extends OT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;rm(e.value)}return this.upstream.next()}}class BT extends OT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class VT extends OT{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class WT extends OT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;rm(e.value)}}}class UT extends OT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.getTensorsInContainer(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class HT extends OT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class GT extends OT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.getTensorsInContainer(e.value),n=await this.transform(e.value),r=s.getTensorsInContainer(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class jT extends OT{constructor(){super(),this.outputQueue=new DT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class qT extends jT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=s.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return!0}}class KT extends OT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(NT||(NT={}));class XT extends OT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new FT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ZT extends XT{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=CT.alea(n||r.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class YT{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.assert(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),JT(async()=>(await n.iterator()).columnMajorBatch(e,t,QT),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,JT(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,JT(async()=>(await t.iterator()).filter(t=>nm(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return JT(async()=>(await t.iterator()).map(t=>nm(()=>e(t))),this.size)}mapAsync(e){const t=this;return JT(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return JT(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,JT(async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new LT(r)).take(e),new KT(n,undefined);var n,r},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,JT(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=CT.alea(t||r.now().toString());return JT(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,JT(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function JT(e,t=null){return new class extends YT{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function QT(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Bd||r.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Bd?oy(e):xp(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function e_(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}YT.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const t_=p.whereImpl;class n_ extends wl{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new vl(this,em())}nextDataId(){return n_.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,yu().get("IS_NODE")&&d.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const a=n.map(e=>r.encodeString(e));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return d.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return df(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return em().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.now();return e(),{kernelMs:r.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){e_([e],"where");const t=this.readSync(e.dataId);return t_(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function r_(e,t,n){return({inputs:s,attrs:a,backend:i})=>{const{x:o}=s;if(e_(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=r.sizeFromShape(o.shape),h=n||o.dtype,d=r.getArrayFromDType(h,c);for(let e=0;e<c;++e)d[e]=t(u[e],a);return l.makeTensorInfo(o.shape,h,d)}}function s_(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(e_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}n_.nextDataId=0,am("cpu",()=>new n_,1);const a_=r_(mc,e=>e>=0?e:Math.exp(e)-1),i_={kernelName:mc,backendName:"cpu",kernelFunc:a_};function o_(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const l_={kernelName:Rc,backendName:"cpu",kernelFunc:o_};function u_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s;e_([a],"leakyRelu");const o=r.sizeFromShape(a.shape),l=n.data.get(a.dataId).values,u=r.getTypedArrayFromDType("float32",o);for(let r=0;r<l.length;r++)u[r]=l[r]<0?i*l[r]:l[r];return n.makeTensorInfo(a.shape,"float32",u)}const c_={kernelName:zc,backendName:"cpu",kernelFunc:u_};function h_(e){return(t,n,s,a,i)=>{const o=d.assertAndGetBroadcastShape(t,n),l=o.length,u=r.computeStrides(o),c=r.sizeFromShape(o),h=r.getTypedArrayFromDType(i,c),p=t.length,f=n.length,m=r.computeStrides(t),g=r.computeStrides(n),y=d.getBroadcastDims(t,o),b=d.getBroadcastDims(n,o);if(y.length+b.length===0)for(let r=0;r<h.length;++r)h[r]=e(s[r%s.length],a[r%a.length]);else for(let d=0;d<h.length;++d){const t=r.indexToLoc(d,l,u),n=t.slice(-p);y.forEach(e=>n[e]=0);const i=r.locToIndex(n,p,m),o=t.slice(-f);b.forEach(e=>o[e]=0);const c=r.locToIndex(o,f,g);h[d]=e(s[i],a[c])}return[h,o]}}const d_=h_((e,t)=>e<0?t*e:e);function p_(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;e_([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=d_(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const f_={kernelName:xh,backendName:"cpu",kernelFunc:p_},m_=r_(Nh,e=>Math.max(0,e)),g_={kernelName:Nh,backendName:"cpu",kernelFunc:m_},y_=r_(Eh,e=>Math.min(Math.max(0,e),6)),b_={kernelName:Eh,backendName:"cpu",kernelFunc:y_};function x_(e,t,n,r,s){if("linear"===n)return o_({inputs:{x:t},backend:e});if("relu"===n)return m_({inputs:{x:t},backend:e});if("elu"===n)return a_({inputs:{x:t},backend:e});if("relu6"===n)return y_({inputs:{x:t},backend:e});if("prelu"===n)return p_({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return u_({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function v_(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const w_={kernelName:ju,backendName:"cpu",kernelFunc:v_};function k_(e,t,n="float32"){if("complex64"===n)return v_({inputs:{real:k_(e,t,"float32"),imag:k_(e,t,"float32")},backend:e});const s=r.makeZerosTypedArray(r.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function I_(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const N_={kernelName:kh,backendName:"cpu",kernelFunc:I_};function C_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return o_({inputs:{x:a},backend:n});const e=k_(n,a.shape,a.dtype),t=C_({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=v_({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=I_({inputs:{input:a},backend:n}),t=C_({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!r.hasEncodingLoss(a.dtype,i)){const e=o_({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===i){const e=n.data.get(a.dataId).values,t=r.toTypedArray([0],a.dtype),[s,i]=h_((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}const S_={kernelName:Uu,backendName:"cpu",kernelFunc:C_};function T_(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;e_([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a:a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=C_({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.imag,s=o.data.get(t.complexTensorInfos.real.dataId).values,l=o.data.get(r.dataId).values,u=C_({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(u.dataId),h=c.complexTensorInfos.imag,d=o.data.get(c.complexTensorInfos.real.dataId).values,p=o.data.get(h.dataId).values,[f,m,g]=n(a.shape,i.shape,s,l,d,p),y=o.makeTensorInfo(g,"float32",f),b=o.makeTensorInfo(g,"float32",m),x=v_({inputs:{real:y,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(u),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(b),x}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function __(e){return(t,n,s,a,i,o)=>{const l=d.assertAndGetBroadcastShape(t,n),u=r.sizeFromShape(l),c=l.length,h=r.computeStrides(l),p=r.getTypedArrayFromDType("float32",u),f=r.getTypedArrayFromDType("float32",u),m=d.getBroadcastDims(t,l),g=d.getBroadcastDims(n,l),y=d.mergeRealAndImagArrays(s,a),b=d.mergeRealAndImagArrays(i,o),x=t.length,v=r.computeStrides(t),w=n.length,k=r.computeStrides(n);if(m.length+g.length===0)for(let r=0;r<p.length;r++){const t=r%y.length,n=r%b.length,s=e(y[2*t],y[2*t+1],b[2*n],b[2*n+1]);p[r]=s.real,f[r]=s.imag}else for(let d=0;d<p.length;d++){const t=r.indexToLoc(d,c,h),n=t.slice(-x);m.forEach(e=>n[e]=0);const s=r.locToIndex(n,x,v),a=t.slice(-w);g.forEach(e=>a[e]=0);const i=r.locToIndex(a,w,k),o=e(y[2*s],y[2*s+1],b[2*i],b[2*i+1]);p[d]=o.real,f[d]=o.imag}return[p,f,l]}}const $_=h_((e,t)=>e+t),E_=__((e,t,n,r)=>({real:e+n,imag:t+r})),A_=T_(Cu,$_,E_),R_={kernelName:Cu,backendName:"cpu",kernelFunc:A_};function F_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=r.sizeFromShape(a.shape),l=r.inferFromImplicitShape(i,o),u=r.sizeFromShape(l);r.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=l,e.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const D_={kernelName:Ch,backendName:"cpu",kernelFunc:F_};function O_(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:i}=t,{transposeA:o,transposeB:l}=s;e_([a,i],"matMul");const u=a.shape.length,c=i.shape.length,h=o?a.shape[u-2]:a.shape[u-1],d=l?i.shape[c-1]:i.shape[c-2],p=o?a.shape[u-1]:a.shape[u-2],f=l?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),y=r.sizeFromShape(m),b=r.sizeFromShape(g);r.assert(u>=2&&c>=2&&(y===b||1===y||1===b),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const x=(y>b?a.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);r.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`);const v=l?[b,f,d]:[b,d,f],w=F_({inputs:{x:a},backend:n,attrs:{shape:o?[y,h,p]:[y,p,h]}}),k=F_({inputs:{x:i},backend:n,attrs:{shape:v}}),I=o?w.shape[1]:w.shape[2],N=o?w.shape[2]:w.shape[1],C=l?k.shape[1]:k.shape[2],S=Math.max(y,b),T=n.data.get(w.dataId).values,_=n.data.get(k.dataId).values,$=r.computeStrides(w.shape),E=r.computeStrides(k.shape),[A,R,F]=o?[$[0],1,$[1]]:[$[0],$[1],1],[D,O,M]=l?[1,E[1],E[0]]:[E[1],1,E[0]],L=N*C,z=df([S,N,C],w.dtype),P=z.values,B=n.blockSize;for(let r=0;r<S;r++)for(let e=0;e<N;e+=B)for(let t=0;t<C;t+=B)for(let n=0;n<I;n+=B){const s=Math.min(e+B,N),a=Math.min(t+B,C),i=Math.min(n+B,I);for(let o=e;o<s;o++)for(let e=t;e<a;e++){let t=0;for(let s=n;s<i;s++){const n=Math.min(r,y-1)*A,a=Math.min(r,b-1)*M;t+=T[n+o*R+s*F]*_[s*D+e*O+a]}P[r*L+(o*C+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}const M_={kernelName:Bu,backendName:"cpu",kernelFunc:O_},L_={kernelName:hd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=O_({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=A_({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=x_(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function z_(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const P_={kernelName:ku,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;e_(t,"abs");let s=new Float32Array(r.sizeFromShape(t.shape));return s=z_(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,"float32")}},B_=r_(Iu,e=>Math.acos(e)),V_={kernelName:Iu,backendName:"cpu",kernelFunc:B_},W_=r_(Nu,e=>Math.acosh(e)),U_={kernelName:Nu,backendName:"cpu",kernelFunc:W_},H_={kernelName:Su,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;e_(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),a=df(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function G_(e,t,n,s,a){const i=t.length,o=r.sizeFromShape(t),l=r.computeStrides(t),u=r.computeStrides(a),c=r.getTypedArrayFromDType(n,r.sizeFromShape(a));for(let h=0;h<o;++h){const t=r.indexToLoc(h,i,l),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];c[r.locToIndex(n,i,u)]=e[h]}return c}function j_(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;e_(s,"transpose");const i=new Array(s.shape.length);for(let l=0;l<i.length;l++)i[l]=s.shape[a[l]];const o=G_(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(o,i,s.dtype),shape:i,dtype:s.dtype}}const q_={kernelName:rd,backendName:"cpu",kernelFunc:j_},K_={kernelName:Tu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;e_(a,"all");const l=r.parseAxisParam(i,a.shape);let u=l;const c=d.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=j_({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.getInnerMostAxes(u.length,a.shape.length)),d.assertAxesAreInnerMostDims("all",u,h.shape.length);const[p,f]=d.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(p),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t&&r}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(p,h.dtype,g);if(o){const e=F_({inputs:{x:b},backend:n,attrs:{shape:d.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},X_={kernelName:_u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;e_(a,"any");const l=r.parseAxisParam(i,a.shape);let u=l;const c=d.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=j_({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.getInnerMostAxes(u.length,a.shape.length)),d.assertAxesAreInnerMostDims("any",u,h.shape.length);const[p,f]=d.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(p),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t||r}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(p,h.dtype,g);if(o){const e=F_({inputs:{x:b},backend:n,attrs:{shape:d.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Z_={kernelName:$u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;e_(a,"argMax");let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=j_({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],d.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[h,p]=d.computeOutAndReduceShapes(u.shape,o),f=r.sizeFromShape(h),m=r.makeZerosTypedArray(f,"int32"),g=r.sizeFromShape(p),y=n.data.get(u.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const s=y[e+r];s>t&&(t=s,n=r)}m[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},Y_={kernelName:Eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;e_(a,"argMin");let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=j_({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],d.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[h,p]=d.computeOutAndReduceShapes(u.shape,o),f=r.sizeFromShape(h),m=r.makeZerosTypedArray(f,"int32"),g=r.sizeFromShape(p),y=n.data.get(u.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const s=y[e+r];s<t&&(t=s,n=r)}m[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},J_=r_(Au,e=>Math.asin(e)),Q_={kernelName:Au,backendName:"cpu",kernelFunc:J_},e$=r_(Ru,e=>Math.asinh(e)),t$={kernelName:Ru,backendName:"cpu",kernelFunc:e$},n$=r_(Fu,e=>Math.atan(e)),r$={kernelName:Fu,backendName:"cpu",kernelFunc:n$},s$=h_((e,t)=>Math.atan2(e,t)),a$=T_(Ou,s$),i$={kernelName:Ou,backendName:"cpu",kernelFunc:a$},o$=r_(Du,e=>Math.atanh(e)),l$={kernelName:Du,backendName:"cpu",kernelFunc:o$};function u$(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=df(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*y,n=v*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const v=y*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=t+y*b;for(let t=0;t<s.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,v=0;for(let t=w;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,v++)}if(isNaN(y))break}g[I+t*x+m]="avg"===a?b/v:y}}}return m}function c$(e,t,n,r,s=!1,a=!1){const i=df(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=df(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=p;n<x;n+=c){const o=n-h,l=m.get(g,t,n,e);l>v&&(v=l,w=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(w,g,t,o,e)}}return i}function h$(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=df(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let C=0;C<s.batchSize;++C){const t=C*w,n=C*r[0];for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outDepth;++w){const C=w*i-m;let S=C;for(;S<0;)S+=u;const T=Math.min(s.inDepth,d+C),_=t+w*k;for(let t=0;t<s.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=_+t*I;for(let t=0;t<s.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+t*N;let k=b,I=0,C=0;for(let t=S;t<T;t+=u){const s=n+t*r[1];for(let t=d;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===a?I/C:k}}}}return x}const d$={kernelName:Mu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;e_(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))h=o_({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.computeStrides(a.shape),s=u$(e,0,a.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},p$={kernelName:zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s;e_(a,"avgPool3d");const h=d.computePool3DInfo(a.shape,i,o,1,l,u,c),p=h$(n.data.get(a.dataId).values,0,a.dtype,r.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},f$={kernelName:Pu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;e_([s,a],"avgPool3DGrad");const c=d.computePool3DInfo(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,y=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,v=c.dilationWidth,w=c.effectiveFilterDepth,k=c.effectiveFilterHeight,I=c.effectiveFilterWidth,N=w-1-c.padInfo.front,C=I-1-c.padInfo.left,S=k-1-c.padInfo.top,T=df(a.shape,"float32"),_=1/(m*g*y),$=n.bufferSync(s);for(let d=0;d<c.batchSize;++d)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-N,a=n-S,i=r-C;let o=0;for(let t=0;t<w;t+=b){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=x){const r=(a+t)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<I;t+=v){const s=(i+t)/f;s<0||s>=c.outWidth||Math.floor(s)!==s||(o+=$.get(d,n,r,s,e))}}}T.set(o*_,d,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},m$={kernelName:Lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;e_([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=d.computePool2DInfo(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,f=c.filterHeight,m=c.filterWidth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=x-1-c.padInfo.left,w=b-1-c.padInfo.top,k=df(i.shape,"float32"),I=1/(f*m),N=n.data.get(s.dataId).values,C=df(s.shape,"float32",N);for(let d=0;d<c.batchSize;++d)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-w,s=n-v;let a=0;for(let t=0;t<b;t+=g){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=y){const r=(s+t)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=C.get(d,n,r,e))}}k.set(a*I,d,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},g$={kernelName:Tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:i,offset:o,mean:l,variance:u}=t;r.assert(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||l.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==i||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),e_([a,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(a.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=p.length,v=d.length;let w=0,k=0,I=0,N=0;for(let r=0;r<h.length;++r)g[r]=m[w++]+(h[r]-d[k++])*f[I++]/Math.sqrt(p[N++]+c),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),N>=x&&(N=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function y$(e,t,n,s,a){const i=l.isSliceContinous(s,t,n),o=r.sizeFromShape(n),u=r.computeStrides(s);if(i){const n=l.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const c=df(s,a,"string"===a?d.fromUint8ToStringArray(e):e),h=df(n,a);for(let r=0;r<h.size;++r){const e=h.indexToLoc(r),n=e.map((e,n)=>e+t[n]);h.set(c.get(...n),...e)}return"string"===a?d.fromStringArrayToUint8(h.values):h.values}function b$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;e_(s,"slice");const[o,u]=l.parseSliceParams(s,a,i);l.assertParamsValid(s,o,u);const c=y$(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const x$={kernelName:Lh,backendName:"cpu",kernelFunc:b$},v$={kernelName:Vu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;e_([s],"batchToSpaceND");const o=a.reduce((e,t)=>e*t),l=d.getReshaped(s.shape,a,o),u=d.getPermuted(l.length,a.length),c=d.getReshapedPermuted(s.shape,a,o),h=d.getSliceBeginCoords(i,a.length),p=d.getSliceSize(c,i,a.length),f=F_({inputs:{x:s},backend:n,attrs:{shape:l}}),m=j_({inputs:{x:f},backend:n,attrs:{perm:u}}),g=F_({inputs:{x:m},backend:n,attrs:{shape:c}}),y=b$({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function w$(e,t,n,s,a){const i=r.sizeFromShape(s),o=r.makeZerosTypedArray(a,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=i>0?t[r]:1)}return o}function k$(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=df([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||i.set(r?1:t.size>0?i.get(o,a)+t.get(o,s):i.get(o,a)+1,o,a)}return i}const I$={kernelName:Wu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=w$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function N$(e){return(t,n,s)=>{const a=r.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}const C$=N$(e=>Math.ceil(e)),S$=s_(Hu,C$),T$={kernelName:Hu,backendName:"cpu",kernelFunc:S$},_$=r_(Gu,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),$$={kernelName:Gu,backendName:"cpu",kernelFunc:_$},E$={kernelName:qu,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(r.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.imag,o=n.data.get(a.complexTensorInfos.real.dataId).values,l=n.data.get(i.dataId).values;for(let r=0;r<o.length;r++)s[r]=Math.hypot(o[r],l[r]);return n.makeOutput(s,t.shape,"float32")}};function A$(e,t,n,s){const a=r.getArrayFromDType(n,r.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach(e=>{const n=r.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?d.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}function R$(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const F$={kernelName:Dc,backendName:"cpu",kernelFunc:R$};function D$(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.parseAxisParam(a,t[0].shape)[0];let o=d.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===l.length)return o_({inputs:{x:l[0]},backend:n});const u=l.map(e=>e.shape);if(d.assertParamsConsistent(u,i),"complex64"===l[0].dtype){const e=l.map(e=>I_({inputs:{input:e},backend:n})),t=l.map(e=>R$({inputs:{input:e},backend:n})),r=D$({inputs:e,backend:n,attrs:{axis:i}}),s=D$({inputs:t,backend:n,attrs:{axis:i}}),a=v_({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const c=l.map(e=>{const t=r.sizeFromShape(e.shape.slice(i));return F_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),h=c.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=d.computeOutShape(c.map(e=>e.shape),1);const p=A$(h,o,t[0].dtype,1===c[0].shape[0]),f=d.computeOutShape(l.map(e=>e.shape),i),m=n.makeTensorInfo(f,t[0].dtype,p);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const O$={kernelName:Ku,backendName:"cpu",kernelFunc:D$};function M$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:h}=s;e_([a,i],"conv2d");const p=d.convertConv2DDataFormat(u),f=d.computeConv2DInfo(a.shape,i.shape,o,c,l,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,b=f.dilationWidth,x=f.padInfo.left,v=f.padInfo.top,w="channelsLast"===f.dataFormat,k=new Md(f.outShape,a.dtype),I=r.computeStrides(a.shape),N=r.computeStrides(i.shape),C=I[0],S=w?I[1]:I[2],T=w?I[2]:1,_=w?1:I[1],$=k.strides[0],E=w?k.strides[1]:k.strides[2],A=w?k.strides[2]:1,R=w?1:k.strides[1],F=n.data.get(a.dataId).values,D=n.data.get(i.dataId).values,O=k.values;for(let r=0;r<f.batchSize;++r){const e=r*C,t=r*$;for(let n=0;n<f.outHeight;++n){const r=t+n*E,s=n*f.strideHeight-v;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*N[0],i=e+n*S;for(let e=0;e<f.outWidth;++e){const t=r+e*A,n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const s=i+r*T;let o=a+e*N[1];for(let e=0;e<f.inChannels;++e){const n=F[s+e*_];for(let e=0;e<f.outChannels;++e)O[t+e*R]+=n*D[o+e];o+=f.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,O)}const L$={kernelName:Xu,backendName:"cpu",kernelFunc:M$},z$={kernelName:Zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;e_([s,a],"conv2dBackpropFilter");const h=d.convertConv2DDataFormat(l),p=d.computeConv2DInfo(s.shape,c,i,1,o,u,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,x=new Md(p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,k=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,N=new Md(s.shape,s.dtype,k),C=new Md(a.shape,a.dtype,I);for(let d=0;d<g;++d){const e=Math.max(0,Math.ceil((w-d)/f)),t=Math.min(p.outHeight,(p.inHeight+w-d)/f);for(let n=0;n<y;++n){const r=Math.max(0,Math.ceil((v-n)/m)),s=Math.min(p.outWidth,(p.inWidth+v-n)/m);for(let a=0;a<p.inChannels;++a)for(let i=0;i<p.outChannels;++i){let o=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=d+u*f-w;for(let t=r;t<s;++t){const r=n+t*m-v;o+=b?N.get(l,e,r,a)*C.get(l,u,t,i):N.get(l,a,e,r)*C.get(l,i,u,t)}}x.set(o,d,n,a,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},P$={kernelName:Yu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=s;e_([a,i],"conv2dBackpropInput");const p=r.computeStrides(i.shape),f=r.computeStrides(a.shape);let m=d.convertConv2DDataFormat(c);const g=d.computeConv2DInfo(o,i.shape,l,1,u,h,!1,m),y=new Md(g.inShape,"float32"),b=y.values,x=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,[w,k,I]=p,{batchSize:N,filterHeight:C,filterWidth:S,inChannels:T,inHeight:_,inWidth:$,outChannels:E,outHeight:A,outWidth:R,strideHeight:F,strideWidth:D}=g;m=g.dataFormat;const O=C-1-g.padInfo.top,M=S-1-g.padInfo.left,L="channelsLast"===m,z=y.strides[0],P=L?y.strides[1]:y.strides[2],B=L?y.strides[2]:1,V=L?1:y.strides[1],W=f[0],U=L?f[1]:f[2],H=L?f[2]:1,G=L?1:f[1];for(let r=0;r<N;++r)for(let e=0;e<T;++e)for(let t=0;t<_;++t){const n=t-O,s=Math.max(0,Math.ceil(n/F)),a=Math.min(A,(C+n)/F);for(let i=0;i<$;++i){const o=i-M,l=Math.max(0,Math.ceil(o/D)),u=Math.min(R,(S+o)/D);let c=0;for(let t=s;t<a;++t){const s=t*F-n;for(let n=l;n<u;++n){const a=W*r+U*t+H*n,i=w*(C-1-s)+k*(S-1-(n*D-o))+I*e;for(let e=0;e<E;++e)c+=x[a+G*e]*v[i+e]}}b[z*r+P*t+B*i+V*e]=c}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},B$={kernelName:Ju,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=s;e_([a,i],"conv3d");const c=d.computeConv3DInfo(a.shape,i.shape,o,u,l),{filterDepth:h,filterHeight:p,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.front,v=b.left,w=b.top,k=new Md(c.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(i.dataId).values,C=k.values,S=r.computeStrides(a.shape),T=r.computeStrides(i.shape);for(let r=0;r<c.batchSize;++r){const e=r*S[0],t=r*k.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*k.strides[1],s=n*c.strideDepth-x;for(let t=0;t<h;++t){const n=s+t*m;if(n<0||n>=c.inDepth)continue;const a=t*T[0],i=e+n*S[1];for(let e=0;e<c.outHeight;++e){const t=r+e*k.strides[2],n=e*c.strideHeight-w;for(let e=0;e<p;++e){const r=n+e*g;if(r<0||r>=c.inHeight)continue;const s=a+e*T[1],o=i+r*S[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-v;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=c.inWidth)continue;const a=o+t*c.inChannels;let i=s+e*T[2];for(let e=0;e<c.inChannels;++e){const t=I[a+e];for(let e=0;e<c.outChannels;++e)C[n+e]+=t*N[i+e];i+=c.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},V$={kernelName:Qu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=s;e_([a,i],"conv3dBackpropFilterV2");const c=r.computeStrides(a.shape),h=r.computeStrides(i.shape),p=d.computeConv3DInfo(a.shape,u,o,1,l),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.filterDepth,b=p.filterHeight,x=p.filterWidth,v=new Md(p.filterShape,"float32"),w=v.values,[k,I,N,C]=v.strides,S=n.data.get(i.dataId).values,[T,_,$,E]=h,A=n.data.get(a.dataId).values,[R,F,D,O]=c,M=p.padInfo.front,L=p.padInfo.left,z=p.padInfo.top;for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((M-r)/f)),t=Math.min(p.outDepth,(p.inDepth+M-r)/f),n=r*k;for(let s=0;s<b;++s){const a=Math.max(0,Math.ceil((z-s)/m)),i=Math.min(p.outHeight,(p.inHeight+z-s)/m),o=s*I+n;for(let n=0;n<x;++n){const l=Math.max(0,Math.ceil((L-n)/g)),u=Math.min(p.outWidth,(p.inWidth+L-n)/g),c=n*N+o;for(let o=0;o<p.inChannels;++o){const h=o*C+c;for(let c=0;c<p.outChannels;++c){let d=0;for(let h=0;h<p.batchSize;++h){const p=h*R,y=h*T;for(let h=e;h<t;++h){const e=(r+h*f-M)*F+p,t=h*_+y;for(let r=a;r<i;++r){const a=(s+r*m-z)*D+e,i=r*$+t;for(let e=l;e<u;++e)d+=A[(n+e*g-L)*O+a+o]*S[e*E+i+c]}}}w[h+c]=d}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},W$={kernelName:ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=s;e_([a],"conv3dBackpropInputV2");const c=r.computeStrides(a.shape),h=r.computeStrides(i.shape),p=d.computeConv3DInfo(u,i.shape,l,1,o),f=new Md(p.inShape,"float32"),m=f.values,[g,y,b,x]=f.strides,v=n.data.get(a.dataId).values,[w,k,I,N]=c,C=n.data.get(i.dataId).values,[S,T,_,$]=h,{batchSize:E,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:L,outChannels:z,outDepth:P,outHeight:B,outWidth:V,strideDepth:W,strideHeight:U,strideWidth:H}=p,G=A-1-p.padInfo.front,j=R-1-p.padInfo.top,q=F-1-p.padInfo.left;for(let r=0;r<E;++r)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-G,s=Math.max(0,Math.ceil(n/W)),a=Math.min(P,(A+n)/W);for(let i=0;i<M;++i){const o=i-j,l=Math.max(0,Math.ceil(o/U)),u=Math.min(B,(R+o)/U);for(let c=0;c<L;++c){const h=c-q,d=Math.max(0,Math.ceil(h/H)),p=Math.min(V,(F+h)/H);let f=0;for(let t=s;t<a;++t){const s=t*W-n;for(let n=l;n<u;++n){const a=n*U-o;for(let i=d;i<p;++i){const o=w*r+k*t+I*n+N*i,l=S*(A-1-s)+T*(R-1-a)+_*(F-1-(i*H-h))+$*e;for(let e=0;e<z;++e)f+=v[o+e]*C[l+e]}}}m[g*r+y*t+b*i+x*c+e]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},U$=r_(tc,e=>Math.cos(e)),H$={kernelName:tc,backendName:"cpu",kernelFunc:U$},G$=r_(nc,e=>Math.cosh(e)),j$={kernelName:nc,backendName:"cpu",kernelFunc:G$},q$={kernelName:sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=s,[h,d,p,f]=a.shape,m=i.shape[0],[g,y]=l,b=df([m,g,y,f],"float32"),x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,w=n.data.get(a.dataId).values,k=r.computeStrides(a.shape),I=r.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],s=x[e+2],a=x[e+3],i=v[r];if(i>=h)continue;const o=g>1?(s-t)*(d-1)/(g-1):0,l=y>1?(a-n)*(p-1)/(y-1):0;for(let h=0;h<g;h++){const e=g>1?t*(d-1)+h*o:.5*(t+s)*(d-1);if(e<0||e>d-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++)b.values[e+t*I[2]+h*I[1]+r*I[0]]=c;else if("bilinear"===u){const t=Math.floor(e),s=Math.ceil(e),o=e-t;for(let e=0;e<y;e++){const u=y>1?n*(p-1)+e*l:.5*(n+a)*(p-1);if(u<0||u>p-1){for(let t=0;t<f;t++)b.values[t+e*I[2]+h*I[1]+r*I[0]]=c;continue}const d=Math.floor(u),m=Math.ceil(u),g=u-d;for(let n=0;n<f;n++){let a=n+d*k[2]+t*k[1]+i*k[0];const l=w[a];a=n+m*k[2]+t*k[1]+i*k[0];const u=w[a];a=n+d*k[2]+s*k[1]+i*k[0];const c=w[a];a=n+m*k[2]+s*k[1]+i*k[0];const p=w[a],f=l+(u-l)*g;a=n+e*I[2]+h*I[1]+r*I[0],b.values[a]=f+(c+(p-c)*g-f)*o}}}else for(let t=0;t<y;++t){const s=y>1?n*(p-1)+t*l:.5*(n+a)*(p-1);if(s<0||s>p-1){for(let e=0;e<f;e++)b.values[e+t*I[2]+h*I[1]+r*I[0]]=c;continue}const o=Math.round(s),u=Math.round(e);for(let e=0;e<f;e++)b.values[e+t*I[2]+h*I[1]+r*I[0]]=w[e+o*k[2]+u*k[1]+i*k[0]]}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},K$={kernelName:rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=s;e_(a,"cumsum");const u=d.getAxesPermutation([i],a.shape.length);let c=a;null!=u&&(c=j_({inputs:{x:a},backend:n,attrs:{perm:u}}));const h=d.getInnerMostAxes(1,a.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const p=Xd(c.dtype,"int32"),f=r.makeZerosTypedArray(r.sizeFromShape(c.shape),p),m=n.data.get(c.dataId).values,g=c.shape[c.shape.length-1],y=l?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=g)for(let e=0;e<g;e++){const t=y(r,e);if(0===e)f[t]=o?0:m[t];else{const n=y(r,e-1);f[t]=o?m[n]+f[n]:m[t]+f[n]}}const b=n.makeTensorInfo(c.shape,p,f);if(null!=u){const e=j_({inputs:{x:b},backend:n,attrs:{perm:d.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},X$={kernelName:ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=w$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=k$(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Z$={kernelName:ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.assert("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`),r.assert(i>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`);const l=a.shape[0],u=a.shape[1],c=a.shape[2],h=a.shape[3],d=u*i,p=c*i,f=h/(i*i),m=n.data.get(a.dataId).values,g=new Float32Array(l*d*p*f);let y=0;for(let r=0;r<l;++r)for(let e=0;e<d;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const s=Math.floor(e/i),a=(n*i+e%i)*f;for(let e=0;e<f;++e)g[y++]=m[e+a+h*(s+c*(t+u*r))]}}return n.makeTensorInfo([l,d,p,f],a.dtype,g)}};function Y$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;e_([a,i],"depthwiseConv2DNative");const h=r.computeStrides(a.shape),p=r.computeStrides(i.shape);let f=u;null==f&&(f=[1,1]),r.assert(d.eitherStridesOrDilationsAreOne(o,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${f}'`);const m=d.computeConv2DInfo(a.shape,i.shape,o,f,l,c,!0),{filterHeight:g,filterWidth:y,dilationHeight:b,dilationWidth:x,padInfo:v}=m,w=v.left,k=v.top,I=m.outChannels/m.inChannels,N=new Md(m.outShape,a.dtype),C=n.data.get(a.dataId).values,S=n.data.get(i.dataId).values,T=N.values;for(let r=0;r<m.batchSize;++r){const e=r*h[0],t=r*N.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*N.strides[1],s=n*m.strideHeight-w;for(let t=0;t<g;++t){const n=s+t*b;if(n<0||n>=m.inHeight)continue;const a=t*p[0],i=e+n*h[1];for(let e=0;e<m.outWidth;++e){const t=r+e*N.strides[2],n=e*m.strideWidth-k;for(let e=0;e<y;++e){const r=n+e*x;if(r<0||r>=m.inWidth)continue;const s=i+r*m.inChannels;let o=t,l=a+e*p[1];for(let e=0;e<m.inChannels;++e){const t=C[s+e];for(let e=0;e<I;++e)T[o+e]+=t*S[l+e];o+=I,l+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const J$={kernelName:oc,backendName:"cpu",kernelFunc:Y$},Q$={kernelName:lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;e_([s,a],"depthwiseConv2dNativeBackpropFilter");const h=d.computeConv2DInfo(s.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new Md(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,k=new Md(s.shape,s.dtype,w),I=n.data.get(a.dataId).values,N=new Md(a.shape,a.dtype,I);for(let d=0;d<m;++d){const e=Math.max(0,Math.ceil((x-d)/p)),t=Math.min(h.outHeight,(h.inHeight+x-d)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((b-n)/f)),s=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/v),o=a%v;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=d+o*p-x;for(let t=r;t<s;++t)l+=k.get(u,e,n+t*f-b,i)*N.get(u,o,t,a)}y.set(l,d,n,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},eE={kernelName:uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:h}=s;e_([a,i],"depthwiseConv2DNativeBackpropInput");const p=r.computeStrides(a.shape),f=r.computeStrides(i.shape),m=d.computeConv2DInfo(h,i.shape,o,l,u,c,!0),g=new Md(m.inShape,"float32"),y=g.values,[b,x,v]=g.strides,w=n.data.get(a.dataId).values,[k,I,N]=p,C=n.data.get(i.dataId).values,[S,T,_]=f,{batchSize:$,filterHeight:E,filterWidth:A,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:L,strideHeight:z,strideWidth:P}=m,B=E-1-m.padInfo.top,V=A-1-m.padInfo.left,W=O/R;for(let r=0;r<$;++r)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-B,s=Math.max(0,Math.ceil(n/z)),a=Math.min(M,(E+n)/z);for(let i=0;i<D;++i){const o=i-V,l=Math.max(0,Math.ceil(o/P)),u=Math.min(L,(A+o)/P);let c=0;for(let t=s;t<a;++t){const s=t*z-n;for(let n=l;n<u;++n){const a=k*r+I*t+N*n,i=S*(E-1-s)+T*(A-1-(n*P-o))+_*e;for(let t=0;t<W;++t)c+=w[a+(e*W+t)]*C[i+t]}}y[b*r+x*t+v*i+e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},tE={kernelName:cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=r.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,o=df([a,a],s.dtype),l=o.values;for(let r=0;r<i.length;r++)l[r*a+r]=i[r];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},nE={kernelName:hc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=u.data.get(s.dataId).values,h=s.shape.length,p=u.data.get(a.dataId).values,f=a.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:x,outWidth:v,padInfo:w,strideHeight:k,strideWidth:I,filterHeight:N,filterWidth:C,dilationHeight:S,dilationWidth:T,outShape:_}=d.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l),$=r.sizeFromShape(_),E=_.length,A=r.getArrayFromDType(s.dtype,$);for(let d=0;d<m;++d)for(let e=0;e<x;++e){const t=e*k-w.top;for(let n=0;n<v;++n){const i=n*I-w.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*S;if(n>=0&&n<g)for(let t=0;t<C;++t){const u=i+t*T;if(u>=0&&u<y){const i=r.locToIndex([d,n,u,o],h,r.computeStrides(s.shape)),m=r.locToIndex([e,t,o],f,r.computeStrides(a.shape)),g=c[i]+p[m];g>l&&(l=g)}}}A[r.locToIndex([d,e,n,o],E,r.computeStrides(_))]=l}}}return{dataId:u.write(r.toTypedArray(A,s.dtype),_,s.dtype),shape:_,dtype:s.dtype}}},rE={kernelName:pc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),p=r.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:S,outShape:T}=d.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.assert(i.rank===T.length,()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const _=r.toNestedArray(T,c.data.get(i.dataId).values),$=r.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const s=n*k-v.left;for(let a=0;a<y;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<N;++t){const u=s+t*S;if(u>=0&&u<g){const s=h[r][n][u][a]+p[e][t][a];s>i&&(i=s,o=e,l=t)}}}$[o][l][a]+=_[r][e][n][a]}}}return{dataId:c.write(r.toTypedArray($,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},sE={kernelName:dc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),p=r.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:S,outShape:T}=d.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.assert(i.rank===T.length,()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const _=r.toNestedArray(T,c.data.get(i.dataId).values),$=r.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const s=n*k-v.left;for(let a=0;a<y;++a){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,l=s<0?0:s;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<N;++t){const u=s+t*S;if(u>=0&&u<g){const s=h[r][n][u][a]+p[e][t][a];s>i&&(i=s,o=n,l=u)}}}$[r][o][l][a]+=_[r][e][n][a]}}}return{dataId:c.write(r.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},aE={kernelName:gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;e_([s,a],"eluGrad");const i=new Float32Array(r.sizeFromShape(a.shape)),o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values;for(let r=0;r<o.length;++r){const e=o[r];i[r]=e>=1?l[r]:l[r]*(e+1)}return n.makeTensorInfo(a.shape,"float32",i)}},iE=h_((e,t)=>e===t?1:0),oE=T_(bc,iE,null,"bool"),lE={kernelName:bc,backendName:"cpu",kernelFunc:oE},uE=d.ERF_P,cE=d.ERF_A1,hE=d.ERF_A2,dE=d.ERF_A3,pE=d.ERF_A4,fE=d.ERF_A5,mE=r_(yc,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+uE*n);return t*(1-((((fE*r+pE)*r+dE)*r+hE)*r+cE)*r*Math.exp(-n*n))}),gE={kernelName:yc,backendName:"cpu",kernelFunc:mE},yE=N$(e=>Math.exp(e)),bE=s_(xc,yE),xE={kernelName:xc,backendName:"cpu",kernelFunc:bE};function vE(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:i}=s,o=a.shape.length,l=a.shape.slice();let u=i;return i<0&&(r.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),l.splice(u,0,1),F_({inputs:{x:a},backend:n,attrs:{shape:l}})}const wE={kernelName:vc,backendName:"cpu",kernelFunc:vE},kE=N$(e=>Math.expm1(e)),IE=s_(wc,kE),NE={kernelName:wc,backendName:"cpu",kernelFunc:IE},CE=h_((e,t)=>e*t),SE=__((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),TE=T_(lh,CE,SE),_E={kernelName:lh,backendName:"cpu",kernelFunc:TE},$E=h_((e,t)=>e/t),EE=T_(fc,$E),AE={kernelName:fc,backendName:"cpu",kernelFunc:EE},RE=h_((e,t)=>e-t),FE=__((e,t,n,r)=>({real:e-n,imag:t-r})),DE=T_(Zh,RE,FE),OE={kernelName:Zh,backendName:"cpu",kernelFunc:DE};function ME(e,t,n){const s=e.shape,a=s[0],i=s[1],o=n.data.get(e.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[a,i],h=r.sizeFromShape(c),p=r.getTypedArrayFromDType("float32",h),f=r.getTypedArrayFromDType("float32",h);for(let r=0;r<a;r++){const e=b$({inputs:{x:l},backend:n,attrs:{begin:[r,0],size:[1,i]}}),s=b$({inputs:{x:u},backend:n,attrs:{begin:[r,0],size:[1,i]}}),a=v_({inputs:{real:e,imag:s},backend:n}),{real:o,imag:c}=LE(a,t,n),h=d.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=d.getComplexWithIndex(h,t);p[r*i+t]=e.real,f[r*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const m=n.makeTensorInfo(c,"float32",p),g=n.makeTensorInfo(c,"float32",f),y=v_({inputs:{real:m,imag:g},backend:n});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}function LE(e,t,n){const s=r.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((l=s)&l-1)){const a=zE(i,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",a.real),t=n.makeTensorInfo(l,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.createScalarValue(s,"float32")),o=o_({inputs:{x:i},backend:n}),u=AE.kernelFunc({inputs:{a:e,b:i},backend:n}),c=AE.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=d.exponent(s*r,t,n),l=d.getComplexWithIndex(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),d.assignToTypedArray(r,a,i,s)}return r}(d.mergeRealAndImagArrays(i,o),s,t);return d.splitRealAndImagArrays(e)}var l}function zE(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=d.mergeRealAndImagArrays(e,t),i=n/2,o=d.complexWithEvenIndex(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),p=s.makeTensorInfo(c,"float32",u),f=v_({inputs:{real:h,imag:p},backend:s}),m=d.complexWithOddIndex(a),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),w=v_({inputs:{real:x,imag:v},backend:s}),k=zE(l,u,i,r,s),I=k.real,N=k.imag,C=[I.length],S=s.makeTensorInfo(C,"float32",I),T=s.makeTensorInfo(C,"float32",N),_=v_({inputs:{real:S,imag:T},backend:s}),$=zE(g,y,i,r,s),E=$.real,A=$.imag,R=[E.length],F=s.makeTensorInfo(R,"float32",E),D=s.makeTensorInfo(R,"float32",A),O=v_({inputs:{real:F,imag:D},backend:s}),M=d.exponents(n,r),L=[M.real.length],z=s.makeTensorInfo(L,"float32",M.real),P=s.makeTensorInfo(L,"float32",M.imag),B=v_({inputs:{real:z,imag:P},backend:s}),V=TE({inputs:{a:B,b:O},backend:s}),W=A_({inputs:{a:_,b:V},backend:s}),U=DE({inputs:{a:_,b:V},backend:s}),H=I_({inputs:{input:W},backend:s}),G=I_({inputs:{input:U},backend:s}),j=R$({inputs:{input:W},backend:s}),q=R$({inputs:{input:U},backend:s}),K=D$({inputs:[H,G],backend:s,attrs:{axis:0}}),X=D$({inputs:[j,q],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Y=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Z,imag:Y}}const PE={kernelName:kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=F_({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=ME(o,!1,n),u=F_({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function BE(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:i}=n,o=i||r.inferDtype(a),l=r.getArrayFromDType(o,r.sizeFromShape(s));return function(e,t,n){e.fill(t)}(l,a),t.makeTensorInfo(s,o,l)}const VE={kernelName:Ic,backendName:"cpu",kernelFunc:BE},WE={kernelName:Nc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,a=r.getTypedArrayFromDType(n.dtype,r.sizeFromShape(n.shape)),[i,o,l,u]=n.shape,c=s.data.get(n.dataId).values;for(let r=0;r<i;r++){const e=r*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=Math.round(l-[i,t,r,o][2]),d=e+n+s+o;let p=c[d];h>=0&&h<l&&(p=c[e+n+h*u+o]),a[d]=p}}}}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},UE=N$(e=>Math.floor(e)),HE=s_(Cc,UE),GE={kernelName:Cc,backendName:"cpu",kernelFunc:HE},jE=h_((e,t)=>Math.floor(e/t)),qE=T_(Sc,jE,null,"int32"),KE={kernelName:Sc,backendName:"cpu",kernelFunc:qE},XE={kernelName:dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=M$({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=A_({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=x_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},ZE={kernelName:pd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Y$({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=A_({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=x_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},YE={kernelName:$c,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=r.sizeFromShape(s.shape),o=a.shape,l=o[o.length-1],[u,c,h,p]=d.prepareAndValidate(s,a);if(0===c)return n.makeTensorInfo(u,s.dtype,[]);const f=df([c,h],s.dtype),m=n.data.get(a.dataId).values,g=n.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=[];let t=0;for(let n=0;n<l;n++){const s=m[r*l+n];t+=s*p[n],e.push(s)}if(t<0||t>=i/h)throw new Error(`Invalid indices: ${e} does not index into ${s.shape}`);for(let n=0;n<h;n++)f.values[r*h+n]=g[t*h+n]}return n.makeTensorInfo(u,f.dtype,f.values)}};function JE(e,t,n){const r=df(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=t.locToIndex([n[0],n[2]]);n[2]=t.values[a];const i=e.locToIndex(n);r.values[s]=e.values[i]}return r}const QE={kernelName:_c,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s;e_([a,i],"gatherV2");let u=l;null==l&&(u=0);const c=r.sizeFromShape(i.shape),h=r.parseAxisParam(o,a.shape)[0],p=d.segment_util.collectGatherOpShapeInfo(a,i,h,u),f=F_({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=F_({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),g=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=JE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},eA=h_((e,t)=>e>t?1:0),tA=T_(Ec,eA,null,"bool"),nA={kernelName:Ec,backendName:"cpu",kernelFunc:tA},rA=h_((e,t)=>e>=t?1:0),sA=T_(Ac,rA,null,"bool"),aA={kernelName:Ac,backendName:"cpu",kernelFunc:sA},iA={kernelName:Fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=F_({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=ME(o,!0,n),u=F_({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},oA=r_(Oc,e=>Number.isFinite(e)?1:0,"bool"),lA={kernelName:Oc,backendName:"cpu",kernelFunc:oA},uA=r_(Mc,e=>Math.abs(e)===1/0?1:0,"bool"),cA={kernelName:Mc,backendName:"cpu",kernelFunc:uA},hA=r_(Lc,e=>Number.isNaN(e)?1:0,"bool"),dA={kernelName:Lc,backendName:"cpu",kernelFunc:hA},pA=h_((e,t)=>e<t?1:0),fA=T_(Pc,pA,null,"bool"),mA={kernelName:Pc,backendName:"cpu",kernelFunc:fA},gA=h_((e,t)=>e<=t?1:0),yA=T_(Bc,gA,null,"bool"),bA={kernelName:Bc,backendName:"cpu",kernelFunc:yA};function xA(e,t,n){const s=(t-e)/(n-1),a=r.makeZerosTypedArray(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}const vA={kernelName:Vc,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=xA(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},wA=N$(e=>Math.log(e)),kA=s_(Wc,wA),IA={kernelName:Wc,backendName:"cpu",kernelFunc:kA},NA=r_(Uc,e=>Math.log1p(e)),CA={kernelName:Uc,backendName:"cpu",kernelFunc:NA},SA=h_((e,t)=>e&&t),TA=T_(Hc,SA,null,"bool"),_A={kernelName:Hc,backendName:"cpu",kernelFunc:TA},$A=r_(Gc,e=>e?0:1,"bool"),EA={kernelName:Gc,backendName:"cpu",kernelFunc:$A},AA=h_((e,t)=>e||t),RA=T_(jc,AA,null,"bool"),FA={kernelName:jc,backendName:"cpu",kernelFunc:RA},DA={kernelName:qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=s;e_(a,"LRN");const c=a.shape[3],h=c-1,d=n.data.get(a.dataId).values,p=r.sizeFromShape(a.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,h);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let r=0;r<p;r++){const e=m(r),t=d[r]*Math.pow(o+l*e,-u);f[r]=t}return n.makeTensorInfo(a.shape,a.dtype,f)}},OA={kernelName:Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:i,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:h}=s;e_(o,"LRNGrad");const d=r.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(d),b=d;for(let r=0;r<b;r++){const e=r%p,t=r-e+Math.max(0,e-l),n=r-e+Math.min(p,e+l+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(m[r],2);s=c*s+u;for(let a=t;a<n;a++){let e=-2*c*h*m[a]*g[r]/s;r===a&&(e+=Math.pow(s,-h)),e*=f[r],y[a]+=e}}return n.makeTensorInfo(o.shape,a.dtype,y)}};function MA(e,t,n,s){const a=r.getTypedArrayFromDType(s,r.sizeFromShape(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];t>s&&(s=t)}a[r]=s}return a}function LA(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=n;let u=a.shape;const c=u.length,h=r.parseAxisParam(i,u);let p=h;const f=d.getAxesPermutation(p,c);let m=l.data.get(a.dataId).values;if(null!=f){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[f[t]];m=G_(m,u,a.dtype,f,e),p=d.getInnerMostAxes(p.length,c),u=e}e_(a,"max"),d.assertAxesAreInnerMostDims("max",p,c);const[g,y]=d.computeOutAndReduceShapes(u,p),b=MA(m,r.sizeFromShape(y),g,a.dtype),x=l.write(b,g,a.dtype);let v=g;return o&&(v=d.expandShapeToKeepDim(g,h)),{dataId:x,shape:v,dtype:a.dtype}}const zA={kernelName:Xc,backendName:"cpu",kernelFunc:LA},PA=h_((e,t)=>Math.max(e,t)),BA=T_(Zc,PA),VA={kernelName:Zc,backendName:"cpu",kernelFunc:BA},WA={kernelName:Yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;e_(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))h=o_({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.computeStrides(a.shape),s=u$(e,0,a.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},UA={kernelName:Qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s;e_(a,"maxPool3d");const h=d.computePool3DInfo(a.shape,i,o,1,l,u,c),p=h$(n.data.get(a.dataId).values,0,a.dtype,r.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},HA={kernelName:eh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;e_([s,a],"maxPool3DGrad");const c=d.computePool3DInfo(a.shape,i,o,1,l,u),h=function(e,t){const n=df(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=N&&(N=o,C=n*c*h+s*c+i)}}}n.set(C,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=x-1-c.padInfo.front,I=w-1-c.padInfo.left,N=v-1-c.padInfo.top,C=df(a.shape,"float32"),S=n.bufferSync(s);for(let d=0;d<c.batchSize;++d)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-k,a=n-N,i=r-I;let o=0;for(let t=0;t<x;t+=g){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=y){const s=(a+r)/f;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=b){const l=(i+a)/m;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=x*v*w-1-h.get(d,n,s,l,e)===t*v*w+r*w+a?1:0;0!==u&&(o+=S.get(d,n,s,l,e)*u)}}}C.set(o,d,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},GA={kernelName:Jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;e_([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=d.computePool2DInfo(o.shape,l,u,1,c,h),f=n.data.get(o.dataId).values,m=df(p.outShape,o.dtype,c$(f,o.shape,o.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,I=v-1-p.padInfo.top,N=df(o.shape,"float32"),C=n.data.get(s.dataId).values,S=df(s.shape,"float32",C);for(let d=0;d<p.batchSize;++d)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-I,s=n-k;let a=0;for(let t=0;t<v;t+=b){const n=(r+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=x){const i=(s+r)/y;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=v*w-1-m.get(d,n,i,e)===t*w+r?1:0;0!==o&&(a+=S.get(d,n,i,e)*o)}}N.set(a,d,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},jA={kernelName:th,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;e_(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=d.computePool2DInfo(s.shape,a,i,[1,1],o),[p,f]=function(e,t,n,s,a){const i=u$(e,0,n,r.computeStrides(t),a,"max"),o=c$(e,t,n,a,!0,s);return[i.values,o.values]}(c,s.shape,s.dtype,l,h),m=u.write(p,h.outShape,s.dtype),g=u.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};function qA(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;let l;e_(a,"sum"),l="bool"===a.dtype?C_({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o_({inputs:{x:a},backend:n});const u=l.shape.length,c=r.parseAxisParam(i,l.shape),h=d.getAxesPermutation(c,u);let p=c,f=l;null!=h&&(f=j_({inputs:{x:l},backend:n,attrs:{perm:h}}),p=d.getInnerMostAxes(p.length,u)),d.assertAxesAreInnerMostDims("sum",p,f.shape.length);const[m,g]=d.computeOutAndReduceShapes(f.shape,p);let y=k_(n,m,d.upcastType(f.dtype,"int32"));const b=r.sizeFromShape(g),x=n.data.get(y.dataId).values,v=n.data.get(f.dataId).values;for(let r=0;r<x.length;++r){const e=r*b;let t=0;for(let n=0;n<b;++n)t+=v[e+n];x[r]=t}if(o){const e=y;y=F_({inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(y.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=h&&n.disposeIntermediateTensorInfo(f),y}const KA={kernelName:Hh,backendName:"cpu",kernelFunc:qA},XA={kernelName:nh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=r.parseAxisParam(i,a.shape),u=d.computeOutAndReduceShapes(a.shape,l),c=r.sizeFromShape(u[1]),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(p);const f=C_({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(f);const m=EE({inputs:{a:f,b:p},backend:n});h.push(m);const g=qA({inputs:{x:m},backend:n,attrs:{axis:i,keepDims:o}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},ZA={kernelName:rh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;e_(a,"min");const l=r.parseAxisParam(i,a.shape);let u=l;const c=d.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=j_({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.getInnerMostAxes(u.length,a.shape.length)),d.assertAxesAreInnerMostDims("min",u,h.shape.length);const[p,f]=d.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(p),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];r<t&&(t=r)}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(p,h.dtype,g);if(o){const e=F_({inputs:{x:b},backend:n,attrs:{shape:d.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},YA=h_((e,t)=>Math.min(e,t)),JA=T_(sh,YA),QA={kernelName:sh,backendName:"cpu",kernelFunc:JA},eR={kernelName:ah,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,mode:o}=s;e_(a,"mirrorPad");const l=i.map((e,t)=>e[0]+a.shape[t]+e[1]),u=i.map(e=>e[0]),c=i.map((e,t)=>e[0]+a.shape[t]),h="reflect"===o?0:1,d=n.data.get(a.dataId).values,p=a.shape.length,f=r.computeStrides(a.shape),m=r.sizeFromShape(l),g=l.length,y=r.computeStrides(l),b=r.getTypedArrayFromDType(a.dtype,m);for(let x=0;x<m;x++){let e=r.indexToLoc(x,g,y);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-h:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+h);e=e.map((e,t)=>e-u[t]);const t=r.locToIndex(e,p,f);b[x]=d[t]}return{dataId:n.write(b,l,a.dtype),shape:l,dtype:a.dtype}}},tR=h_((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),nR=T_(ih,tR),rR={kernelName:ih,backendName:"cpu",kernelFunc:nR};function sR(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=a.shape.length;let l=i;if(-1===l&&(l=o-1),l!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${l}`);const u=r.parseAxisParam([l],a.shape),c=LA({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),h=d.expandShapeToKeepDim(c.shape,u),p=F_({inputs:{x:c},backend:n,attrs:{shape:h}}),f=DE({inputs:{a:a,b:p},backend:n}),m=bE({inputs:{x:f},backend:n}),g=qA({inputs:{x:m},backend:n,attrs:{axis:u,keepDims:!1}}),y=F_({inputs:{x:g},backend:n,attrs:{shape:h}}),b=EE({inputs:{a:m,b:y},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}const aR={kernelName:qh,backendName:"cpu",kernelFunc:sR},iR={kernelName:oh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:i,seed:o,normalized:l}=s;e_(a,"multinomial");const u=l?a:sR({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],h=u.shape[1],d=n.data.get(u.dataId).values,p=[c,i],f=r.makeZerosTypedArray(r.sizeFromShape(p),"int32");for(let r=0;r<c;++r){const e=r*h,t=new Float32Array(h-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=Vg.alea(o.toString()),s=r*i;for(let r=0;r<i;++r){const e=n();f[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[s+r]=n;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function oR(e,t,n){const s=r.createScalarValue(-1,n);return CE([],t,s,e,n)}const lR={kernelName:uh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;e_(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=oR(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},uR=p.nonMaxSuppressionV3Impl,cR={kernelName:hh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;e_(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=uR(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},hR=p.nonMaxSuppressionV4Impl,dR={kernelName:dh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;e_(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=hR(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},pR=p.nonMaxSuppressionV5Impl,fR={kernelName:ph,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;e_(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=pR(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},mR=h_((e,t)=>e!==t?1:0),gR=T_(ch,mR,null,"bool"),yR={kernelName:ch,backendName:"cpu",kernelFunc:gR},bR={kernelName:mh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s;e_(a,"oneHot");const u=r.sizeFromShape(a.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(a.dataId).values;for(let r=0;r<u;++r)h[r]>=0&&h[r]<i&&(c[r*i+h[r]]=o);return n.makeTensorInfo([...a.shape,i],"int32",c)}};function xR(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=I_({inputs:{input:r},backend:n}),t=xR({inputs:{x:e},backend:n}),s=R$({inputs:{input:r},backend:n}),a=xR({inputs:{x:s},backend:n}),i=v_({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return BE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const vR={kernelName:od,backendName:"cpu",kernelFunc:xR},wR={kernelName:fh,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=I_({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=R$({inputs:{input:s},backend:r}),i=xR({inputs:{x:a},backend:r}),o=v_({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return BE({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function kR(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return vE({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=D$({inputs:t.map(e=>{const t=vE({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t}),backend:n,attrs:{axis:a}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const IR={kernelName:gh,backendName:"cpu",kernelFunc:kR},NR={kernelName:yh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;e_(a,"pad");const l=i.map((e,t)=>e[0]+a.shape[t]+e[1]),u=i.map(e=>e[0]),c=n.data.get(a.dataId).values,h=r.sizeFromShape(a.shape),d=a.shape.length,p=r.computeStrides(a.shape),f=r.sizeFromShape(l),m=l.length,g=r.computeStrides(l),y=r.getTypedArrayFromDType(a.dtype,f);0!==o&&y.fill(o);for(let b=0;b<h;b++){const e=r.indexToLoc(b,d,p).map((e,t)=>e+u[t]);y[r.locToIndex(e,m,g)]=c[b]}return{dataId:n.write(y,l,a.dtype),shape:l,dtype:a.dtype}}},CR=h_((e,t)=>Math.pow(e,t)),SR=T_(bh,CR),TR={kernelName:bh,backendName:"cpu",kernelFunc:SR};function _R(e,t,n,s){const[a,i]=d.computeOutAndReduceShapes(e,s),o=Xd(t,"int32"),l=r.makeZerosTypedArray(r.sizeFromShape(a),o),u=r.sizeFromShape(i);for(let r=0;r<l.length;++r){const e=r*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];l[r]=t}return{outVals:l,outShape:a,outDtype:o}}const $R={kernelName:vh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;e_(a,"prod");const l=a.shape.length,u=r.parseAxisParam(i,a.shape),c=d.getAxesPermutation(u,l);let h=u,p=a;const f=[];null!=c&&(p=j_({inputs:{x:a},backend:n,attrs:{perm:c}}),f.push(p),h=d.getInnerMostAxes(h.length,l));const m=n.data.get(p.dataId).values,{outVals:g,outShape:y,outDtype:b}=_R(p.shape,p.dtype,m,h);let x=y;return o&&(x=d.expandShapeToKeepDim(y,u)),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(x,b,g)}};function ER(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),i=r.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}const AR={kernelName:wh,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=ER(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},RR=r_(Ih,e=>1/e),FR={kernelName:Ih,backendName:"cpu",kernelFunc:RR},DR={kernelName:_h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s;e_(a,"resizeBilinear");const u=r.computeStrides(a.shape),[c,h]=l,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(r.sizeFromShape([d,c,h,m])),b=[i&&c>1?p-1:p,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let r=0;r<d;r++)for(let e=0;e<c;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),i=r*u[0]+n*u[1],l=r*u[0]+a*u[1];for(let e=0;e<h;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(f-1,Math.ceil(t)),c=i+n*u[2],h=l+n*u[2],d=i+a*u[2],p=l+a*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r;y[v++]=a+(n+(g[p+e]-n)*r-a)*s}}}return n.makeTensorInfo([d,c,h,m],"float32",y)}},OR={kernelName:$h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;e_([i,a],"resizeBilinearGrad");const l=r.computeStrides(a.shape),[u,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=[o&&p>1?c-1:c,o&&f>1?h-1:h],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(i.dataId).values;let w=0;for(let r=0;r<u;r++){const e=r*l[0];for(let t=0;t<p;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),a=e+r*l[1],i=e+s*l[1],o=n-r,u=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),s=t-n,c=1-s,p=a+n*l[2],f=a+r*l[2],g=i+n*l[2],y=i+r*l[2],b=u*c,k=u*s,I=o*c,N=o*s;for(let e=0;e<d;e++){const t=v[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*N}}}}return n.makeTensorInfo([u,h,c,d],"float32",m)}},MR={kernelName:Sh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s;e_(a,"resizeNearestNeighbor");const u=r.computeStrides(a.shape),[c,h]=l,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(d*c*h*m),b=[i&&c>1?p-1:p,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let r=0;r<d;r++){const e=r*u[0];for(let t=0;t<c;t++){const n=o?v*(t+.5):v*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<h;e++){const t=o?w*(e+.5):w*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<m;e++)y[k++]=g[r+e]}}}return n.makeTensorInfo([d,c,h,m],a.dtype,y)}},LR={kernelName:Th,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;e_([i,a],"resizeNearestNeighborGrad");const l=r.computeStrides(a.shape),u=r.computeStrides(i.shape),[c,h,d,p]=a.shape,[,f,m]=i.shape,g=new Float32Array(c*h*d*p),y=n.data.get(i.dataId).values,b=[o&&f>1?h-1:h,o&&m>1?d-1:d],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,I=1/w,N=2*Math.ceil(k)+2,C=2*Math.ceil(I)+2;for(let r=0;r<c;r++){const e=r*l[0];for(let t=0;t<h;t++){const n=e+t*l[1],r=Math.floor(t*k),s=Math.floor(r-N/2);for(let a=0;a<d;a++){const r=n+a*l[2],i=Math.floor(a*I),c=Math.floor(i-C/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<N;r++){const l=r+s;if(l<0||l>=f)continue;const p=e+l*u[1],g=l*v;if(t===Math.min(h-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+c;if(t<0||t>=m)continue;const r=p+t*u[2],s=t*w;a===Math.min(d-1,o?Math.round(s):Math.floor(s))&&(i+=y[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}},zR={kernelName:Ah,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s;e_(a,"reverse");const o=a.shape.length,l=r.parseAxisParam(i,a.shape);if(0===o)return o_({inputs:{x:a},backend:n});const u=new Md(a.shape,a.dtype),c=n.bufferSync(a);for(let r=0;r<u.size;r++){const e=u.indexToLoc(r),t=e.slice();l.forEach(e=>t[e]=a.shape[e]-1-t[e]),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},PR={kernelName:cd,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,l=n,u=r.getTypedArrayFromDType(s.dtype,r.sizeFromShape(s.shape)),[c,h,p,f]=s.shape,[m,g]=d.getImageCenter(o,h,p),y=Math.sin(a),b=Math.cos(a),x=l.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=r*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let r=0;r<p;r++){const s=r*f;for(let a=0;a<f;a++){const o=[c,t,r,a],l=o[2],d=o[1];let v=(l-m)*b-(d-g)*y,w=(l-m)*y+(d-g)*b;v=Math.round(v+m),w=Math.round(w+g);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),v>=0&&v<p&&w>=0&&w<h&&(k=x[e+w*(p*f)+v*f+a]),u[e+n+s+a]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},BR=r_(Rh,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),VR={kernelName:Rh,backendName:"cpu",kernelFunc:BR},WR=N$(e=>1/Math.sqrt(e)),UR=s_(Fh,WR),HR={kernelName:Fh,backendName:"cpu",kernelFunc:UR};function GR(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return df(n,t.dtype);const p=df(c,t.dtype);p.values.fill(l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[a*s+n]+=d[f*s+n]:p.values[a*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}const jR={kernelName:Dh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=d.calculateShapes(a,s,i),p=GR(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},qR={kernelName:Oh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t;e_([s,a,i],"select");const o=s.shape.length,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=Xd(a.dtype,i.dtype),d=r.makeZerosTypedArray(r.sizeFromShape(a.shape),h);let p=0;const f=0===o||o>1||1===a.shape.length?1:r.sizeFromShape(a.shape.slice(1));for(let r=0;r<l.length;r++)for(let e=0;e<f;e++)d[p++]=1===l[r]?u[r]:c[r];return n.makeTensorInfo(a.shape,h,d)}},KR=d.SELU_SCALEALPHA,XR=d.SELU_SCALE,ZR=r_(Mh,e=>e>=0?XR*e:KR*(Math.exp(e)-1)),YR={kernelName:Mh,backendName:"cpu",kernelFunc:ZR},JR=r_(Vh,e=>1/(1+Math.exp(-e))),QR={kernelName:Vh,backendName:"cpu",kernelFunc:JR},eF=r_(Bh,e=>e<0?-1:e>0?1:0),tF={kernelName:Bh,backendName:"cpu",kernelFunc:eF},nF=r_(zh,e=>Math.sin(e)),rF={kernelName:zh,backendName:"cpu",kernelFunc:nF},sF=r_(Ph,e=>Math.sinh(e)),aF={kernelName:Ph,backendName:"cpu",kernelFunc:sF},iF=Math.log(1.1920928955078125e-7)+2,oF=r_(Wh,e=>{const t=e>-iF,n=e<iF,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}),lF={kernelName:Wh,backendName:"cpu",kernelFunc:oF},uF={kernelName:Gh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;e_([a],"spaceToBatchND");const l=r.sizeFromShape(i),u=[[0,0]];u.push(...o);for(let r=1+i.length;r<a.shape.length;++r)u.push([0,0]);const c=NR.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=d.getReshaped(c.shape,i,l,!1),p=d.getPermuted(h.length,i.length,!1),f=d.getReshapedPermuted(c.shape,i,l,!1),m=F_({inputs:{x:c},backend:n,attrs:{shape:h}}),g=j_({inputs:{x:m},backend:n,attrs:{perm:p}}),y=F_({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}},cF={kernelName:Yh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=d.calculateShapes(a,s,o),f=GR(n.bufferSync(s),n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,f.dtype,f.values)}},hF={kernelName:jh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.parseAxisParam(o,a.shape)[0],u=d.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[l]=e;const r=b$({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r})}},dF=r_(Uh,e=>Math.sqrt(e)),pF={kernelName:Uh,backendName:"cpu",kernelFunc:dF},fF={kernelName:Xh,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;e_(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];a[i]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},mF=h_((e,t)=>{const n=e-t;return n*n}),gF=T_(Kh,mF),yF={kernelName:Kh,backendName:"cpu",kernelFunc:gF},bF=r_(ld,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),xF={kernelName:ld,backendName:"cpu",kernelFunc:bF};function vF(e,t,n,r){const s=df(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];s.set(t.get(...i),...e)}return s}const wF={kernelName:Jh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r;e_(s,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=l.sliceInfo(s.shape,a,i,o,u,c,h,d,p),v=F_({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(f){const e=b$({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=F_({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,s.dtype,[]);else{const e=vF(x,n.bufferSync(v),g,m);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const k=F_({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},kF=r_(Qh,e=>Math.tan(e)),IF={kernelName:Qh,backendName:"cpu",kernelFunc:kF},NF=r_(ed,e=>Math.tanh(e));function CF(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=df(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}function SF(e,t,n,s,a){const i=t[t.length-1],[o,l]=[e.length/i,i],u=r.getTypedArrayFromDType(n,o*s),c=r.getTypedArrayFromDType("int32",o*s);for(let r=0;r<o;r++){const t=r*l,n=e.subarray(t,t+l),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort((e,t)=>t.value-e.value);const i=r*s,o=u.subarray(i,i+s),h=c.subarray(i,i+s);for(let e=0;e<s;e++)o[e]=a[e].value,h[e]=a[e].index}const h=t.slice();return h[h.length-1]=s,[df(h,n,u),df(h,"int32",c)]}function TF(e,t,n,s){const a=r.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<a;r++)i[0]*=n[r];i[1]=n[a];for(let r=a+1;r<n.length;r++)i[2]*=n[r];const o={},l=new Int32Array(n[a]),u=new Md(i,s,e),c=[],h=1===i[0]&&1===i[2];for(let r=0;r<n[a];r++){let t;if(h)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(u.get(t,r,n));t=e.join(",")}if(void 0!==o[t])l[r]=o[t];else{const e=Object.keys(o).length;o[t]=e,l[r]=e,c.push(r)}}const d=i.slice();d[1]=Object.keys(o).length;const p=new Md(d,s);c.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(u.get(n,e,r),n,t,r)});const f=n.slice();return f[a]=d[1],{outputValues:p.values,outputShape:f,indices:l}}const _F=[L_,P_,V_,U_,R_,H_,K_,X_,Z_,Y_,Q_,t$,r$,i$,l$,d$,p$,f$,m$,M_,g$,v$,I$,S_,T$,$$,w_,E$,O$,z$,P$,L$,V$,W$,B$,H$,j$,q$,K$,X$,Z$,J$,Q$,eE,tE,nE,sE,rE,AE,i_,aE,lE,gE,xE,wE,NE,PE,VE,WE,GE,KE,XE,ZE,YE,QE,nA,aA,l_,iA,F$,lA,cA,dA,c_,mA,bA,vA,IA,CA,_A,EA,FA,DA,OA,VA,WA,UA,HA,GA,jA,zA,XA,ZA,QA,eR,rR,iR,_E,lR,cR,dR,fR,yR,bR,wR,IR,NR,TR,f_,$R,AR,N_,FR,g_,b_,D_,DR,OR,MR,LR,zR,PR,VR,HR,jR,qR,YR,QR,tF,rF,aF,x$,aR,lF,uF,cF,hF,pF,fF,yF,xF,wF,OE,KA,IF,{kernelName:ed,backendName:"cpu",kernelFunc:NF},{kernelName:td,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;e_(s,"tile");const i=CF(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:nd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a}=r;e_(s,"topk");const i=n.data.get(s.dataId).values,[o,l]=SF(i,s.shape,s.dtype,a);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},q_,{kernelName:sd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;e_(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=TF(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:ad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=s.shape[p]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=b$({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=F_({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},{kernelName:id,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s;e_(a,"unsortedSegmentSum");const l=[],u=[],c=a.shape.length-i.shape.length;let h=i;for(let r=0;r<c;++r){const e=vE({inputs:{input:h},backend:n,attrs:{dim:r+1}});h=e,u.push(e)}for(let p=0;p<o;++p){const e=r.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),s=oE({inputs:{a:t,b:h},backend:n}),i=C_({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=TE({inputs:{a:i,b:a},backend:n}),c=qA({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});l.push(c),u.push(t),u.push(s),u.push(i),u.push(o),u.push(c)}const d=kR({inputs:l,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},vR];for(const GW of _F)xd(GW);const $F={},EF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function AF(e){if(!(e in $F)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete $F[e]},!1),1===e?t.getContext("webgl",EF)||t.getContext("experimental-webgl",EF):t.getContext("webgl2",EF)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;$F[e]=t}const t=$F[e];return t.isContextLost()?(delete $F[e],AF(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),$F[e])}var RF,FF,DF;function OF(e,t){return[t,e]}function MF(e){const t=r.sizeFromShape(e),n=Math.ceil(t/4);return r.sizeToSquarishShape(n)}function LF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function zF(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===yu().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function PF(e,t){const n=t();return yu().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function BF(e){return!!(yu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function VF(e,t){return KF(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(RF||(RF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(FF||(FF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(DF||(DF={}));const WF=/ERROR: [0-9]+:([0-9]+):/g;function UF(e,t){if(PF(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function HF(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(PF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),PF(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i)),PF(e,()=>e.enableVertexAttribArray(o)),!0)}function GF(e,t,n){PF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),PF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function jF(e,t){PF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),PF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function qF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function KF(e,t,n){const r=PF(e,()=>t());if(null==r)throw new Error(n);return r}function XF(e,t=2){return r.sizeFromShape(e.slice(0,e.length-t))}function ZF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function YF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[XF(e),...ZF(e)]),t}function JF(e){return e%2==0}function QF(e,t){if(e=e.slice(-2),t=t.slice(-2),r.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(JF(n)&&JF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&JF(e[0])&&JF(t[0])}let eD,tD;function nD(e,t){return null!=e.getExtension(t)}function rD(e){try{if(null!=AF(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function sD(e){const t=zF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function aD(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const iD=yu();function oD(){let e,t,n,r,s,a,i,o,l,u;return 2===yu().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function lD(e,t,n="index"){const s=r.computeStrides(t);return s.map((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function uD(e){const t=r.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}iD.registerFlag("HAS_WEBGL",()=>iD.getNumber("WEBGL_VERSION")>0),iD.registerFlag("WEBGL_VERSION",()=>rD(2)?2:rD(1)?1:0),iD.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),iD.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===iD.get("WEBGL_VERSION")),iD.registerFlag("WEBGL_CPU_FORWARD",()=>!0),iD.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),iD.registerFlag("WEBGL_PACK",()=>iD.getBool("HAS_WEBGL")),iD.registerFlag("WEBGL_PACK_NORMALIZATION",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_PACK_CLIP",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),iD.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_PACK_REDUCE",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_LAZILY_UNPACK",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_CONV_IM2COL",()=>iD.getBool("WEBGL_PACK")),iD.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==eD){const t=AF(e);eD=t.getParameter(t.MAX_TEXTURE_SIZE)}return eD}(iD.getNumber("WEBGL_VERSION"))),iD.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==tD){const t=AF(e);tD=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tD)}(iD.getNumber("WEBGL_VERSION"))),iD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=iD.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=AF(e);return t=nD(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:nD(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),iD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>iD.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.isMobile()),iD.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=AF(e);if(1===e){if(!nD(t,"OES_texture_float"))return!1}else if(!nD(t,"EXT_color_buffer_float"))return!1;return sD(t)}(iD.getNumber("WEBGL_VERSION"))),iD.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!iD.getBool("WEBGL_FORCE_F16_TEXTURES")&&iD.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),iD.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=AF(e);if(1!==e){if(nD(t,"EXT_color_buffer_float"))return sD(t);const e="EXT_color_buffer_half_float";if(nD(t,e)){const n=t.getExtension(e);return function(e,t){const n=zF(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!nD(t,"OES_texture_float")&&!!nD(t,"WEBGL_color_buffer_float")&&sD(t)}(iD.getNumber("WEBGL_VERSION"))),iD.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=iD.getNumber("WEBGL_VERSION"))&&null!=AF(e).fenceSync;var e}),iD.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>iD.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),iD.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),iD.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});const cD="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class hD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=RF.DENSE;const t=MF(e),n=oD();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${lD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class dD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=RF.DENSE;const t=MF(e),n=oD();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${lD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class pD{constructor(e){this.variableNames=["A"],this.outTexUsage=FF.DOWNLOAD;const t=oD();this.outputShape=e,this.userCode=`\n      ${cD}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class fD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=FF.DOWNLOAD;const t=oD();this.outputShape=e,this.userCode=`\n      ${cD}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class mD{constructor(e,t,n=!1){this.variableNames=["A"];const r=oD(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${uD(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class gD{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=oD(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let t=0;t<=1;t++){const n=2*l+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${l} < ${e[1]}) {\n              localCoords[1] += ${l};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${uD(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function yD(e,t,n,r,s,a){!function(e,t){const n=yu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return KF(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return PF(e,()=>e.bindTexture(o,i)),PF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),PF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),PF(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),PF(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),PF(e,()=>e.texImage2D(o,0,r,t,n,0,s,a,null)),PF(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function bD(e){return e.internalFormatFloat}function xD(e){return e.internalFormatHalfFloat}function vD(e){return e.downloadTextureFormat}function wD(e){return e.internalFormatPackedFloat}function kD(e){return e.internalFormatPackedHalfFloat}class ID{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=yu().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){$F[e]=t}(t,e)):this.gl=AF(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===yu().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=VF(this.gl,"OES_texture_float"),nD(this.gl,e))this.textureHalfFloatExtension=VF(this.gl,e);else if(yu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),nD(this.gl,r))this.colorBufferHalfFloatExtension=VF(this.gl,r);else if(yu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",nD(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!nD(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=KF(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return PF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),PF(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=KF(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return PF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),PF(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return KF(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=zF(this.gl,this.textureHalfFloatExtension)}get debug(){return yu().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;PF(e,()=>e.finish()),PF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),PF(e,()=>e.deleteFramebuffer(this.framebuffer)),PF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),PF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),PF(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=OF(t,n);return yD(e,s,a,bD(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=OF(t,n);return yD(e,s,a,xD(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=OF(t,n);return yD(e,s,a,vD(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){PF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?PF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):PF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),PF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;PF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),PF(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),PF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=LF(t,n);return yD(e,s,a,kD(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=LF(t,n);return yD(e,s,a,wD(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(jF(this.gl,this.framebuffer),this.outputTexture=null),PF(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[s,a]=OF(t,n),i=new Uint8Array(t*n*4);return PF(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=LF(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();PF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));const a=16*t*n;return PF(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),PF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),PF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(yu().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return PF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=KF(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(PF(e,()=>e.shaderSource(n,t)),PF(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=WF.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map((e,t)=>r.rightPad((t+1).toString(),i)+e);let l=0;for(let r=0;r<o.length;r++)l=Math.max(o[r].length,l);const u=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),s=function(e){const t=oD();return function(e,t){const n=KF(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(PF(e,()=>e.shaderSource(n,t)),PF(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),a=function(e){return KF(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return PF(t,()=>t.attachShader(a,s)),PF(t,()=>t.attachShader(a,n)),function(e,t){if(PF(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&UF(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return PF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),HF(e,t,"clipSpacePos",n,3,20,0)&&HF(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&PF(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&UF(this.gl,this.program),PF(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return KF(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),PF(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){PF(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),PF(e,()=>e.activeTexture(e.TEXTURE0+n)),PF(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),PF(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=LF(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&UF(this.gl,this.program),qF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),PF(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),PF(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=VF(this.gl,2===yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),GF(this.gl,e,this.framebuffer),this.debug&&qF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(GF(this.gl,this.outputTexture,this.framebuffer),this.debug&&qF(this.gl)):jF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;GF(r,e,this.framebuffer),this.debug&&qF(r),this.outputTexture=e,PF(r,()=>r.viewport(0,0,t,n)),PF(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),PF(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:ND}=d;function CD(e,t,n,s){const a=[];e.forEach(e=>{const t=r.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))});const i=a.join("\n"),o=e.map(e=>function(e,t,n=!1){let s="";return s+=n?TD(e):SD(e),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(s+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=ND(e.shapeInfo.logicalShape,t.logicalShape),u=DD(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+c]}`).join(", ");let f="return outputValue;";const m=1===r.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===o&&null==e.shapeInfo.flatOffset&&r.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=DD(o),u=ND(e.shapeInfo.logicalShape,t.logicalShape),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";return p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+c]}`).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${s}(${p});\n    }\n  `}(e,t)),s}(e,t,s)).join("\n"),l=t.texShape,u=oD(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let h,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${_D}\n    ${$D}\n    ${ED}\n  `}(u);return t.isPacked?(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let l=2;l<e.length-1;l++)a*=e[e.length-l-1],i=`\n      int b${l} = index / ${a};\n      index -= b${l} * ${a};\n    `+i,o=`b${l}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,l),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return r.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=lD(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=lD(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=lD(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=lD(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,l),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),s&&(p+=AD),[p,c,d,i,h,o,n].join("\n")}function SD(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${RD(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${FD(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=RD(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&r.arraysEqual(t,a))return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${a[0]}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const{newShape:i,keptDims:o}=r.squeezeShape(t);if(i.length<t.length){const t=["row","col"];return`\n      ${SD(OD(e,i))}\n      float ${s}(int row, int col) {\n        return ${s}(${MD(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${FD(e)}\n      }\n    `;const l=a[0],u=a[1],c=RD(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],{newShape:o,keptDims:l}=r.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth"];return`\n        ${SD(OD(e,o))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${MD(t,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${FD(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;return h===a&&null==d?`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `:h===i&&null==d?`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${RD(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=r.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${SD(OD(e,l))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${MD(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${FD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===o&&null==c?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===a&&null==c?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${RD(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=r.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${SD(OD(e,u))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${MD(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${FD(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===l&&null==h?`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===a&&null==h?`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${RD(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=r.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${SD(OD(e,a))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${MD(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${FD(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===h&&null==d?`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:m===o&&null==d?`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${RD(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function TD(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${oD().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=oD();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=oD();if(null!=a&&r.arraysEqual(t,a))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${TD(OD(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${MD(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${oD().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let p=2;p<n-1;p++)h=`int b${p}, `+h,c*=t[n-p-1],d=`b${p} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${oD().texture2D}(${r}, uv);\n    }\n  `}(e)}}const _D="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$D="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ED="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AD="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function RD(e){return`offset${e}`}function FD(e){const t=e.name,n=r.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function DD(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function OD(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function MD(e,t){return t.map(t=>e[t]).join(", ")}function LD(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!r.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}const{addImpl:zD,bincountImpl:PD,bincountReduceImpl:BD,ceilImpl:VD,concatImpl:WD,expImpl:UD,expm1Impl:HD,floorImpl:GD,gatherV2Impl:jD,greaterImpl:qD,lessImpl:KD,linSpaceImpl:XD,logImpl:ZD,maxImpl:YD,maximumImpl:JD,minimumImpl:QD,multiplyImpl:eO,negImpl:tO,prodImpl:nO,rangeImpl:rO,rsqrtImpl:sO,simpleAbsImpl:aO,sliceImpl:iO,stridedSliceImpl:oO,subImpl:lO,tileImpl:uO,topKImpl:cO,transposeImpl:hO,uniqueImpl:dO}=A;function pO(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function fO(e,t){return 1===t?[e]:pO(e,t)}class mO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=fO("rc",t),r=DD(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class gO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2==1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${lD(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${uD(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class yO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=xO(t,n),s=vO(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=bO(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===DF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===DF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===DF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===DF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===DF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=xO(n,r),a=vO(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=bO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=yu().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bO(e,t,n,r,s){const a=function(e,t){switch(e){case DF.PACKED_2X2_FLOAT32:return wD(t);case DF.PACKED_2X2_FLOAT16:return kD(t);case DF.UNPACKED_FLOAT32:return bD(t);case DF.UNPACKED_FLOAT16:return xD(t);case DF.PACKED_4X1_UNSIGNED_BYTE:return vD(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=LF(e[0],e[1]);i=t*n}else{const[t,n]=OF(e[0],e[1]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function xO(e,t){if(e===FF.UPLOAD)return DF.PACKED_2X2_FLOAT32;if(e===FF.RENDER||null==e)return function(e){return yu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?DF.PACKED_2X2_FLOAT32:DF.UNPACKED_FLOAT32:e?DF.PACKED_2X2_FLOAT16:DF.UNPACKED_FLOAT16}(t);if(e===FF.DOWNLOAD||e===FF.PIXELS)return DF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function vO(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class wO{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const kO="return abs(x);",IO="return x;";class NO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class CO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=fO("rc",t),r=DD(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const SO=p.whereImpl,TO={};class _O extends wl{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!yu().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=AF(yu().getNumber("WEBGL_VERSION"));this.binaryCache=((t=yu().getNumber("WEBGL_VERSION"))in TO||(TO[t]={}),TO[t]),this.gpgpu=new ID(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new yO(this.gpgpu),this.numMBBeforeWarning=null==yu().global.screen?1024:yu().global.screen.height*yu().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new vl(this,em())}nextDataId(){return _O.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((yu().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||yu().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:FF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(yu().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:FF.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new NO(o,IO):new wO(o,IO);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=r.now()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=d.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=r.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=a){let t;t=l?new NO(s,IO):new wO(s,IO);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!yu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===yu().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==i&&yu().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...MF(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=d.mergeRealAndImagArrays(e[0],e[1])}else if(null==h)c=this.getValuesFromTexture(e);else{const e=r.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&em().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return df(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!BF(n)){if(yu().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=r.sizeFromShape(t);if(yu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...MF(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const i=yu().getBool("WEBGL_PACK")&&!0===s,o=i?YF(t):t,l=i?new fD(o):new pD(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=r.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=r.sum(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.now(),endMs:null}}endTimer(e){return yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.now(),e)}async getQueryTime(e){return yu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return yu().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=em().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return yu().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){d.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return SO(e.shape,t)}packedUnaryOp(e,t,n){const r=new NO(e.shape,t),s=this.compileAndRun(r,[e],n);return em().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=aO(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(yu().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,kO,e.dtype);const t=new wO(e.shape,kO),n=this.compileAndRun(t,[e]);return em().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const a=n.map(e=>r.encodeString(e));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return em().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new CO(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new mO(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[XF(e.shape),...ZF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[XF(t),...ZF(t)],a=new gO(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=YF(r);let i;return i=n?new dD(a):new hD(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,s,a=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===RF.DENSE){const t=MF(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===r.sizeFromShape(i.shape))return o.values=r.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.sizeFromShape(t.shape)<=yu().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!QF(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach(e=>{r+=`${e.shape}_${e.isUniform?"uniform":e.texData.texShape}_${null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0}`});let s=e.constructor.name;return s+="_"+r+"_"+e.userCode,s}(e,u,c),d=this.getAndSaveBinary(h,()=>function(e,t,n,r){const s=t.userCode,a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=a.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=CD(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===yu().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let p=0;p<t.variableNames.length;p++){const n=t.variableNames[p],r=!1;d[n]=e.getUniformLocation(u,n,r),d[`offset${n}`]=e.getUniformLocation(u,`offset${n}`,r)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,s,a){LD(t.inShapeInfos,n),LD([t.outShapeInfo],[s]);const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===yu().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,s)=>{const a=t.program.variableNames[s],i=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`];if(null!=i)if(n.isUniform)if(r.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,s)}),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=yu().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=r.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!yu().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(yu().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=nm(()=>{if(!yu().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=yu().getBool("DEBUG");yu().set("DEBUG",!1);const t=this.abs(om(1e-8)).dataSync()[0];if(yu().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=r.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=yu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.squeezeShape(e);e=t.newShape}let s=r.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=XF(e);let n=2,a=2;return e.length&&([n,a]=ZF(e)),s=t*(n/2)*(a/2),r.sizeToSquarishShape(s).map(e=>2*e)}return r.sizeToSquarishShape(s)}(n,l),t.texShape=h),null!=a){const e=YF(n);let i,o=h[1],d=h[0];const p=a instanceof Uint8Array;l?([o,d]=LF(h[0],h[1]),i=new gD(e,[d,o],p)):i=new mD(e,[d,o],p);const f=this.makeTensorInfo([d,o],s);this.texData.get(f.dataId).usage=p?FF.PIXELS:FF.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,a);const m=this.runWebGLProgram(i,[f],s,null,!0),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=r.now()-c)}else{const e=this.acquireTexture(h,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.bytesPerElement(t)}}_O.nextDataId=0,a.isBrowser()&&am("webgl",()=>new _O,2);class $O{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=d.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class EO{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=d.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let i="";if(s)if(0===a||1===r.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${DD(a)} coords = getOutputCoords();\n        `,1===a)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=fO("coords",a);i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function AO(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const RO={kernelName:Rc,backendName:"webgl",kernelFunc:AO};function FO(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=AO({inputs:{x:r},backend:n}),l=AO({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const DO={kernelName:ju,backendName:"webgl",kernelFunc:FO},OO="return (a < 0.) ? b * a : a;",MO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",LO={kernelName:zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.createScalarValue(i,"float32")),l=yu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new EO(MO,a.shape,o.shape):new $O(OO,a.shape,o.shape),u=n.runWebGLProgram(l,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),u}},zO="return (a < 0.) ? b * a : a;",PO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",BO={kernelName:xh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=yu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new EO(PO,r.shape,s.shape):new $O(zO,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function VO({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=yu().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new NO(i.shape,t):new wO(i.shape,e),o.runWebGLProgram(u,[i],l)}}function WO({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new $O(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],Xd(n.dtype,r.dtype))}),a=FO({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Xd(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let d;return d=yu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new EO(t,l.shape,u.shape,n):new $O(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function UO(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?PO:zO;if("leakyrelu"===e)return t?MO:OO;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class HO{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class GO{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=d.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const jO="return a * b;";function qO(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=d.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new GO("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new GO("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=FO({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=eO(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=yu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new EO(jO,r.shape,s.shape):new $O(jO,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const KO={kernelName:lh,backendName:"webgl",kernelFunc:qO};function XO(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,l=r.sizeFromShape(a.shape),u=r.inferFromImplicitShape(i,l),c=r.sizeFromShape(u);r.assert(l===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const h=o.texData.get(a.dataId);return!h.isPacked||QF(a.shape,u)||null!==h.texture&&QF(h.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[XF(e.shape),...ZF(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[XF(t),...ZF(t)],i=new gO(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,o)}const ZO={kernelName:Ch,backendName:"webgl",kernelFunc:XO};class YO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${r.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class JO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function QO(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=d.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new YO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new YO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new JO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class eM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=DD(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class tM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=DD(this.rank),s=pO("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function nM(e,t,n){const r=yu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tM(e.shape,t):new eM(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function rM(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=e.shape.length,i=r.parseAxisParam(t,e.shape);let o=i;const l=d.getAxesPermutation(o,a),u=null!=l;let c=e;u&&(c=nM(e,l,s),o=d.getInnerMostAxes(o.length,a)),d.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=d.computeOutAndReduceShapes(c.shape,o);let f=h;n&&(f=d.expandShapeToKeepDim(h,i));const m=r.sizeFromShape(p),g=XO({inputs:{x:c},attrs:{shape:[r.sizeFromShape(e.shape)/m,m]},backend:s}),y=QO(g,Zd(e.dtype),"sum",s),b=XO({inputs:{x:y},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(c),b}(a,i,o,n)}const sM={kernelName:Hh,backendName:"webgl",kernelFunc:rM};function aM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=new Array(s.shape.length);for(let u=0;u<o.length;u++)o[u]=s.shape[a[u]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId),t=hO(e.values,s.shape,s.dtype,a,o);l=i.makeTensorInfo(o,s.dtype),i.texData.get(l.dataId).values=t}else l=nM(s,a,i);return l}const iM={kernelName:rd,backendName:"webgl",kernelFunc:aM};function oM({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}){const c=e.shape.length,h=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=r.sizeFromShape(g),x=r.sizeFromShape(y);r.assert(c>=2&&h>=2&&(b===x||1===b||1===x),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`);const v=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);const w=n?[b,d,f]:[b,f,d],k=s?[x,m,p]:[x,p,m],I=XO({inputs:{x:e},backend:a,attrs:{shape:w}}),N=XO({inputs:{x:t},backend:a,attrs:{shape:k}}),C=[I,N],S=Math.max(b,x),T=n?I.shape[1]:I.shape[2],_=null!=i,$=null!=o,E="leakyrelu"===u,A=null!=u?UO(u,!0):null;let R;if((1===f||1===m)&&T>1e3&&!1===(_||$||E||null!=A)){let e=I,t=N;n&&(e=aM({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),s&&(t=aM({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));const r=1===m;let i=e;1!==m&&(i=XO({inputs:{x:e},backend:a,attrs:{shape:[S,T,1]}}),C.push(i));const o=1===m?2:1;let l=t;r&&(l=XO({inputs:{x:t},backend:a,attrs:{shape:[S,1,T]}}),C.push(l));const u=qO({inputs:{a:i,b:l},backend:a});R=rM({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(u)}else{const u=Xd(e.dtype,t.dtype),c=new HO(w,k,[S,f,m],n,s,_,A,$,E),h=[I,N];if(null!=i&&h.push(i),$&&h.push(o),E){const e=a.makeTensorInfo([],"float32",r.createScalarValue(l,"float32"));h.push(e),C.push(e)}R=a.runWebGLProgram(c,h,u)}const F=XO({inputs:{x:R},backend:a,attrs:{shape:v}});C.push(R);for(const r of C)a.disposeIntermediateTensorInfo(r);return F}const lM={kernelName:hd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return oM({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},uM="return abs(x);",cM={kernelName:ku,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=aO(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=yu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new NO(r.shape,uM):new wO(r.shape,uM),n.runWebGLProgram(s,[r],r.dtype)}},hM=VO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),dM={kernelName:Iu,backendName:"webgl",kernelFunc:hM},pM=VO({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),fM={kernelName:Nu,backendName:"webgl",kernelFunc:pM},mM="return a + b;",gM=WO({opSnippet:mM,packedOpSnippet:mM,supportsComplex:!0,cpuKernelImpl:zD}),yM={kernelName:Cu,backendName:"webgl",kernelFunc:gM};class bM{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class xM{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const vM={kernelName:Su,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return AO({inputs:{x:s[0]},backend:r});if(s.length>yu().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map(e=>e.dtype).reduce((e,t)=>Xd(e,t)),i=s.map(e=>e.shape),o=yu().getBool("WEBGL_PACK")?new xM(s[0].shape,i):new bM(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},wM={kernelName:Tu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l);let p=a;null!=h&&(p=aM({inputs:{x:a},backend:n,attrs:{perm:h}}),c=d.getInnerMostAxes(c.length,l)),d.assertAxesAreInnerMostDims("all",c,l);const[f,m]=d.computeOutAndReduceShapes(p.shape,c),g=XO({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=QO(g,g.dtype,"all",n);let b;return b=XO(o?{inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),b}},kM={kernelName:_u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l);let p=a;null!=h&&(p=aM({inputs:{x:a},backend:n,attrs:{perm:h}}),c=d.getInnerMostAxes(c.length,l)),d.assertAxesAreInnerMostDims("any",c,l);const[f,m]=d.computeOutAndReduceShapes(p.shape,c),g=XO({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=QO(g,g.dtype,"any",n);let b;return b=XO(o?{inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),b}};class IM{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NM{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=DD(o),u=fO("coords",o);let c,h;if(1===a){h=o+1;const e=DD(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(e=>"int "+e),m=fO("sourceLocR",h-1).concat("inIdx.r"),g=fO("sourceLocG",h-1).concat("inIdx.g"),y=fO("sourceLocB",h-1).concat("inIdx.b"),b=fO("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function CM(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=d.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new IM(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=CM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function SM(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=d.computeOptimalWindowSize(s[s.length-1]),i=new NM(s,a,n,null==r),o=e.runWebGLProgram(i,null==r?[t]:[t,r],"int32");if(o.shape.length===t.shape.length){const r=SM(e,t,n,o);return e.disposeIntermediateTensorInfo(o),r}return o}function TM(e,t,n,s){const a=[n];if(d.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!yu().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,o]=d.computeOutAndReduceShapes(t.shape,a),l=r.sizeFromShape(o),u=XO({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});n.push(u);const c=CM(e,u,s);n.push(c);const h=XO({inputs:{x:c},backend:e,attrs:{shape:i}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return SM(e,t,s)}const _M={kernelName:$u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=aM({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),d.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const h=TM(n,u,o[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},$M={kernelName:Eu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=aM({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),d.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const h=TM(n,u,o[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},EM=VO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),AM={kernelName:Au,backendName:"webgl",kernelFunc:EM},RM=VO({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),FM={kernelName:Ru,backendName:"webgl",kernelFunc:RM},DM=VO({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),OM={kernelName:Fu,backendName:"webgl",kernelFunc:DM},MM=WO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),LM={kernelName:Ou,backendName:"webgl",kernelFunc:MM},zM=VO({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),PM={kernelName:Du,backendName:"webgl",kernelFunc:zM};class BM{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / count");const y=4*Math.floor(a/4),b=a%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class VM{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const WM={kernelName:Mu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;aD(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return AO({inputs:{x:a},backend:n});const h=new BM(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},UM={kernelName:zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=d.computePool3DInfo(s.shape,a,i,[1,1,1],o,l,u),h=new VM(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class HM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jM={kernelName:Pu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=d.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new GM(h);return n.runWebGLProgram(p,[s],i.dtype)}},qM={kernelName:Lu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;aD([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=d.computePool2DInfo(i.shape,o,l,1,u),h=new HM(c);return n.runWebGLProgram(h,[s],i.dtype)}},KM={kernelName:Bu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return oM({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class XM{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],d.assertAndGetBroadcastShape(e,t),d.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(d.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(d.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ZM{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],d.assertAndGetBroadcastShape(e,t),d.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(d.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(d.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const YM={kernelName:Tc,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:l}=e;r.assert(a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==l||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=yu().getBool("WEBGL_PACK_NORMALIZATION")?new ZM(s.shape,a.shape,i.shape,h,d,u):new XM(s.shape,a.shape,i.shape,h,d,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class JM{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=DD(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return QM.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${QM[t]} = start[${t}] + coords.${QM[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const QM=["x","y","z","w","u","v"];class eL{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=DD(this.rank),n=fO("coords",this.rank),r=fO("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function tL(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[u,c]=l.parseSliceParams(a,i,o);if(l.assertParamsValid(a,u,c),0===r.sizeFromShape(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=iO(e.values,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,t)}const{isPacked:h}=n.texData.get(a.dataId),d=l.isSliceContinous(a.shape,u,c);if(h||!d){const e=yu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eL(c):new JM(c),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=l.computeFlatOffset(t,r.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const c=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,c+1),i}(a,u,c,n)}const nL={kernelName:Lh,backendName:"webgl",kernelFunc:tL},rL={kernelName:Vu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=i.reduce((e,t)=>e*t),u=d.getReshaped(a.shape,i,l),c=d.getPermuted(u.length,i.length),h=d.getReshapedPermuted(a.shape,i,l),p=d.getSliceBeginCoords(o,i.length),f=d.getSliceSize(h,o,i.length),m=[],g=XO({inputs:{x:a},backend:n,attrs:{shape:u}}),y=aM({inputs:{x:g},backend:n,attrs:{perm:c}}),b=XO({inputs:{x:y},backend:n,attrs:{shape:h}}),x=tL({inputs:{x:b},backend:n,attrs:{begin:p,size:f}});return m.push(g),m.push(y),m.push(b),m.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},sL={kernelName:Wu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=PD(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},aL=WO({opSnippet:"return float(a != b);",dtype:"bool"}),iL={kernelName:ch,backendName:"webgl",kernelFunc:aL};function oL(e){const{inputs:t,backend:n}=e,{input:r}=t;return AO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const lL={kernelName:kh,backendName:"webgl",kernelFunc:oL},uL={kernelName:Uu,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return AO({inputs:{x:i},backend:s});const t=Og(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),r=FO({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const t=oL({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.hasEncodingLoss(i.dtype,o)){const e=AO({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new wO(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.getTypedArrayFromDType("bool",1)),t=aL({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},cL="return ceil(x);",hL=VO({opSnippet:cL,packedOpSnippet:cL,cpuKernelImpl:VD}),dL={kernelName:Hu,backendName:"webgl",kernelFunc:hL};class pL{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class fL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const mL={kernelName:Gu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=yu().getBool("WEBGL_PACK_CLIP")?new fL(s.shape):new pL(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class gL{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function yL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const bL={kernelName:qu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new gL(r.shape),i=[yL(r,s.complexTensorInfos.real),yL(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class xL{constructor(e){this.outputShape=[],this.outputShape=d.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class vL{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=d.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=DD(r),a=fO("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let d=1;d<o.length;d++)o[d]=o[d-1]+e[d][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let d=1;d<o.length;d++){const e=o[d-1];h+=`\n        if (${l} < ${o[d]}  && ${l} >= ${o[d-1]}) {\n          return getChannel(\n            getT${d}(${wL(i,l,e)}),\n            vec2(${wL(u,l,e)}));\n        }`}const p=o[o.length-1];h+=`\n        return getChannel(\n          getT${o.length}(${wL(i,l,p)}),\n          vec2(${wL(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function wL(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function kL(e){const{inputs:t,backend:n}=e,{input:r}=t;return AO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const IL={kernelName:Dc,backendName:"webgl",kernelFunc:kL};function NL(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>oL({inputs:{input:e},backend:n})),s=e.map(e=>kL({inputs:{input:e},backend:n})),a=NL(r,t,n),i=NL(s,t,n),o=FO({inputs:{real:a,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:s,outShape:a}=CL(e,t,n),i=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),o=WD(i,a,r,1===s[0].shape[0]),l=d.computeOutShape(e.map(e=>e.shape),t),u=n.makeTensorInfo(l,r,o);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}if(e.length>yu().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=NL(e.slice(0,r),t,n),a=NL(e.slice(r),t,n),i=NL([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(yu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new vL(e.map(e=>e.shape),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:a}=CL(e,t,n),i=new xL(s.map(e=>e.shape)),o=n.runWebGLProgram(i,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=XO({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function CL(e,t,n){const s=d.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>XO({inputs:{x:e},attrs:{shape:[-1,r.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:s}}function SL(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.parseAxisParam(a,t[0].shape)[0],o=d.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===l.length)return AO({inputs:{x:l[0]},backend:n});const u=l.map(e=>e.shape);return d.assertParamsConsistent(u,i),NL(l,i,n)}const TL={kernelName:Ku,backendName:"webgl",kernelFunc:SL};class _L{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class $L{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EL{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=oD(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function AL({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape,c=s.texData.get(e.dataId),h="channelsLast"===n.dataFormat;let d;const p=[],f=u[2]%2!=0&&!!c.isPacked;if((1!=u[0]*u[1]*u[2]&&1!==n.outChannels||!(n.inChannels>1e3))&&yu().getBool("WEBGL_LAZILY_UNPACK")&&yu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&f){const f={dataId:e.dataId,shape:[1,h?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),n.inChannels],dtype:e.dtype},m=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.assert(QF(c.shape,f.shape),()=>`packed reshape ${c.shape} to ${f.shape} isn't free`);const g=XO({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});p.push(g);const y=oM({a:f,b:g,backend:s,transposeA:!1,transposeB:!1,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),b=s.texData.get(y.dataId);r.assert(b.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=m,b.shape=n.outShape,d=AO({inputs:{x:y},backend:s}),d.shape=n.outShape,p.push(y)}else{const r=XO({inputs:{x:e},backend:s,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=XO({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=oM({a:r,b:c,transposeA:!1,transposeB:!1,backend:s,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});d=XO({inputs:{x:f},backend:s,attrs:{shape:n.outShape}}),p.push(r),p.push(c),p.push(f)}for(const r of p)s.disposeIntermediateTensorInfo(r);return d}function RL({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=u*c*h,y=p*d,b=[g,y],x=[],v=XO({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),w=XO({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const k=new EL(b,v.shape,n),I=s.runWebGLProgram(k,[v],"float32"),N=XO({inputs:{x:I},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(N);const C=null!=a,S=null!=i,T="leakyrelu"===l,_=l?UO(l,!0):null,$=new HO(N.shape,w.shape,[1,y,n.outChannels],!0,!1,C,_,S,T),E=[N,w];if(a&&E.push(a),S&&E.push(i),T){const e=s.makeTensorInfo([],"float32",r.createScalarValue(o,"float32"));E.push(e),x.push(e)}const A=s.runWebGLProgram($,E,"float32"),R=XO({inputs:{x:A},backend:s,attrs:{shape:m?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});x.push(A);for(const r of x)s.disposeIntermediateTensorInfo(r);return R}const FL={kernelName:Xu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=d.convertConv2DDataFormat(l),p=d.computeConv2DInfo(s.shape,a.shape,i,u,o,c,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(yu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=RL({x:s,filter:a,convInfo:p,backend:n});else{const e=new _L(p);f=n.runWebGLProgram(e,[s,a],"float32")}else f=AL({x:s,filter:a,convInfo:p,backend:n});const m=XO({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class DL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ML{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zL={kernelName:Zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=d.convertConv2DDataFormat(l),p=d.computeConv2DInfo(s.shape,c,i,1,o,u,!1,h),f=new DL(p);return n.runWebGLProgram(f,[s,a],"float32")}},PL={kernelName:Yu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=d.convertConv2DDataFormat(u),p=d.computeConv2DInfo(i,a.shape,o,1,l,c,!1,h),f=new OL(p);return n.runWebGLProgram(f,[s,a],"float32")}},BL={kernelName:Ju,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=d.computeConv3DInfo(s.shape,a.shape,i,l,o),c=new $L(u);return n.runWebGLProgram(c,[s,a],"float32")}},VL={kernelName:Qu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=d.computeConv3DInfo(s.shape,l,i,1,o),c=new ML(u);return n.runWebGLProgram(c,[s,a],"float32")}},WL={kernelName:ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=d.computeConv3DInfo(l,a.shape,o,1,i),c=new LL(u);return n.runWebGLProgram(c,[s,a],"float32")}},UL=VO({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),HL={kernelName:tc,backendName:"webgl",kernelFunc:UL},GL=VO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),jL={kernelName:nc,backendName:"webgl",kernelFunc:GL};class qL{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const KL={kernelName:sc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new qL(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class XL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${ZL(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${DD(r)} coords = getOutputCoords();\n        int end = ${YL(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${YL(r,"coords")} = idx;\n          val += getX(${ZL(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function ZL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function YL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const JL={kernelName:rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=d.getAxesPermutation([a],l);let c=s;null!=u&&(c=aM({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=d.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const p=c.shape[h];let f=AO({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){const e=new XL(c.shape,!1,o),t=e.getCustomSetupFunc(d),r=f;f=n.runWebGLProgram(e,[f],f.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new XL(c.shape,i,o),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=aM({inputs:{x:f},backend:n,attrs:{perm:d.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(c),e}return f}},QL={kernelName:ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=PD(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=BD(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class ez{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const tz={kernelName:ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.assert(i>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`);const l=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*i,c=("NHWC"===o?a.shape[2]:a.shape[3])*i,h=("NHWC"===o?a.shape[3]:a.shape[1])/(i*i),d=new ez("NHWC"===o?[l,u,c,h]:[l,h,u,c],i,o);return n.runWebGLProgram(d,[a],a.dtype)}};class nz{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class rz{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.inHeight,o=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let r=0;r<f;r++)for(let e=0;e<m;e++)y+=`\n          vec4 xTexelR${r}C${2*e} = vec4(0.);\n          vec4 wR${r}C${e} = vec4(0.);\n          vec4 xR${r}C${e} = vec4(0.);`;for(let w=0;w<f;w++)for(let e=0;e<g;e++){const t=2*e;if(y+=`\n          xR = xRCorner + ${w*d};\n          xC = xCCorner + ${t*p};\n        `,1===h){if(t<m&&(y+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${w}C${t}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${w}C${t} = vec4(previous.zw, xTexelR${w}C${t}.xy);\n                } else {\n                  xR${w}C${t} = vec4(0, 0, xTexelR${w}C${t}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xR${w}C${t} = xTexelR${w}C${t};\n              `,t+1<m)){const e=u%2==0?r.nearestLargerEven(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(y+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${i} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${w}C${t} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${w}C${t+1} = xTexelR${w}C${t+2};\n                `}}else t<m&&(y+=`\n              if(xR >= 0 && xR < ${i}) {\n            `,u%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n              `,t+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${w}C${t+1} = vec4(xTexelR${w}C${t+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.xy, xTexelR${w}C${t+2}.xy);\n              `,t+1<m&&(y+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n                `)),y+="}");t<m&&(y+=`\n            vec4 wTexelR${w}C${t} = getW(${w}, ${t}, d1, q);\n            wR${w}C${t} = vec4(wTexelR${w}C${t}.xz, wTexelR${w}C${t}.xz);\n          `,t+1<m&&(y+=`\n              vec4 wTexelR${w}C${t+1} = getW(${w}, ${t+1}, d1, q);\n              wR${w}C${t+1} =\n                vec4(wTexelR${w}C${t+1}.xz, wTexelR${w}C${t+1}.xz);`))}for(let r=0;r<f;r++)for(let e=0;e<m;e++)y+=`dotProd += xR${r}C${e} * wR${r}C${e};`;let b="",x="";n&&(b=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const sz={kernelName:oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;let h=u;null==h&&(h=[1,1]),r.assert(d.eitherStridesOrDilationsAreOne(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);const p=d.computeConv2DInfo(a.shape,i.shape,o,h,l,c,!0);let f;return f=yu().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new rz(p):new nz(p),n.runWebGLProgram(f,[a,i],"float32")}};class az{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oz={kernelName:lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=d.computeConv2DInfo(s.shape,c,i,o,l,u,!0),p=new az(h);return n.runWebGLProgram(p,[s,a],"float32")}},lz={kernelName:uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=d.computeConv2DInfo(c,a.shape,i,o,l,u,!0),p=new iz(h);return n.runWebGLProgram(p,[s,a],"float32")}};class uz{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const cz={kernelName:cc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.sizeFromShape(s.shape),o=XO({inputs:{x:s},backend:n,attrs:{shape:[i]}}),l=new uz(i),u=n.runWebGLProgram(l,[o],o.dtype),c=XO({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class hz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const dz={kernelName:hc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=d.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new hz(u);c=n.runWebGLProgram(h,[s,a],"float32");const p=XO({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},pz=VO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),fz={kernelName:mc,backendName:"webgl",kernelFunc:pz},mz={kernelName:gc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=yu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new EO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new $O("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},gz=WO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),yz={kernelName:bc,backendName:"webgl",kernelFunc:gz},bz=VO({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${d.ERF_P};\n  float a1 = ${d.ERF_A1};\n  float a2 = ${d.ERF_A2};\n  float a3 = ${d.ERF_A3};\n  float a4 = ${d.ERF_A4};\n  float a5 = ${d.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),xz={kernelName:yc,backendName:"webgl",kernelFunc:bz},vz="return exp(x);",wz=VO({opSnippet:vz,packedOpSnippet:vz,cpuKernelImpl:UD}),kz={kernelName:xc,backendName:"webgl",kernelFunc:wz};function Iz(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=a;return a<0&&(r.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),l.splice(u,0,1),XO({inputs:{x:i},backend:s,attrs:{shape:l}})}const Nz={kernelName:vc,backendName:"webgl",kernelFunc:Iz},Cz="return exp(x) - 1.0;",Sz=VO({opSnippet:Cz,packedOpSnippet:Cz,cpuKernelImpl:HD}),Tz={kernelName:wc,backendName:"webgl",kernelFunc:Sz};class _z{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function $z(e,t,n){const s=n.texData.get(e.dataId),a=r.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=XO({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),l=o.shape,u=new _z("real",l,t),c=new _z("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=FO({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=XO({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const Ez={kernelName:kc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return $z(r,!1,n)}};class Az{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function Rz(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.inferDtype(a),"string"===i){const e=r.getArrayFromDType(i,r.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new Az(s,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],i,n)}}const Fz={kernelName:Ic,backendName:"webgl",kernelFunc:Rz};class Dz{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Oz={kernelName:Nc,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new Dz(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},Mz="return floor(x);",Lz=VO({opSnippet:Mz,packedOpSnippet:Mz,cpuKernelImpl:GD}),zz={kernelName:Cc,backendName:"webgl",kernelFunc:Lz},Pz=WO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Bz={kernelName:Sc,backendName:"webgl",kernelFunc:Pz};class Vz{constructor(e){this.variableNames=["A"];const t=oD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Wz{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=oD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Uz={kernelName:ud,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,a];(o||i||l)&&(null==Hz&&(Hz=document.createElement("canvas").getContext("2d")),Hz.canvas.width=u,Hz.canvas.height=c,Hz.drawImage(s,0,0,u,c),s=Hz.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=FF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=yu().getBool("WEBGL_PACK")?new Wz(d):new Vz(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let Hz;const Gz={kernelName:dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=s,y=d.convertConv2DDataFormat(h),b=d.computeConv2DInfo(a.shape,i.shape,u,p,c,f,!1,y);let x;const v=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(yu().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])x=RL({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:m,preluActivationWeights:l,leakyreluAlpha:g});else{const e=null!=o,t=null!=l,s="leakyrelu"===m,u=m?UO(m,!1):null,c=new _L(b,e,u,t,s),h=[a,i];if(o&&h.push(o),l&&h.push(l),s){const e=n.makeTensorInfo([],"float32",r.createScalarValue(g,"float32"));h.push(e),v.push(e)}x=n.runWebGLProgram(c,h,"float32")}else x=AL({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:m,preluActivationWeights:l,leakyreluAlpha:g});const w=XO({inputs:{x:x},backend:n,attrs:{shape:b.outShape}});return v.push(x),v.forEach(e=>n.disposeIntermediateTensorInfo(e)),w}},jz={kernelName:pd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s,g=[];let y=h;null==y&&(y=[1,1]),r.assert(d.eitherStridesOrDilationsAreOne(u,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${y}'`);const b=d.computeConv2DInfo(a.shape,i.shape,u,y,c,p,!0),x=yu().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,v=f?UO(f,x):null,w=[a,i],k=null!=o,I=null!=l,N="leakyrelu"===f;if(k&&w.push(o),I&&w.push(l),N){const e=n.makeTensorInfo([],"float32",r.createScalarValue(m,"float32"));w.push(e),g.push(e)}let C;C=x?new rz(b,k,v,I,N):new nz(b,k,v,I,N);const S=n.runWebGLProgram(C,w,"float32");return g.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}};class qz{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=DD(t.length),s=DD(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Kz={kernelName:$c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],[l,u,c,h]=d.prepareAndValidate(s,a),p=XO({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=XO({inputs:{x:s},backend:n,attrs:{shape:[r.sizeFromShape(s.shape)/c,c]}}),m=new qz(o,h,[u,c]),g=n.runWebGLProgram(m,[f,p],f.dtype),y=XO({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Xz{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=DD(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)r.push(2===s?"int(getIndices(resRC.x, resRC.z))":`${n[s]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const Zz={kernelName:_c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s,u=r.parseAxisParam(o,a.shape)[0],c=d.segment_util.collectGatherOpShapeInfo(a,i,u,l),h=r.sizeFromShape(i.shape),p=[],f=XO({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=XO({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(f),p.push(m);const g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),r=jD(t,e,g);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const y=new Xz(f.shape,g),b=n.runWebGLProgram(y,[f,m],f.dtype);p.push(b);const x=XO({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},Yz=WO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:qD,dtype:"bool"}),Jz={kernelName:Ec,backendName:"webgl",kernelFunc:Yz},Qz=WO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),eP={kernelName:Ac,backendName:"webgl",kernelFunc:Qz},tP={kernelName:Fc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return $z(r,!0,n)}},nP=VO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),rP={kernelName:Oc,backendName:"webgl",kernelFunc:nP},sP=VO({opSnippet:"return float(isinf(x));",dtype:"bool"}),aP={kernelName:Mc,backendName:"webgl",kernelFunc:sP},iP=VO({opSnippet:"return float(isnan(x));",dtype:"bool"}),oP={kernelName:Lc,backendName:"webgl",kernelFunc:iP},lP=WO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:KD,dtype:"bool"}),uP={kernelName:Pc,backendName:"webgl",kernelFunc:lP},cP=WO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),hP={kernelName:Bc,backendName:"webgl",kernelFunc:cP},dP={kernelName:Vc,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=XD(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},pP=VO({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ZD}),fP={kernelName:Wc,backendName:"webgl",kernelFunc:pP},mP=VO({opSnippet:"return log(1.0 + x);"}),gP={kernelName:Uc,backendName:"webgl",kernelFunc:mP},yP=WO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),bP={kernelName:Hc,backendName:"webgl",kernelFunc:yP},xP=VO({opSnippet:"return float(!(x >= 1.0));"}),vP={kernelName:Gc,backendName:"webgl",kernelFunc:xP},wP=WO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),kP={kernelName:jc,backendName:"webgl",kernelFunc:wP};class IP{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class NP{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const CP={kernelName:qc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=yu().getBool("WEBGL_PACK_NORMALIZATION")?new NP(s.shape,a,i,o,l):new IP(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class SP{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const TP={kernelName:Kc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new SP(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function _P(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l),p=null!=h,f=n.shouldExecuteOnCPU([a]);let m=a;if(p){if(f){const e=n.texData.get(m.dataId).values,t=new Array(l);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];const r=hO(e,a.shape,a.dtype,h,t);m=n.makeTensorInfo(t,a.dtype),n.texData.get(m.dataId).values=r}else m=nM(a,h,n);c=d.getInnerMostAxes(c.length,l)}d.assertAxesAreInnerMostDims("max",c,l);const[g,y]=d.computeOutAndReduceShapes(m.shape,c);let b,x=g;if(o&&(x=d.expandShapeToKeepDim(g,u)),f){const e=n.texData.get(m.dataId),t=YD(e.values,r.sizeFromShape(y),x,a.dtype);b=n.makeTensorInfo(x,a.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,s){const a=r.sizeFromShape(t),i=XO({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/a,a]},backend:s}),o=QO(i,e.dtype,"max",s),l=XO({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(m,y,x,n);return p&&n.disposeIntermediateTensorInfo(m),b}const $P={kernelName:Xc,backendName:"webgl",kernelFunc:_P},EP=WO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:JD}),AP={kernelName:Zc,backendName:"webgl",kernelFunc:EP},RP={kernelName:Yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;aD(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return AO({inputs:{x:a},backend:n});const h=new BM(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},FP={kernelName:Qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=d.computePool3DInfo(s.shape,a,i,[1,1,1],o,u,l),h=new VM(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class DP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MP={kernelName:eh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=d.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new VM(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new OP(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},LP={kernelName:Jc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;aD([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=d.computePool2DInfo(o.shape,l,u,1,c,h),f=new BM(p,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),g=new DP(p),y=n.runWebGLProgram(g,[s,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}},zP={kernelName:th,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;r.assert(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];r.assert(d.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=d.computePool2DInfo(s.shape,a,i,c,o),[p,f]=function(e,t,n,r){let s=new BM(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new BM(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,l,h,u);return[p,f]}},PP={kernelName:nh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,l=s.shape.length,u=r.parseAxisParam(i,s.shape);let c=u;const h=d.getAxesPermutation(c,l),p=null!=h,f=o.shouldExecuteOnCPU([s]),m=[];let g=s;if(p){if(f){const e=o.texData.get(g.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=hO(e,s.shape,s.dtype,h,t);g=o.makeTensorInfo(t,s.dtype),o.texData.get(g.dataId).values=n}else g=nM(s,h,o);m.push(g),c=d.getInnerMostAxes(c.length,l)}d.assertAxesAreInnerMostDims("sum",c,l);const[y,b]=d.computeOutAndReduceShapes(g.shape,c);let x=y;a&&(x=d.expandShapeToKeepDim(y,u));const v=function(e,t,n,s){const a=r.sizeFromShape(t),i=XO({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/a,a]},backend:s}),o=QO(i,"float32","mean",s),l=XO({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(g,b,x,o);for(const r of m)o.disposeIntermediateTensorInfo(r);return v}},BP={kernelName:rh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l);let p=a;null!=h&&(p=aM({inputs:{x:a},backend:n,attrs:{perm:h}}),c=d.getInnerMostAxes(c.length,a.shape.length)),d.assertAxesAreInnerMostDims("min",c,l);const[f,m]=d.computeOutAndReduceShapes(p.shape,c),g=XO({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=QO(g,g.dtype,"min",n);let b;return b=XO(o?{inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),b}},VP=WO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:QD}),WP={kernelName:sh,backendName:"webgl",kernelFunc:VP};class UP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=DD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class HP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=DD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=fO("rc",r),l=fO("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const GP={kernelName:ah,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=yu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HP(r.shape,s,a):new UP(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},jP=WO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qP={kernelName:ih,backendName:"webgl",kernelFunc:jP};class KP{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const XP=WO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ZP={kernelName:fc,backendName:"webgl",kernelFunc:XP},YP="return a - b;",JP=WO({opSnippet:YP,packedOpSnippet:YP,supportsComplex:!0,cpuKernelImpl:lO}),QP={kernelName:Zh,backendName:"webgl",kernelFunc:JP};function eB(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.parseAxisParam([i],a.shape),l=_P({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=d.expandShapeToKeepDim(l.shape,o),c=XO({inputs:{x:l},backend:n,attrs:{shape:u}}),h=JP({inputs:{a:a,b:c},backend:n}),p=wz({inputs:{x:h},backend:n}),f=rM({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),m=XO({inputs:{x:f},backend:n,attrs:{shape:u}}),g=XP({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const tB={kernelName:qh,backendName:"webgl",kernelFunc:eB},nB={kernelName:oh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:eB({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=new KP(l.shape[0],l.shape[1],a),c=u.getCustomSetupFunc(i),h=n.runWebGLProgram(u,[l],"int32",c);return o||n.disposeIntermediateTensorInfo(l),h}},rB="return -x;",sB={kernelName:uh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=tO(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=yu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new NO(r.shape,rB):new wO(r.shape,rB),n.runWebGLProgram(s,[r],r.dtype)}},aB=p.nonMaxSuppressionV3Impl,iB={kernelName:hh,backendName:"webgl",kernelFunc:function(e){d.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=aB(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},oB=p.nonMaxSuppressionV4Impl,lB={kernelName:dh,backendName:"webgl",kernelFunc:function(e){d.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=oB(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},uB=p.nonMaxSuppressionV5Impl,cB={kernelName:ph,backendName:"webgl",kernelFunc:function(e){d.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,f=o,m=l,g=u,{selectedIndices:y,selectedScores:b}=uB(c,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class hB{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const dB={kernelName:mh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s,u=r.sizeFromShape(a.shape),c=new hB(u,i,o,l),h=XO({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const p=XO({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function pB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=oL({inputs:{input:r},backend:n}),t=pB({inputs:{x:e},backend:n}),s=kL({inputs:{input:r},backend:n}),a=pB({inputs:{x:s},backend:n}),i=FO({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Rz({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const fB={kernelName:od,backendName:"webgl",kernelFunc:pB},mB={kernelName:fh,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=oL({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=kL({inputs:{input:s},backend:r}),i=pB({inputs:{x:a},backend:r}),o=FO({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Rz({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},gB={kernelName:gh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return Iz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=SL({inputs:t.map(e=>{const t=Iz({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t}),backend:n,attrs:{axis:a}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class yB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=DD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class bB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=DD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=fO("rc",r),l=fO("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const xB=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=yu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bB(s.shape,a,i):new yB(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)},vB={kernelName:yh,backendName:"webgl",kernelFunc:xB},wB=WO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),kB={kernelName:bh,backendName:"webgl",kernelFunc:wB},IB={kernelName:vh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=[],c=r.parseAxisParam(i,a.shape);let h=c;const p=d.getAxesPermutation(h,l);let f,m=a;if(null!=p&&(m=aM({inputs:{x:a},backend:n,attrs:{perm:p}}),h=d.getInnerMostAxes(h.length,l),u.push(m)),d.assertAxesAreInnerMostDims("prod",h,l),n.shouldExecuteOnCPU([m])){const e=n.texData.get(m.dataId).values,{outVals:t,outShape:r,outDtype:s}=nO(m.shape,m.dtype,e,h);f=n.makeTensorInfo(r,s,t)}else{const[e,t]=d.computeOutAndReduceShapes(m.shape,h),s=r.sizeFromShape(t),i=XO({inputs:{x:m},backend:n,attrs:{shape:[-1,s]}}),o=QO(i,Zd(a.dtype),"prod",n);f=XO({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(f);const e=d.expandShapeToKeepDim(f.shape,c);f=XO({inputs:{x:f},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},NB=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=rO(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},CB={kernelName:wh,backendName:"webgl",kernelFunc:NB},SB=VO({opSnippet:"return 1.0 / x;"}),TB={kernelName:Ih,backendName:"webgl",kernelFunc:SB},_B=VO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),$B={kernelName:Nh,backendName:"webgl",kernelFunc:_B},EB=VO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AB={kernelName:Eh,backendName:"webgl",kernelFunc:EB};class RB{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class FB{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const DB={kernelName:_h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=yu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FB(s.shape,l,u,a,i):new RB(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class OB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const MB={kernelName:$h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new OB(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class LB{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const zB={kernelName:Sh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=new LB(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class PB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const BB={kernelName:Th,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new PB(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class VB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=DD(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class WB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=fO("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=DD(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const UB={kernelName:Ah,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,l=r.parseAxisParam(i,a.shape);if(0===o)return AO({inputs:{x:a},backend:n});const u=yu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WB(a.shape,l):new VB(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class HB{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=d.getImageCenter(r,s,a),c=l.toFixed(3),h=u.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const GB={kernelName:cd,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new HB(r.shape,s,a,i);return o.runWebGLProgram(l,[r],r.dtype)}},jB=VO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qB={kernelName:Rh,backendName:"webgl",kernelFunc:jB},KB=VO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:sO}),XB={kernelName:Fh,backendName:"webgl",kernelFunc:KB};class ZB{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=DD(s.length),l=DD(a.length);let u="";1===n?u="i":2===n&&(u="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${u}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const YB={kernelName:Dh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=d.calculateShapes(a,s,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=XO({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=XO({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new ZB(l,o,f.shape.length,m.shape.length,c,p),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=XO({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class JB{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=DD(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const QB={kernelName:Oh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new JB(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Xd(s.dtype,a.dtype))}},eV=VO({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${d.SELU_SCALEALPHA};\n  float scale = ${d.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),tV={kernelName:Mh,backendName:"webgl",kernelFunc:eV},nV=VO({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),rV={kernelName:Vh,backendName:"webgl",kernelFunc:nV},sV=VO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),aV={kernelName:Bh,backendName:"webgl",kernelFunc:sV},iV=VO({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),oV={kernelName:zh,backendName:"webgl",kernelFunc:iV},lV=VO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),uV={kernelName:Ph,backendName:"webgl",kernelFunc:lV},cV=VO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),hV={kernelName:Wh,backendName:"webgl",kernelFunc:cV},dV={kernelName:Gh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=i.reduce((e,t)=>e*t),u=[[0,0]];u.push(...o);for(let r=1+i.length;r<a.shape.length;++r)u.push([0,0]);const c=[],h=xB({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=d.getReshaped(h.shape,i,l,!1),f=d.getPermuted(p.length,i.length,!1),m=d.getReshapedPermuted(h.shape,i,l,!1),g=XO({inputs:{x:h},backend:n,attrs:{shape:p}}),y=aM({inputs:{x:g},backend:n,attrs:{perm:f}}),b=XO({inputs:{x:y},backend:n,attrs:{shape:m}});return c.push(h),c.push(g),c.push(y),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},pV={kernelName:Yh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=d.calculateShapes(a,s,o),p=new ZB(u,l,s.shape.length,a.shape.length,c,[h,1],!1),f=n.runWebGLProgram(p,[a,s,i],a.dtype),m=XO({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},fV={kernelName:jh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.parseAxisParam(o,a.shape)[0],u=d.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[l]=e;const r=tL({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r})}},mV=VO({opSnippet:"return sqrt(x);"}),gV={kernelName:Uh,backendName:"webgl",kernelFunc:mV},yV={kernelName:Xh,backendName:"webgl",kernelFunc:VO({opSnippet:"return x * x;"})},bV="return (a - b) * (a - b);",xV=WO({opSnippet:bV,packedOpSnippet:bV}),vV={kernelName:Kh,backendName:"webgl",kernelFunc:xV},wV={kernelName:ld,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=new wO(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(s,[r],r.dtype)}};class kV{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=DD(n.length),a=DD(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const IV={kernelName:Jh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=l.sliceInfo(s.shape,a,i,o,u,c,h,d,p),v=XO({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(f){const e=tL({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=XO({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,s.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId),t=df(v.shape,v.dtype,e.values),r=oO(x,t,g,m);w=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new kV(m,g,x);w=n.runWebGLProgram(e,[v],v.dtype)}const k=XO({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},NV=VO({opSnippet:"return tan(x);"}),CV={kernelName:Qh,backendName:"webgl",kernelFunc:NV},SV=VO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),TV={kernelName:ed,backendName:"webgl",kernelFunc:SV};class _V{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=DD(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function $V(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype){const e=n.readSync(a.dataId).map(e=>r.decodeString(e)),t=df(a.shape,a.dtype,e),s=uO(t,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const o=new _V(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const EV={kernelName:td,backendName:"webgl",kernelFunc:$V},AV={kernelName:nd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=cO(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},RV={kernelName:sd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;aD(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=dO(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},FV={kernelName:ad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;const e=tL({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=XO({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class DV{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OV=[CP,TP,lM,cM,dM,fM,yM,vM,wM,kM,_M,$M,AM,FM,LM,OM,PM,UM,WM,jM,qM,KM,YM,rL,sL,uL,dL,mL,bL,DO,TL,zL,PL,FL,VL,WL,BL,HL,jL,KL,JL,QL,tz,oz,lz,sz,cz,dz,fz,mz,yz,xz,kz,Nz,Tz,Ez,Fz,Oz,zz,Bz,Uz,Gz,jz,Kz,Zz,Jz,eP,RO,tP,IL,rP,aP,oP,LO,uP,hP,dP,gP,fP,bP,vP,kP,$P,FP,RP,MP,LP,zP,AP,PP,BP,WP,GP,qP,nB,KO,sB,iB,lB,cB,iL,dB,mB,gB,vB,kB,BO,IB,CB,lL,ZP,TB,AB,$B,ZO,DB,MB,zB,BB,UB,GB,qB,XB,YB,QB,tV,rV,aV,oV,uV,nL,tB,hV,dV,pV,fV,gV,yV,vV,wV,IV,QP,sM,CV,TV,EV,AV,iM,RV,FV,{kernelName:id,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,l=a.shape.length,u=[];let c=0;const h=d.getAxesPermutation([c],l);let p=a;null!=h&&(p=aM({inputs:{x:a},backend:n,attrs:{perm:h}}),u.push(p),c=d.getInnerMostAxes(1,l)[0]);const f=d.segment_util.computeOutShape(p.shape,c,o),m=r.sizeFromShape([p.shape[c]]),g=XO({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}});u.push(g);const y=Zd(a.dtype),b=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=d.segment_util.segOpComputeOptimalWindowSize(o,a),c=new DV({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const p=NB({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=$V({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(f),b(h,t,f,s,a)},x=XO({inputs:{x:b(g,"unsortedSegmentSum",i,y,o)},backend:n,attrs:{shape:f}});let v=x;if(null!=h){u.push(x);const e=d.getUndoAxesPermutation(h);v=aM({inputs:{x:v},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},fB];for(const GW of OV)xd(GW);function MV(e,t){return new q(n=>{const r=e.length;if(0===r)return void n.complete();const s=new Array(r);let a=0,i=0;for(let o=0;o<r;o++){const l=ce(e[o]);let u=!1;n.add(l.subscribe({next:e=>{u||(u=!0,i++),s[o]=e},error:e=>n.error(e),complete:()=>{a++,a!==r&&u||(i===r&&n.next(t?t.reduce((e,t,n)=>(e[t]=s[n],e),{}):s),n.complete())}}))}})}const LV=new rr("NgValueAccessor"),zV={provide:LV,useExisting:$e(()=>PV),multi:!0};let PV=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"checked",e)}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci))},e.\u0275dir=xt({type:e,selectors:[["input","type","checkbox","formControlName",""],["input","type","checkbox","formControl",""],["input","type","checkbox","ngModel",""]],hostBindings:function(e,t){1&e&&$a("change",function(e){return t.onChange(e.target.checked)})("blur",function(){return t.onTouched()})},features:[ri([zV])]}),e})();const BV={provide:LV,useExisting:$e(()=>WV),multi:!0},VV=new rr("CompositionEventMode");let WV=(()=>{class e{constructor(e,t,n){this._renderer=e,this._elementRef=t,this._compositionMode=n,this.onChange=e=>{},this.onTouched=()=>{},this._composing=!1,null==this._compositionMode&&(this._compositionMode=!function(){const e=Bo()?Bo().getUserAgent():"";return/android (\d+)/.test(e.toLowerCase())}())}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"value",null==e?"":e)}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_handleInput(e){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(e)}_compositionStart(){this._composing=!0}_compositionEnd(e){this._composing=!1,this._compositionMode&&this.onChange(e)}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci),Ia(VV,8))},e.\u0275dir=xt({type:e,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(e,t){1&e&&$a("input",function(e){return t._handleInput(e.target.value)})("blur",function(){return t.onTouched()})("compositionstart",function(){return t._compositionStart()})("compositionend",function(e){return t._compositionEnd(e.target.value)})},features:[ri([BV])]}),e})();function UV(e){return null==e||0===e.length}function HV(e){return null!=e&&"number"==typeof e.length}const GV=new rr("NgValidators"),jV=new rr("NgAsyncValidators"),qV=/^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;class KV{static min(e){return t=>{if(UV(t.value)||UV(e))return null;const n=parseFloat(t.value);return!isNaN(n)&&n<e?{min:{min:e,actual:t.value}}:null}}static max(e){return t=>{if(UV(t.value)||UV(e))return null;const n=parseFloat(t.value);return!isNaN(n)&&n>e?{max:{max:e,actual:t.value}}:null}}static required(e){return UV(e.value)?{required:!0}:null}static requiredTrue(e){return!0===e.value?null:{required:!0}}static email(e){return UV(e.value)||qV.test(e.value)?null:{email:!0}}static minLength(e){return t=>UV(t.value)||!HV(t.value)?null:t.value.length<e?{minlength:{requiredLength:e,actualLength:t.value.length}}:null}static maxLength(e){return t=>HV(t.value)&&t.value.length>e?{maxlength:{requiredLength:e,actualLength:t.value.length}}:null}static pattern(e){if(!e)return KV.nullValidator;let t,n;return"string"==typeof e?(n="","^"!==e.charAt(0)&&(n+="^"),n+=e,"$"!==e.charAt(e.length-1)&&(n+="$"),t=new RegExp(n)):(n=e.toString(),t=e),e=>{if(UV(e.value))return null;const r=e.value;return t.test(r)?null:{pattern:{requiredPattern:n,actualValue:r}}}}static nullValidator(e){return null}static compose(e){if(!e)return null;const t=e.filter(XV);return 0==t.length?null:function(e){return YV(JV(e,t))}}static composeAsync(e){if(!e)return null;const t=e.filter(XV);return 0==t.length?null:function(e){return function(...e){if(1===e.length){const t=e[0];if(L(t))return MV(t,null);if(z(t)&&Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);return MV(e.map(e=>t[e]),e)}}if("function"==typeof e[e.length-1]){const t=e.pop();return MV(e=1===e.length&&L(e[0])?e[0]:e,null).pipe(ee(e=>t(...e)))}return MV(e,null)}(JV(e,t).map(ZV)).pipe(ee(YV))}}}function XV(e){return null!=e}function ZV(e){const t=_a(e)?ce(e):e;return t,t}function YV(e){let t={};return e.forEach(e=>{t=null!=e?Object.assign(Object.assign({},t),e):t}),0===Object.keys(t).length?null:t}function JV(e,t){return t.map(t=>t(e))}function QV(e){return e.map(e=>function(e){return!e.validate}(e)?e:t=>e.validate(t))}function eW(e){return null!=e?KV.compose(QV(e)):null}function tW(e){return null!=e?KV.composeAsync(QV(e)):null}function nW(e,t){return null===e?[t]:Array.isArray(e)?[...e,t]:[e,t]}let rW=(()=>{class e{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(e){this._rawValidators=e||[],this._composedValidatorFn=eW(this._rawValidators)}_setAsyncValidators(e){this._rawAsyncValidators=e||[],this._composedAsyncValidatorFn=tW(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(e){this._onDestroyCallbacks.push(e)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(e=>e()),this._onDestroyCallbacks=[]}reset(e){this.control&&this.control.reset(e)}hasError(e,t){return!!this.control&&this.control.hasError(e,t)}getError(e,t){return this.control?this.control.getError(e,t):null}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=xt({type:e}),e})(),sW=(()=>{class e extends rW{get formDirective(){return null}get path(){return null}}return e.\u0275fac=function(t){return aW(t||e)},e.\u0275dir=xt({type:e,features:[pa]}),e})();const aW=er(sW);class iW extends rW{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}let oW=(()=>{class e extends class{constructor(e){this._cd=e}is(e){var t,n;return!!(null===(n=null===(t=this._cd)||void 0===t?void 0:t.control)||void 0===n?void 0:n[e])}}{constructor(e){super(e)}}return e.\u0275fac=function(t){return new(t||e)(Ia(iW,2))},e.\u0275dir=xt({type:e,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(e,t){2&e&&Oa("ng-untouched",t.is("untouched"))("ng-touched",t.is("touched"))("ng-pristine",t.is("pristine"))("ng-dirty",t.is("dirty"))("ng-valid",t.is("valid"))("ng-invalid",t.is("invalid"))("ng-pending",t.is("pending"))},features:[pa]}),e})();const lW={provide:LV,useExisting:$e(()=>uW),multi:!0};let uW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"value",null==e?"":e)}registerOnChange(e){this.onChange=t=>{e(""==t?null:parseFloat(t))}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci))},e.\u0275dir=xt({type:e,selectors:[["input","type","number","formControlName",""],["input","type","number","formControl",""],["input","type","number","ngModel",""]],hostBindings:function(e,t){1&e&&$a("input",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},features:[ri([lW])]}),e})();const cW={provide:LV,useExisting:$e(()=>dW),multi:!0};let hW=(()=>{class e{constructor(){this._accessors=[]}add(e,t){this._accessors.push([e,t])}remove(e){for(let t=this._accessors.length-1;t>=0;--t)if(this._accessors[t][1]===e)return void this._accessors.splice(t,1)}select(e){this._accessors.forEach(t=>{this._isSameGroup(t,e)&&t[1]!==e&&t[1].fireUncheck(e.value)})}_isSameGroup(e,t){return!!e[0].control&&e[0]._parent===t._control._parent&&e[1].name===t.name}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),dW=(()=>{class e{constructor(e,t,n,r){this._renderer=e,this._elementRef=t,this._registry=n,this._injector=r,this.onChange=()=>{},this.onTouched=()=>{}}ngOnInit(){this._control=this._injector.get(iW),this._checkName(),this._registry.add(this._control,this)}ngOnDestroy(){this._registry.remove(this)}writeValue(e){this._state=e===this.value,this._renderer.setProperty(this._elementRef.nativeElement,"checked",this._state)}registerOnChange(e){this._fn=e,this.onChange=()=>{e(this.value),this._registry.select(this)}}fireUncheck(e){this.writeValue(e)}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_checkName(){!this.name&&this.formControlName&&(this.name=this.formControlName)}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci),Ia(hW),Ia(ha))},e.\u0275dir=xt({type:e,selectors:[["input","type","radio","formControlName",""],["input","type","radio","formControl",""],["input","type","radio","ngModel",""]],hostBindings:function(e,t){1&e&&$a("change",function(){return t.onChange()})("blur",function(){return t.onTouched()})},inputs:{name:"name",formControlName:"formControlName",value:"value"},features:[ri([cW])]}),e})();const pW={provide:LV,useExisting:$e(()=>fW),multi:!0};let fW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"value",parseFloat(e))}registerOnChange(e){this.onChange=t=>{e(""==t?null:parseFloat(t))}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci))},e.\u0275dir=xt({type:e,selectors:[["input","type","range","formControlName",""],["input","type","range","formControl",""],["input","type","range","ngModel",""]],hostBindings:function(e,t){1&e&&$a("change",function(e){return t.onChange(e.target.value)})("input",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},features:[ri([pW])]}),e})();const mW={provide:LV,useExisting:$e(()=>gW),multi:!0};let gW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this._optionMap=new Map,this._idCounter=0,this.onChange=e=>{},this.onTouched=()=>{},this._compareWith=Object.is}set compareWith(e){this._compareWith=e}writeValue(e){this.value=e;const t=this._getOptionId(e);null==t&&this._renderer.setProperty(this._elementRef.nativeElement,"selectedIndex",-1);const n=function(e,t){return null==e?`${t}`:(t&&"object"==typeof t&&(t="Object"),`${e}: ${t}`.slice(0,50))}(t,e);this._renderer.setProperty(this._elementRef.nativeElement,"value",n)}registerOnChange(e){this.onChange=t=>{this.value=this._getOptionValue(t),e(this.value)}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_registerOption(){return(this._idCounter++).toString()}_getOptionId(e){for(const t of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(t),e))return t;return null}_getOptionValue(e){const t=function(e){return e.split(":")[0]}(e);return this._optionMap.has(t)?this._optionMap.get(t):e}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci))},e.\u0275dir=xt({type:e,selectors:[["select","formControlName","",3,"multiple",""],["select","formControl","",3,"multiple",""],["select","ngModel","",3,"multiple",""]],hostBindings:function(e,t){1&e&&$a("change",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},inputs:{compareWith:"compareWith"},features:[ri([mW])]}),e})();const yW={provide:LV,useExisting:$e(()=>bW),multi:!0};let bW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this._optionMap=new Map,this._idCounter=0,this.onChange=e=>{},this.onTouched=()=>{},this._compareWith=Object.is}set compareWith(e){this._compareWith=e}writeValue(e){let t;if(this.value=e,Array.isArray(e)){const n=e.map(e=>this._getOptionId(e));t=(e,t)=>{e._setSelected(n.indexOf(t.toString())>-1)}}else t=(e,t)=>{e._setSelected(!1)};this._optionMap.forEach(t)}registerOnChange(e){this.onChange=t=>{const n=[];if(void 0!==t.selectedOptions){const e=t.selectedOptions;for(let t=0;t<e.length;t++){const r=e.item(t),s=this._getOptionValue(r.value);n.push(s)}}else{const e=t.options;for(let t=0;t<e.length;t++){const r=e.item(t);if(r.selected){const e=this._getOptionValue(r.value);n.push(e)}}}this.value=n,e(n)}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_registerOption(e){const t=(this._idCounter++).toString();return this._optionMap.set(t,e),t}_getOptionId(e){for(const t of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(t)._value,e))return t;return null}_getOptionValue(e){const t=function(e){return e.split(":")[0]}(e);return this._optionMap.has(t)?this._optionMap.get(t)._value:e}}return e.\u0275fac=function(t){return new(t||e)(Ia(di),Ia(ci))},e.\u0275dir=xt({type:e,selectors:[["select","multiple","","formControlName",""],["select","multiple","","formControl",""],["select","multiple","","ngModel",""]],hostBindings:function(e,t){1&e&&$a("change",function(e){return t.onChange(e.target)})("blur",function(){return t.onTouched()})},inputs:{compareWith:"compareWith"},features:[ri([yW])]}),e})();function xW(e,t){e.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(t)})}function vW(e,t){e._pendingDirty&&e.markAsDirty(),e.setValue(e._pendingValue,{emitModelToViewChange:!1}),t.viewToModelUpdate(e._pendingValue),e._pendingChange=!1}const wW=[PV,fW,uW,gW,bW,dW];function kW(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const IW="VALID",NW="INVALID",CW="PENDING",SW="DISABLED";function TW(e){return(AW(e)?e.validators:e)||null}function _W(e){return Array.isArray(e)?eW(e):e||null}function $W(e,t){return(AW(t)?t.asyncValidators:e)||null}function EW(e){return Array.isArray(e)?tW(e):e||null}function AW(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}class RW{constructor(e,t){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=e,this._rawAsyncValidators=t,this._composedValidatorFn=_W(this._rawValidators),this._composedAsyncValidatorFn=EW(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(e){this._rawValidators=this._composedValidatorFn=e}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(e){this._rawAsyncValidators=this._composedAsyncValidatorFn=e}get parent(){return this._parent}get valid(){return this.status===IW}get invalid(){return this.status===NW}get pending(){return this.status==CW}get disabled(){return this.status===SW}get enabled(){return this.status!==SW}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(e){this._rawValidators=e,this._composedValidatorFn=_W(e)}setAsyncValidators(e){this._rawAsyncValidators=e,this._composedAsyncValidatorFn=EW(e)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(e={}){this.touched=!0,this._parent&&!e.onlySelf&&this._parent.markAsTouched(e)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(e=>e.markAllAsTouched())}markAsUntouched(e={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(e=>{e.markAsUntouched({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}markAsDirty(e={}){this.pristine=!1,this._parent&&!e.onlySelf&&this._parent.markAsDirty(e)}markAsPristine(e={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(e=>{e.markAsPristine({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}markAsPending(e={}){this.status=CW,!1!==e.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!e.onlySelf&&this._parent.markAsPending(e)}disable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=SW,this.errors=null,this._forEachChild(t=>{t.disable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this._updateValue(),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!0))}enable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=IW,this._forEachChild(t=>{t.enable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!1))}_updateAncestors(e){this._parent&&!e.onlySelf&&(this._parent.updateValueAndValidity(e),e.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(e){this._parent=e}updateValueAndValidity(e={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),this.status!==IW&&this.status!==CW||this._runAsyncValidator(e.emitEvent)),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!e.onlySelf&&this._parent.updateValueAndValidity(e)}_updateTreeValidity(e={emitEvent:!0}){this._forEachChild(t=>t._updateTreeValidity(e)),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?SW:IW}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(e){if(this.asyncValidator){this.status=CW,this._hasOwnPendingAsyncValidator=!0;const t=ZV(this.asyncValidator(this));this._asyncValidationSubscription=t.subscribe(t=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(t,{emitEvent:e})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(e,t={}){this.errors=e,this._updateControlsErrors(!1!==t.emitEvent)}get(e){return function(e,t,n){if(null==t)return null;if(Array.isArray(t)||(t=t.split(".")),Array.isArray(t)&&0===t.length)return null;let r=e;return t.forEach(e=>{r=r instanceof DW?r.controls.hasOwnProperty(e)?r.controls[e]:null:r instanceof OW&&r.at(e)||null}),r}(this,e)}getError(e,t){const n=t?this.get(t):this;return n&&n.errors?n.errors[e]:null}hasError(e,t){return!!this.getError(e,t)}get root(){let e=this;for(;e._parent;)e=e._parent;return e}_updateControlsErrors(e){this.status=this._calculateStatus(),e&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(e)}_initObservables(){this.valueChanges=new ji,this.statusChanges=new ji}_calculateStatus(){return this._allControlsDisabled()?SW:this.errors?NW:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(CW)?CW:this._anyControlsHaveStatus(NW)?NW:IW}_anyControlsHaveStatus(e){return this._anyControls(t=>t.status===e)}_anyControlsDirty(){return this._anyControls(e=>e.dirty)}_anyControlsTouched(){return this._anyControls(e=>e.touched)}_updatePristine(e={}){this.pristine=!this._anyControlsDirty(),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}_updateTouched(e={}){this.touched=this._anyControlsTouched(),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}_isBoxedValue(e){return"object"==typeof e&&null!==e&&2===Object.keys(e).length&&"value"in e&&"disabled"in e}_registerOnCollectionChange(e){this._onCollectionChange=e}_setUpdateStrategy(e){AW(e)&&null!=e.updateOn&&(this._updateOn=e.updateOn)}_parentMarkedDirty(e){return!e&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class FW extends RW{constructor(e=null,t,n){super(TW(t),$W(n,t)),this._onChange=[],this._applyFormState(e),this._setUpdateStrategy(t),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}setValue(e,t={}){this.value=this._pendingValue=e,this._onChange.length&&!1!==t.emitModelToViewChange&&this._onChange.forEach(e=>e(this.value,!1!==t.emitViewToModelChange)),this.updateValueAndValidity(t)}patchValue(e,t={}){this.setValue(e,t)}reset(e=null,t={}){this._applyFormState(e),this.markAsPristine(t),this.markAsUntouched(t),this.setValue(this.value,t),this._pendingChange=!1}_updateValue(){}_anyControls(e){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(e){this._onChange.push(e)}_unregisterOnChange(e){kW(this._onChange,e)}registerOnDisabledChange(e){this._onDisabledChange.push(e)}_unregisterOnDisabledChange(e){kW(this._onDisabledChange,e)}_forEachChild(e){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(e){this._isBoxedValue(e)?(this.value=this._pendingValue=e.value,e.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=e}}class DW extends RW{constructor(e,t,n){super(TW(t),$W(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}registerControl(e,t){return this.controls[e]?this.controls[e]:(this.controls[e]=t,t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange),t)}addControl(e,t){this.registerControl(e,t),this.updateValueAndValidity(),this._onCollectionChange()}removeControl(e){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],this.updateValueAndValidity(),this._onCollectionChange()}setControl(e,t){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],t&&this.registerControl(e,t),this.updateValueAndValidity(),this._onCollectionChange()}contains(e){return this.controls.hasOwnProperty(e)&&this.controls[e].enabled}setValue(e,t={}){this._checkAllValuesPresent(e),Object.keys(e).forEach(n=>{this._throwIfControlMissing(n),this.controls[n].setValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(Object.keys(e).forEach(n=>{this.controls[n]&&this.controls[n].patchValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e={},t={}){this._forEachChild((n,r)=>{n.reset(e[r],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this._reduceChildren({},(e,t,n)=>(e[n]=t instanceof FW?t.value:t.getRawValue(),e))}_syncPendingControls(){let e=this._reduceChildren(!1,(e,t)=>!!t._syncPendingControls()||e);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!Object.keys(this.controls).length)throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.controls[e])throw new Error(`Cannot find form control with name: ${e}.`)}_forEachChild(e){Object.keys(this.controls).forEach(t=>{const n=this.controls[t];n&&e(n,t)})}_setUpControls(){this._forEachChild(e=>{e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(e){for(const t of Object.keys(this.controls)){const n=this.controls[t];if(this.contains(t)&&e(n))return!0}return!1}_reduceValue(){return this._reduceChildren({},(e,t,n)=>((t.enabled||this.disabled)&&(e[n]=t.value),e))}_reduceChildren(e,t){let n=e;return this._forEachChild((e,r)=>{n=t(n,e,r)}),n}_allControlsDisabled(){for(const e of Object.keys(this.controls))if(this.controls[e].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control with name: '${n}'.`)})}}class OW extends RW{constructor(e,t,n){super(TW(t),$W(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}at(e){return this.controls[e]}push(e){this.controls.push(e),this._registerControl(e),this.updateValueAndValidity(),this._onCollectionChange()}insert(e,t){this.controls.splice(e,0,t),this._registerControl(t),this.updateValueAndValidity()}removeAt(e){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),this.updateValueAndValidity()}setControl(e,t){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),t&&(this.controls.splice(e,0,t),this._registerControl(t)),this.updateValueAndValidity(),this._onCollectionChange()}get length(){return this.controls.length}setValue(e,t={}){this._checkAllValuesPresent(e),e.forEach((e,n)=>{this._throwIfControlMissing(n),this.at(n).setValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(e.forEach((e,n)=>{this.at(n)&&this.at(n).patchValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e=[],t={}){this._forEachChild((n,r)=>{n.reset(e[r],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this.controls.map(e=>e instanceof FW?e.value:e.getRawValue())}clear(){this.controls.length<1||(this._forEachChild(e=>e._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity())}_syncPendingControls(){let e=this.controls.reduce((e,t)=>!!t._syncPendingControls()||e,!1);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!this.controls.length)throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.at(e))throw new Error(`Cannot find form control at index ${e}`)}_forEachChild(e){this.controls.forEach((t,n)=>{e(t,n)})}_updateValue(){this.value=this.controls.filter(e=>e.enabled||this.disabled).map(e=>e.value)}_anyControls(e){return this.controls.some(t=>t.enabled&&e(t))}_setUpControls(){this._forEachChild(e=>this._registerControl(e))}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control at index: ${n}.`)})}_allControlsDisabled(){for(const e of this.controls)if(e.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(e){e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)}}const MW={provide:iW,useExisting:$e(()=>zW)},LW=(()=>Promise.resolve(null))();let zW=(()=>{class e extends iW{constructor(e,t,n,r){super(),this.control=new FW,this._registered=!1,this.update=new ji,this._parent=e,this._setValidators(t),this._setAsyncValidators(n),this.valueAccessor=function(e,t){if(!t)return null;let n,r,s;return Array.isArray(t),t.forEach(e=>{var t;e.constructor===WV?n=e:(t=e,wW.some(e=>t.constructor===e)?r=e:s=e)}),s||r||n||null}(0,r)}ngOnChanges(e){this._checkForErrors(),this._registered||this._setUpControl(),"isDisabled"in e&&this._updateDisabled(e),function(e,t){if(!e.hasOwnProperty("model"))return!1;const n=e.model;return!!n.isFirstChange()||!Object.is(t,n.currentValue)}(e,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._parent?[...this._parent.path,this.name]:[this.name]}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(e){this.viewModel=e,this.update.emit(e)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!(!this.options||!this.options.standalone)}_setUpStandalone(){var e,t;(function(e,t,n){const r=function(e){return e._rawValidators}(e);null!==t.validator?e.setValidators(nW(r,t.validator)):"function"==typeof r&&e.setValidators([r]);const s=function(e){return e._rawAsyncValidators}(e);null!==t.asyncValidator?e.setAsyncValidators(nW(s,t.asyncValidator)):"function"==typeof s&&e.setAsyncValidators([s]);{const n=()=>e.updateValueAndValidity();xW(t._rawValidators,n),xW(t._rawAsyncValidators,n)}})(e=this.control,t=this),t.valueAccessor.writeValue(e.value),function(e,t){t.valueAccessor.registerOnChange(n=>{e._pendingValue=n,e._pendingChange=!0,e._pendingDirty=!0,"change"===e.updateOn&&vW(e,t)})}(e,t),function(e,t){const n=(e,n)=>{t.valueAccessor.writeValue(e),n&&t.viewToModelUpdate(e)};e.registerOnChange(n),t._registerOnDestroy(()=>{e._unregisterOnChange(n)})}(e,t),function(e,t){t.valueAccessor.registerOnTouched(()=>{e._pendingTouched=!0,"blur"===e.updateOn&&e._pendingChange&&vW(e,t),"submit"!==e.updateOn&&e.markAsTouched()})}(e,t),function(e,t){if(t.valueAccessor.setDisabledState){const n=e=>{t.valueAccessor.setDisabledState(e)};e.registerOnDisabledChange(n),t._registerOnDestroy(()=>{e._unregisterOnDisabledChange(n)})}}(e,t),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),this._isStandalone()}_updateValue(e){LW.then(()=>{this.control.setValue(e,{emitViewToModelChange:!1})})}_updateDisabled(e){const t=e.isDisabled.currentValue,n=""===t||t&&"false"!==t;LW.then(()=>{n&&!this.control.disabled?this.control.disable():!n&&this.control.disabled&&this.control.enable()})}}return e.\u0275fac=function(t){return new(t||e)(Ia(sW,9),Ia(GV,10),Ia(jV,10),Ia(LV,10))},e.\u0275dir=xt({type:e,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:["disabled","isDisabled"],model:["ngModel","model"],options:["ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[ri([MW]),pa,Rt]}),e})(),PW=(()=>{class e{}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)}}),e})(),BW=(()=>{class e{}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)},providers:[hW],imports:[PW]}),e})(),VW=(()=>{class e{constructor(){this.houseFeature={area:"60076",houseType:"condo",rooms:7,bedRooms:3,bedRoomsBsmt:0,fullBath:2,halfBath:0,approxSquFeet:1200,garageType:"attached",garageSpaces:2,parkingSpaces:0}}ngOnInit(){this.loadModel()}setHousePrice(e){console.log("val",e)}refreshPrice(){this.housePrice=this.tempPrice}getPredictedPrice(){this.housePrice="0.0",this.getPredictedPriceCall(this.tempPrice)}getPredictedPriceCall(e){var t=this.getPrice(this.houseFeature);this.housePrice=t}loadModel(){return e=this,void 0,n=function*(){var e;this.model=yield(null==e&&(e={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=i.getLoadHandlers(e,t);if(0===n.length)n.push(i.browserHTTPRequest(e,t));else if(n.length>1)throw new jw(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new jw("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,l=aN(AN(s),void 0,o),u=r.trainingConfig;if(null!=u&&l.loadTrainingConfig(u),null!=r.userDefinedMetadata&&l.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new jw("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=i.decodeWeights(e,t),r={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);l.loadWeights(e,a),null!=l.optimizer&&t.length>0&&await l.optimizer.setWeights(t),rm(e),rm(t.map(e=>e.tensor))}return l}(e,0,t)}("assets/model.json",e)),console.log(this.model.summary())},new((t=void 0)||(t=Promise))(function(r,s){function a(e){try{o(n.next(e))}catch(t){s(t)}}function i(e){try{o(n.throw(e))}catch(t){s(t)}}function o(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(a,i)}o((n=n.apply(e,[])).next())});var e,t,n}getPrice(e){try{console.log("getPrice Enter XXXXXXXXXXXXXXX");var t=this.getFeatureArray(e);console.log(t);var n=cy(t,[1,38]);console.log("after setting up input"),console.log(n.toString());var r=this.model.predict(n);console.log("after inference"),console.log(r.toString()),console.log(r.toString(!0));var s=r.flatten();console.log(s.toString(!0));var a=s.dataSync()[0];return a*=1e6,(a=1e4*Math.round(a/1e4)).toString()}catch(i){console.log(i)}}getFeatureArray(e){var t='{"SFH":0,"Condo":1,"Duplex":2,"Townhouse":3,"New":4,"Recent":5,"20A":6,"19A":7,"19B":8,"19C":9,"19D":10,"Pre1900":11,"Area":12,"Rooms":13,"FullBaths":14,"HalfBaths":15,"BsmtBth":16,"Beds":17,"BsmtBeds":18,"GarageSpaces":19, "60002":20,"60025":21,"60026":22,"60029":23,"60035":24,"60053":25,"60062":26,"60067":27,"60076":28,"60077":29,"60091":30,"60201":31,"60202":32,"60203":33,"60625":34,"60626":35,"60638":36,"63104":37}';console.log(t);var n=JSON.parse(t),r=Array(38).fill(0);return this.setFeature(n,r,e.area,1),this.setFeature(n,r,e.houseType,1),this.setFeature(n,r,"Rooms",e.rooms),this.setFeature(n,r,"Beds",e.bedRooms),this.setFeature(n,r,"BsmtBeds",e.bedRoomsBsmt),this.setFeature(n,r,"FullBaths",e.fullBath),this.setFeature(n,r,"HalfBaths",e.halfBath),this.setFeature(n,r,"Area",e.approxSquFeet/1e3),this.setFeature(n,r,"GarageSpaces",e.garageSpaces),r}setFeature(e,t,n,r){t[e[n]]=r}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=pt({type:e,selectors:[["app-houseprice"]],decls:38,vars:11,consts:[["fxLayout","column"],["placeholder","area",3,"ngModel","ngModelChange"],["placeholder","SFH",3,"ngModel","ngModelChange"],["placeholder","rooms",3,"ngModel","ngModelChange"],["placeholder","bed rooms",3,"ngModel","ngModelChange"],["md-button","",3,"click"]],template:function(e,t){1&e&&(Sa(0,"div",0),Sa(1,"div"),Ba(2," Prediced Price: "),Sa(3,"input",1),$a("ngModelChange",function(e){return t.housePrice=e}),Ta(),Ta(),Sa(4,"div"),Ba(5," Zip: "),Sa(6,"input",1),$a("ngModelChange",function(e){return t.houseFeature.area=e}),Ta(),Ta(),Sa(7,"div"),Ba(8," Type of prop: "),Sa(9,"input",2),$a("ngModelChange",function(e){return t.houseFeature.houseType=e}),Ta(),Ta(),Sa(10,"div"),Ba(11," Rooms: "),Sa(12,"input",3),$a("ngModelChange",function(e){return t.houseFeature.rooms=e}),Ta(),Ta(),Sa(13,"div"),Ba(14," Bed rooms: "),Sa(15,"input",4),$a("ngModelChange",function(e){return t.houseFeature.bedRooms=e}),Ta(),Ta(),Sa(16,"div"),Ba(17," Bsmnt Bed rooms: "),Sa(18,"input",4),$a("ngModelChange",function(e){return t.houseFeature.bedRoomsBsmt=e}),Ta(),Ta(),Sa(19,"div"),Ba(20," full baths: "),Sa(21,"input",3),$a("ngModelChange",function(e){return t.houseFeature.fullBath=e}),Ta(),Ta(),Sa(22,"div"),Ba(23," half baths: "),Sa(24,"input",3),$a("ngModelChange",function(e){return t.houseFeature.halfBath=e}),Ta(),Ta(),Sa(25,"div"),Ba(26," sq feet: "),Sa(27,"input",3),$a("ngModelChange",function(e){return t.houseFeature.approxSquFeet=e}),Ta(),Ta(),Sa(28,"div"),Ba(29," garage spaces: "),Sa(30,"input",3),$a("ngModelChange",function(e){return t.houseFeature.garageSpaces=e}),Ta(),Ta(),Sa(31,"div"),Ba(32," parking spaces: "),Sa(33,"input",3),$a("ngModelChange",function(e){return t.houseFeature.parkingSpaces=e}),Ta(),Ta(),Sa(34,"button",5),$a("click",function(){return t.getPredictedPrice()}),Ba(35,"Get Price"),Ta(),Sa(36,"button",5),$a("click",function(){return t.refreshPrice()}),Ba(37,"RefreshPrice"),Ta(),Ta()),2&e&&(os(3),Na("ngModel",t.housePrice),os(3),Na("ngModel",t.houseFeature.area),os(3),Na("ngModel",t.houseFeature.houseType),os(3),Na("ngModel",t.houseFeature.rooms),os(3),Na("ngModel",t.houseFeature.bedRooms),os(3),Na("ngModel",t.houseFeature.bedRoomsBsmt),os(3),Na("ngModel",t.houseFeature.fullBath),os(3),Na("ngModel",t.houseFeature.halfBath),os(3),Na("ngModel",t.houseFeature.approxSquFeet),os(3),Na("ngModel",t.houseFeature.garageSpaces),os(3),Na("ngModel",t.houseFeature.parkingSpaces))},directives:[WV,oW,zW],styles:[""]}),e})(),WW=(()=>{class e{constructor(){this.title="housePrice"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=pt({type:e,selectors:[["app-root"]],decls:4,vars:1,consts:[[2,"text-align","center"]],template:function(e,t){1&e&&(Sa(0,"div",0),Sa(1,"h1"),Ba(2),Ta(),Ta(),Sa(3,"app-houseprice",undefined,undefined),Ta()),2&e&&(os(2),Va(" Welcome to ",t.title,"! "))},directives:[VW],styles:[""]}),e})(),UW=(()=>{class e{}return e.\u0275mod=yt({type:e,bootstrap:[WW]}),e.\u0275inj=Le({factory:function(t){return new(t||e)},providers:[],imports:[[xl,BW]]}),e})();(function(){if(_o)throw new Error("Cannot enable prod mode after platform setup.");To=!1})(),yl().bootstrapModule(UW).catch(e=>console.error(e))},zn8P:function(e,t){function n(e){return Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="zn8P"}},[[0,0]]]);