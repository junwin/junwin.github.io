(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(e,t,n){e.exports=n("zUnb")},1:function(e,t){},2:function(e,t){},3:function(e,t){},"34t7":function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},4:function(e,t){},5:function(e,t){},"5vwH":function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n=s[a]=(n^=n>>>15)^(e^=e>>>12),t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=0==(n=o[127&a]^=r+(i=i+1640531527|0))?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},6:function(e,t){},"9/Hw":function(e,t,n){var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,y(a.random(),s),e.exports){e.exports=p;try{i=n(3)}catch(x){}}else void 0===(r=(function(){return p}).call(t,n,t,e))||(e.exports=r)}([],Math)},B9Yq:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},EhIR:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})},PkQR:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],r[s]=n^=(e^=e<<13)^e<<9,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},YSVl:function(e,t,n){var r=n("EhIR"),s=n("uDiL"),a=n("pJ6O"),i=n("yuCN"),o=n("euyF"),l=n("ie1u"),u=n("pJ3+");u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},YWYm:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},YuTi:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},euyF:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n=s[a]=(n^=n>>>15)^(e^=e>>>12),t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=0==(n=o[127&a]^=r+(i=i+1640531527|0))?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"f+t/":function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},ie1u:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},oIJX:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},pDBr:function(e,t,n){var r=n("YWYm"),s=n("f+t/"),a=n("34t7"),i=n("PkQR"),o=n("5vwH"),l=n("oIJX"),u=n("9/Hw");u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},"pJ3+":function(e,t,n){var r;!function(s,a){var i,o=(0,eval)("this"),l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,y(a.random(),s),e.exports){e.exports=p;try{i=n(4)}catch(x){}}else void 0===(r=(function(){return p}).call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},uDiL:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},yuCN:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],r[s]=n^=(e^=e<<13)^e<<9,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},zUnb:function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"shuffle",function(){return tu}),n.d(r,"shuffleCombo",function(){return nu}),n.d(r,"clamp",function(){return ru}),n.d(r,"nearestLargerEven",function(){return su}),n.d(r,"sum",function(){return au}),n.d(r,"randUniform",function(){return iu}),n.d(r,"distSquared",function(){return ou}),n.d(r,"assert",function(){return lu}),n.d(r,"assertShapesMatch",function(){return uu}),n.d(r,"assertNonNull",function(){return cu}),n.d(r,"flatten",function(){return hu}),n.d(r,"sizeFromShape",function(){return du}),n.d(r,"isScalarShape",function(){return pu}),n.d(r,"arraysEqual",function(){return fu}),n.d(r,"isInt",function(){return mu}),n.d(r,"tanh",function(){return gu}),n.d(r,"sizeToSquarishShape",function(){return yu}),n.d(r,"createShuffledIndices",function(){return bu}),n.d(r,"rightPad",function(){return xu}),n.d(r,"repeatedTry",function(){return vu}),n.d(r,"inferFromImplicitShape",function(){return wu}),n.d(r,"parseAxisParam",function(){return ku}),n.d(r,"squeezeShape",function(){return Iu}),n.d(r,"getTypedArrayFromDType",function(){return Nu}),n.d(r,"getArrayFromDType",function(){return Cu}),n.d(r,"checkConversionForErrors",function(){return Su}),n.d(r,"isValidDtype",function(){return _u}),n.d(r,"hasEncodingLoss",function(){return Tu}),n.d(r,"isTypedArray",function(){return $u}),n.d(r,"bytesPerElement",function(){return Eu}),n.d(r,"bytesFromStringArray",function(){return Au}),n.d(r,"isString",function(){return Ru}),n.d(r,"isBoolean",function(){return Fu}),n.d(r,"isNumber",function(){return Du}),n.d(r,"inferDtype",function(){return Ou}),n.d(r,"isFunction",function(){return Mu}),n.d(r,"nearestDivisor",function(){return Lu}),n.d(r,"computeStrides",function(){return zu}),n.d(r,"toNestedArray",function(){return Bu}),n.d(r,"makeOnesTypedArray",function(){return Vu}),n.d(r,"makeZerosTypedArray",function(){return Wu}),n.d(r,"makeZerosNestedTypedArray",function(){return Uu}),n.d(r,"assertNonNegativeIntegerDimensions",function(){return Hu}),n.d(r,"locToIndex",function(){return Gu}),n.d(r,"indexToLoc",function(){return ju}),n.d(r,"isPromise",function(){return qu}),n.d(r,"createScalarValue",function(){return ep}),n.d(r,"toTypedArray",function(){return tp}),n.d(r,"now",function(){return np}),n.d(r,"fetch",function(){return rp}),n.d(r,"encodeString",function(){return sp}),n.d(r,"decodeString",function(){return ap});var s={};n.r(s),n.d(s,"makeTypesMatch",function(){return $p}),n.d(s,"assertTypesMatch",function(){return Ep}),n.d(s,"isTensorInList",function(){return Ap}),n.d(s,"getTensorsInContainer",function(){return Rp});var a={};n.r(a),n.d(a,"isMobile",function(){return Bp}),n.d(a,"isBrowser",function(){return Vp});var i={};n.r(i),n.d(i,"copyModel",function(){return Bf}),n.d(i,"listModels",function(){return zf}),n.d(i,"moveModel",function(){return Vf}),n.d(i,"removeModel",function(){return Pf}),n.d(i,"browserFiles",function(){return Zf}),n.d(i,"browserHTTPRequest",function(){return am}),n.d(i,"concatenateArrayBuffers",function(){return sf}),n.d(i,"decodeWeights",function(){return ef}),n.d(i,"encodeWeights",function(){return Qp}),n.d(i,"fromMemory",function(){return lm}),n.d(i,"getLoadHandlers",function(){return pf}),n.d(i,"getModelArtifactsInfoForJSON",function(){return of}),n.d(i,"getSaveHandlers",function(){return df}),n.d(i,"http",function(){return sm}),n.d(i,"isHTTPScheme",function(){return nm}),n.d(i,"loadWeights",function(){return Qf}),n.d(i,"registerLoadRouter",function(){return hf}),n.d(i,"registerSaveRouter",function(){return cf}),n.d(i,"weightsLoaderFactory",function(){return em}),n.d(i,"withSaveHandler",function(){return um});var o={};n.r(o),n.d(o,"toPixels",function(){return hm}),n.d(o,"fromPixels",function(){return dm});var l={};n.r(l),n.d(l,"assertParamsValid",function(){return pm}),n.d(l,"maskToAxes",function(){return fm}),n.d(l,"computeOutShape",function(){return mm}),n.d(l,"stridesWithElidedDims",function(){return gm}),n.d(l,"getNormalizedAxes",function(){return xm}),n.d(l,"startIndicesWithElidedDims",function(){return vm}),n.d(l,"stopIndicesWithElidedDims",function(){return wm}),n.d(l,"stridesForAxis",function(){return km}),n.d(l,"startForAxis",function(){return Im}),n.d(l,"stopForAxis",function(){return Nm}),n.d(l,"isSliceContinous",function(){return Cm}),n.d(l,"computeFlatOffset",function(){return Sm}),n.d(l,"parseSliceParams",function(){return _m}),n.d(l,"sliceInfo",function(){return Tm});var u={};n.r(u),n.d(u,"Serializable",function(){return $m}),n.d(u,"SerializationMap",function(){return Em}),n.d(u,"registerClass",function(){return Am});var c={};n.r(c),n.d(c,"conv2d",function(){return ub}),n.d(c,"depthwiseConv2d",function(){return db}),n.d(c,"matMul",function(){return fb});var h={};n.r(h),n.d(h,"segOpComputeOptimalWindowSize",function(){return Dx}),n.d(h,"computeOutShape",function(){return Ox}),n.d(h,"collectGatherOpShapeInfo",function(){return Mx});var d={};n.r(d),n.d(d,"axesAreInnerMostDims",function(){return ey}),n.d(d,"combineLocations",function(){return ty}),n.d(d,"computeOutAndReduceShapes",function(){return ny}),n.d(d,"expandShapeToKeepDim",function(){return ry}),n.d(d,"assertAxesAreInnerMostDims",function(){return sy}),n.d(d,"getAxesPermutation",function(){return ay}),n.d(d,"getUndoAxesPermutation",function(){return iy}),n.d(d,"getInnerMostAxes",function(){return oy}),n.d(d,"getBroadcastDims",function(){return _g}),n.d(d,"getReductionAxes",function(){return Tg}),n.d(d,"assertAndGetBroadcastShape",function(){return $g}),n.d(d,"assertParamsConsistent",function(){return tx}),n.d(d,"computeOutShape",function(){return nx}),n.d(d,"computeDilation2DInfo",function(){return jm}),n.d(d,"computePool2DInfo",function(){return qm}),n.d(d,"computePool3DInfo",function(){return Km}),n.d(d,"computeConv2DInfo",function(){return Xm}),n.d(d,"computeConv3DInfo",function(){return Zm}),n.d(d,"computeDefaultPad",function(){return Ym}),n.d(d,"tupleValuesAreOne",function(){return ng}),n.d(d,"eitherStridesOrDilationsAreOne",function(){return rg}),n.d(d,"convertConv2DDataFormat",function(){return sg}),n.d(d,"getFusedDyActivation",function(){return ab}),n.d(d,"getFusedBiasGradient",function(){return ib}),n.d(d,"applyActivation",function(){return ob}),n.d(d,"shouldFuse",function(){return lb}),n.d(d,"PARALLELIZE_THRESHOLD",function(){return rx}),n.d(d,"computeOptimalWindowSize",function(){return sx}),n.d(d,"slice_util",function(){return l}),n.d(d,"upcastType",function(){return _p}),n.d(d,"getImageCenter",function(){return ax}),n.d(d,"getReshaped",function(){return ix}),n.d(d,"getPermuted",function(){return ox}),n.d(d,"getReshapedPermuted",function(){return lx}),n.d(d,"getSliceBeginCoords",function(){return ux}),n.d(d,"getSliceSize",function(){return cx}),n.d(d,"prepareAndValidate",function(){return hx}),n.d(d,"validateUpdateShape",function(){return dx}),n.d(d,"validateInput",function(){return px}),n.d(d,"calculateShapes",function(){return fx}),n.d(d,"SELU_SCALEALPHA",function(){return mx}),n.d(d,"SELU_SCALE",function(){return gx}),n.d(d,"ERF_P",function(){return yx}),n.d(d,"ERF_A1",function(){return bx}),n.d(d,"ERF_A2",function(){return xx}),n.d(d,"ERF_A3",function(){return vx}),n.d(d,"ERF_A4",function(){return wx}),n.d(d,"ERF_A5",function(){return kx}),n.d(d,"warn",function(){return Ix}),n.d(d,"log",function(){return Nx}),n.d(d,"mergeRealAndImagArrays",function(){return Cx}),n.d(d,"splitRealAndImagArrays",function(){return Sx}),n.d(d,"complexWithEvenIndex",function(){return _x}),n.d(d,"complexWithOddIndex",function(){return Tx}),n.d(d,"getComplexWithIndex",function(){return $x}),n.d(d,"assignToTypedArray",function(){return Ex}),n.d(d,"exponents",function(){return Ax}),n.d(d,"exponent",function(){return Rx}),n.d(d,"prepareSplitSize",function(){return Fx}),n.d(d,"segment_util",function(){return h}),n.d(d,"fromUint8ToStringArray",function(){return Lx}),n.d(d,"fromStringArrayToUint8",function(){return zx});var p={};n.r(p),n.d(p,"nonMaxSuppressionV3Impl",function(){return wb}),n.d(p,"nonMaxSuppressionV4Impl",function(){return kb}),n.d(p,"nonMaxSuppressionV5Impl",function(){return Ib}),n.d(p,"whereImpl",function(){return Px});var f={};n.r(f),n.d(f,"json",function(){return P_});var m={};n.r(m),n.d(m,"json",function(){return B_});var g={};n.r(g),n.d(g,"json",function(){return V_});var y={};n.r(y),n.d(y,"json",function(){return W_});var b={};n.r(b),n.d(b,"json",function(){return U_});var x={};n.r(x),n.d(x,"json",function(){return H_});var v={};n.r(v),n.d(v,"json",function(){return G_});var w={};n.r(w),n.d(w,"json",function(){return j_});var k={};n.r(k),n.d(k,"json",function(){return q_});var I={};n.r(I),n.d(I,"json",function(){return K_});var N={};n.r(N),n.d(N,"json",function(){return X_});var C={};n.r(C),n.d(C,"json",function(){return Z_});var S={};n.r(S),n.d(S,"json",function(){return Y_});var _={};n.r(_),n.d(_,"json",function(){return J_});var T={};n.r(T),n.d(T,"json",function(){return Q_});var $={};n.r($),n.d($,"json",function(){return eT});var E={};n.r(E),n.d(E,"json",function(){return tT});var A={};function R(e){return"function"==typeof e}n.r(A),n.d(A,"simpleAbsImpl",function(){return g$}),n.d(A,"addImpl",function(){return o$}),n.d(A,"bincountImpl",function(){return Q$}),n.d(A,"bincountReduceImpl",function(){return eE}),n.d(A,"ceilImpl",function(){return rE}),n.d(A,"concatImpl",function(){return uE}),n.d(A,"expImpl",function(){return XE}),n.d(A,"expm1Impl",function(){return eA}),n.d(A,"floorImpl",function(){return wA}),n.d(A,"gatherV2Impl",function(){return EA}),n.d(A,"greaterImpl",function(){return RA}),n.d(A,"lessImpl",function(){return GA}),n.d(A,"linSpaceImpl",function(){return YA}),n.d(A,"logImpl",function(){return QA}),n.d(A,"maxImpl",function(){return fR}),n.d(A,"maximumImpl",function(){return yR}),n.d(A,"minimumImpl",function(){return $R}),n.d(A,"multiplyImpl",function(){return rA}),n.d(A,"negImpl",function(){return PR}),n.d(A,"notEqualImpl",function(){return qR}),n.d(A,"prodImpl",function(){return iF}),n.d(A,"rangeImpl",function(){return lF}),n.d(A,"rsqrtImpl",function(){return vF}),n.d(A,"sliceImpl",function(){return X$}),n.d(A,"squaredDifferenceImpl",function(){return qF}),n.d(A,"stridedSliceImpl",function(){return JF}),n.d(A,"subImpl",function(){return cA}),n.d(A,"tileImpl",function(){return rD}),n.d(A,"topKImpl",function(){return sD}),n.d(A,"transposeImpl",function(){return I$}),n.d(A,"uniqueImpl",function(){return aD});let F=!1;const D={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const e=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+e.stack)}else F&&console.log("RxJS: Back to a better error behavior. Thank you. <3");F=e},get useDeprecatedSynchronousErrorHandling(){return F}};function O(e){setTimeout(()=>{throw e},0)}const M={closed:!0,next(e){},error(e){if(D.useDeprecatedSynchronousErrorHandling)throw e;O(e)},complete(){}},L=(()=>Array.isArray||(e=>e&&"number"==typeof e.length))();function z(e){return null!==e&&"object"==typeof e}const P=(()=>{function e(e){return Error.call(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e})();let B=(()=>{class e{constructor(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._ctorUnsubscribe=!0,this._unsubscribe=e)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:r,_unsubscribe:s,_subscriptions:a}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(let e=0;e<n.length;++e)n[e].remove(this);if(R(s)){r&&(this._unsubscribe=void 0);try{s.call(this)}catch(i){t=i instanceof P?V(i.errors):[i]}}if(L(a)){let e=-1,n=a.length;for(;++e<n;){const n=a[e];if(z(n))try{n.unsubscribe()}catch(i){t=t||[],i instanceof P?t=t.concat(V(i.errors)):t.push(i)}}}if(t)throw new P(t)}add(t){let n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){const t=n;n=new e,n._subscriptions=[t]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof e){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(e){const t=this._subscriptions;if(t){const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}}return e.EMPTY=function(e){return e.closed=!0,e}(new e),e})();function V(e){return e.reduce((e,t)=>e.concat(t instanceof P?t.errors:t),[])}const W=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class U extends B{constructor(e,t,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=M;break;case 1:if(!e){this.destination=M;break}if("object"==typeof e){e instanceof U?(this.syncErrorThrowable=e.syncErrorThrowable,this.destination=e,e.add(this)):(this.syncErrorThrowable=!0,this.destination=new H(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new H(this,e,t,n)}}[W](){return this}static create(e,t,n){const r=new U(e,t,n);return r.syncErrorThrowable=!1,r}next(e){this.isStopped||this._next(e)}error(e){this.isStopped||(this.isStopped=!0,this._error(e))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(e){this.destination.next(e)}_error(e){this.destination.error(e),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:e}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this}}class H extends U{constructor(e,t,n,r){let s;super(),this._parentSubscriber=e;let a=this;R(t)?s=t:t&&(s=t.next,n=t.error,r=t.complete,t!==M&&(a=Object.create(t),R(a.unsubscribe)&&this.add(a.unsubscribe.bind(a)),a.unsubscribe=this.unsubscribe.bind(this))),this._context=a,this._next=s,this._error=n,this._complete=r}next(e){if(!this.isStopped&&this._next){const{_parentSubscriber:t}=this;D.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}}error(e){if(!this.isStopped){const{_parentSubscriber:t}=this,{useDeprecatedSynchronousErrorHandling:n}=D;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):O(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;O(e)}}}complete(){if(!this.isStopped){const{_parentSubscriber:e}=this;if(this._complete){const t=()=>this._complete.call(this._context);D.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,t),this.unsubscribe()):(this.__tryOrUnsub(t),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(e,t){try{e.call(this._context,t)}catch(n){if(this.unsubscribe(),D.useDeprecatedSynchronousErrorHandling)throw n;O(n)}}__tryOrSetError(e,t,n){if(!D.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(r){return D.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=r,e.syncErrorThrown=!0,!0):(O(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:e}=this;this._context=null,this._parentSubscriber=null,e.unsubscribe()}}const G=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function j(e){return e}let q=(()=>{class e{constructor(e){this._isScalar=!1,e&&(this._subscribe=e)}lift(t){const n=new e;return n.source=this,n.operator=t,n}subscribe(e,t,n){const{operator:r}=this,s=function(e,t,n){if(e){if(e instanceof U)return e;if(e[W])return e[W]()}return e||t||n?new U(e,t,n):new U(M)}(e,t,n);if(s.add(r?r.call(s,this.source):this.source||D.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),D.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(e){try{return this._subscribe(e)}catch(t){D.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){const{closed:t,destination:n,isStopped:r}=e;if(t||r)return!1;e=n&&n instanceof U?n:null}return!0}(e)?e.error(t):console.warn(t)}}forEach(e,t){return new(t=K(t))((t,n)=>{let r;r=this.subscribe(t=>{try{e(t)}catch(s){n(s),r&&r.unsubscribe()}},n,t)})}_subscribe(e){const{source:t}=this;return t&&t.subscribe(e)}[G](){return this}pipe(...e){return 0===e.length?this:(0===(t=e).length?j:1===t.length?t[0]:function(e){return t.reduce((e,t)=>t(e),e)})(this);var t}toPromise(e){return new(e=K(e))((e,t)=>{let n;this.subscribe(e=>n=e,e=>t(e),()=>e(n))})}}return e.create=t=>new e(t),e})();function K(e){if(e||(e=D.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const X=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class Z extends B{constructor(e,t){super(),this.subject=e,this.subscriber=t,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const e=this.subject,t=e.observers;if(this.subject=null,!t||0===t.length||e.isStopped||e.closed)return;const n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}class Y extends U{constructor(e){super(e),this.destination=e}}let J=(()=>{class e extends q{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[W](){return new Y(this)}lift(e){const t=new Q(this,this);return t.operator=e,t}next(e){if(this.closed)throw new X;if(!this.isStopped){const{observers:t}=this,n=t.length,r=t.slice();for(let s=0;s<n;s++)r[s].next(e)}}error(e){if(this.closed)throw new X;this.hasError=!0,this.thrownError=e,this.isStopped=!0;const{observers:t}=this,n=t.length,r=t.slice();for(let s=0;s<n;s++)r[s].error(e);this.observers.length=0}complete(){if(this.closed)throw new X;this.isStopped=!0;const{observers:e}=this,t=e.length,n=e.slice();for(let r=0;r<t;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(e){if(this.closed)throw new X;return super._trySubscribe(e)}_subscribe(e){if(this.closed)throw new X;return this.hasError?(e.error(this.thrownError),B.EMPTY):this.isStopped?(e.complete(),B.EMPTY):(this.observers.push(e),new Z(this,e))}asObservable(){const e=new q;return e.source=this,e}}return e.create=(e,t)=>new Q(e,t),e})();class Q extends J{constructor(e,t){super(),this.destination=e,this.source=t}next(e){const{destination:t}=this;t&&t.next&&t.next(e)}error(e){const{destination:t}=this;t&&t.error&&this.destination.error(e)}complete(){const{destination:e}=this;e&&e.complete&&this.destination.complete()}_subscribe(e){const{source:t}=this;return t?this.source.subscribe(e):B.EMPTY}}function ee(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new te(e,t))}}class te{constructor(e,t){this.project=e,this.thisArg=t}call(e,t){return t.subscribe(new ne(e,this.project,this.thisArg))}}class ne extends U{constructor(e,t,n){super(e),this.project=t,this.count=0,this.thisArg=n||this}_next(e){let t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const re=e=>t=>{for(let n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.complete()};function se(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const ae=se(),ie=e=>e&&"number"==typeof e.length&&"function"!=typeof e;function oe(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}const le=e=>{if(e&&"function"==typeof e[G])return r=e,e=>{const t=r[G]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if(ie(e))return re(e);if(oe(e))return n=e,e=>(n.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,O),e);if(e&&"function"==typeof e[ae])return t=e,e=>{const n=t[ae]();for(;;){let t;try{t=n.next()}catch(r){return e.error(r),e}if(t.done){e.complete();break}if(e.next(t.value),e.closed)break}return"function"==typeof n.return&&e.add(()=>{n.return&&n.return()}),e};{const t=z(e)?"an invalid object":`'${e}'`;throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var t,n,r};function ue(e,t){return new q(n=>{const r=new B;let s=0;return r.add(t.schedule(function(){s!==e.length?(n.next(e[s++]),n.closed||r.add(this.schedule())):n.complete()})),r})}function ce(e,t){return t?function(e,t){if(null!=e){if(function(e){return e&&"function"==typeof e[G]}(e))return function(e,t){return new q(n=>{const r=new B;return r.add(t.schedule(()=>{const s=e[G]();r.add(s.subscribe({next(e){r.add(t.schedule(()=>n.next(e)))},error(e){r.add(t.schedule(()=>n.error(e)))},complete(){r.add(t.schedule(()=>n.complete()))}}))})),r})}(e,t);if(oe(e))return function(e,t){return new q(n=>{const r=new B;return r.add(t.schedule(()=>e.then(e=>{r.add(t.schedule(()=>{n.next(e),r.add(t.schedule(()=>n.complete()))}))},e=>{r.add(t.schedule(()=>n.error(e)))}))),r})}(e,t);if(ie(e))return ue(e,t);if(function(e){return e&&"function"==typeof e[ae]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new q(n=>{const r=new B;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(t.schedule(()=>{s=e[ae](),r.add(t.schedule(function(){if(n.closed)return;let e,t;try{const n=s.next();e=n.value,t=n.done}catch(r){return void n.error(r)}t?n.complete():(n.next(e),this.schedule())}))})),r})}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(e,t):e instanceof q?e:new q(le(e))}class he extends U{constructor(e){super(),this.parent=e}_next(e){this.parent.notifyNext(e)}_error(e){this.parent.notifyError(e),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class de extends U{notifyNext(e){this.destination.next(e)}notifyError(e){this.destination.error(e)}notifyComplete(){this.destination.complete()}}function pe(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?r=>r.pipe(pe((n,r)=>ce(e(n,r)).pipe(ee((e,s)=>t(n,e,r,s))),n)):("number"==typeof t&&(n=t),t=>t.lift(new fe(e,n)))}class fe{constructor(e,t=Number.POSITIVE_INFINITY){this.project=e,this.concurrent=t}call(e,t){return t.subscribe(new me(e,this.project,this.concurrent))}}class me extends de{constructor(e,t,n=Number.POSITIVE_INFINITY){super(e),this.project=t,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)}_tryNext(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(t)}_innerSub(e){const t=new he(this),n=this.destination;n.add(t);const r=function(e,t){if(!t.closed)return e instanceof q?e.subscribe(t):le(e)(t)}(e,t);r!==t&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(e){this.destination.next(e)}notifyComplete(){const e=this.buffer;this.active--,e.length>0?this._next(e.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function ge(...e){let t=Number.POSITIVE_INFINITY,n=null,r=e[e.length-1];var s;return(s=r)&&"function"==typeof s.schedule?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof r&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof q?e[0]:function(e=Number.POSITIVE_INFINITY){return pe(j,e)}(t)(function(e,t){return t?ue(e,t):new q(re(e))}(e,n))}function ye(){return function(e){return e.lift(new be(e))}}class be{constructor(e){this.connectable=e}call(e,t){const{connectable:n}=this;n._refCount++;const r=new xe(e,n),s=t.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class xe extends U{constructor(e,t){super(e),this.connectable=t}_unsubscribe(){const{connectable:e}=this;if(!e)return void(this.connection=null);this.connectable=null;const t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);const{connection:n}=this,r=e._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class ve extends q{constructor(e,t){super(),this.source=e,this.subjectFactory=t,this._refCount=0,this._isComplete=!1}_subscribe(e){return this.getSubject().subscribe(e)}getSubject(){const e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let e=this._connection;return e||(this._isComplete=!1,e=this._connection=new B,e.add(this.source.subscribe(new ke(this.getSubject(),this))),e.closed&&(this._connection=null,e=B.EMPTY)),e}refCount(){return ye()(this)}}const we=(()=>{const e=ve.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class ke extends Y{constructor(e,t){super(e),this.connectable=t}_error(e){this._unsubscribe(),super._error(e)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const e=this.connectable;if(e){this.connectable=null;const t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}}}function Ie(){return new J}function Ne(e){for(let t in e)if(e[t]===Ne)return t;throw Error("Could not find renamed property on target object.")}function Ce(e,t){for(const n in t)t.hasOwnProperty(n)&&!e.hasOwnProperty(n)&&(e[n]=t[n])}function Se(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(Se).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return`${e.overriddenName}`;if(e.name)return`${e.name}`;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function _e(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const Te=Ne({__forward_ref__:Ne});function $e(e){return e.__forward_ref__=$e,e.toString=function(){return Se(this())},e}function Ee(e){return Ae(e)?e():e}function Ae(e){return"function"==typeof e&&e.hasOwnProperty(Te)&&e.__forward_ref__===$e}class Re extends Error{constructor(e,t){super(function(e,t){return`${e?`NG0${e}: `:""}${t}`}(e,t)),this.code=e}}function Fe(e){return"string"==typeof e?e:null==e?"":String(e)}function De(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():Fe(e)}function Oe(e,t){const n=t?` in ${t}`:"";throw new Re("201",`No provider for ${De(e)} found${n}`)}function Me(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function Le(e){return{factory:e.factory,providers:e.providers||[],imports:e.imports||[]}}function ze(e){return Pe(e,Ve)||Pe(e,Ue)}function Pe(e,t){return e.hasOwnProperty(t)?e[t]:null}function Be(e){return e&&(e.hasOwnProperty(We)||e.hasOwnProperty(He))?e[We]:null}const Ve=Ne({"\u0275prov":Ne}),We=Ne({"\u0275inj":Ne}),Ue=Ne({ngInjectableDef:Ne}),He=Ne({ngInjectorDef:Ne});var Ge=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}({});let je;function qe(e){const t=je;return je=e,t}function Ke(e,t,n){const r=ze(e);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&Ge.Optional?null:void 0!==t?t:void Oe(Se(e),"Injector")}function Xe(e){return{toString:e}.toString()}var Ze=function(e){return e[e.OnPush=0]="OnPush",e[e.Default=1]="Default",e}({}),Ye=function(e){return e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom",e}({});const Je="undefined"!=typeof globalThis&&globalThis,Qe="undefined"!=typeof window&&window,et="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,tt="undefined"!=typeof global&&global,nt=Je||tt||Qe||et,rt={},st=[],at=Ne({"\u0275cmp":Ne}),it=Ne({"\u0275dir":Ne}),ot=Ne({"\u0275pipe":Ne}),lt=Ne({"\u0275mod":Ne}),ut=Ne({"\u0275loc":Ne}),ct=Ne({"\u0275fac":Ne}),ht=Ne({__NG_ELEMENT_ID__:Ne});let dt=0;function pt(e){return Xe(()=>{const t={},n={type:e.type,providersResolver:null,decls:e.decls,vars:e.vars,factory:null,template:e.template||null,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:t,inputs:null,outputs:null,exportAs:e.exportAs||null,onPush:e.changeDetection===Ze.OnPush,directiveDefs:null,pipeDefs:null,selectors:e.selectors||st,viewQuery:e.viewQuery||null,features:e.features||null,data:e.data||{},encapsulation:e.encapsulation||Ye.Emulated,id:"c",styles:e.styles||st,_:null,setInput:null,schemas:e.schemas||null,tView:null},r=e.directives,s=e.features,a=e.pipes;return n.id+=dt++,n.inputs=bt(e.inputs,t),n.outputs=bt(e.outputs),s&&s.forEach(e=>e(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map(ft):null,n.pipeDefs=a?()=>("function"==typeof a?a():a).map(mt):null,n})}function ft(e){return vt(e)||function(e){return e[it]||null}(e)}function mt(e){return function(e){return e[ot]||null}(e)}const gt={};function yt(e){const t={type:e.type,bootstrap:e.bootstrap||st,declarations:e.declarations||st,imports:e.imports||st,exports:e.exports||st,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null};return null!=e.id&&Xe(()=>{gt[e.id]=e.type}),t}function bt(e,t){if(null==e)return rt;const n={};for(const r in e)if(e.hasOwnProperty(r)){let s=e[r],a=s;Array.isArray(s)&&(a=s[1],s=s[0]),n[s]=r,t&&(t[s]=a)}return n}const xt=pt;function vt(e){return e[at]||null}function wt(e,t){const n=e[lt]||null;if(!n&&!0===t)throw new Error(`Type ${Se(e)} does not have '\u0275mod' property.`);return n}const kt=20,It=10;function Nt(e){return Array.isArray(e)&&"object"==typeof e[1]}function Ct(e){return Array.isArray(e)&&!0===e[1]}function St(e){return 0!=(8&e.flags)}function _t(e){return 2==(2&e.flags)}function Tt(e){return 1==(1&e.flags)}function $t(e){return null!==e.template}function Et(e,t){return e.hasOwnProperty(ct)?e[ct]:null}class At{constructor(e,t,n){this.previousValue=e,this.currentValue=t,this.firstChange=n}isFirstChange(){return this.firstChange}}function Rt(){return Ft}function Ft(e){return e.type.prototype.ngOnChanges&&(e.setInput=Ot),Dt}function Dt(){const e=Mt(this),t=null==e?void 0:e.current;if(t){const n=e.previous;if(n===rt)e.previous=t;else for(let e in t)n[e]=t[e];e.current=null,this.ngOnChanges(t)}}function Ot(e,t,n,r){const s=Mt(e)||function(e,t){return e.__ngSimpleChanges__=t}(e,{previous:rt,current:null}),a=s.current||(s.current={}),i=s.previous,o=this.declaredInputs[n],l=i[o];a[o]=new At(l&&l.currentValue,t,i===rt),e[r]=t}function Mt(e){return e.__ngSimpleChanges__||null}let Lt;function zt(e){return!!e.listen}Rt.ngInherit=!0;const Pt={createRenderer:(e,t)=>void 0!==Lt?Lt:"undefined"!=typeof document?document:void 0};function Bt(e){for(;Array.isArray(e);)e=e[0];return e}function Vt(e,t){return Bt(t[e])}function Wt(e,t){return Bt(t[e.index])}function Ut(e,t){return e.data[t]}function Ht(e,t){const n=t[e];return Nt(n)?n:n[0]}function Gt(e){const t=function(e){return e.__ngContext__||null}(e);return t?Array.isArray(t)?t:t.lView:null}function jt(e){return 128==(128&e[2])}function qt(e,t){return null==t?null:e[t]}function Kt(e){e[18]=0}function Xt(e,t){e[5]+=t;let n=e,r=e[3];for(;null!==r&&(1===t&&1===n[5]||-1===t&&0===n[5]);)r[5]+=t,n=r,r=r[3]}const Zt={lFrame:gn(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function Yt(){return Zt.bindingsEnabled}function Jt(){return Zt.lFrame.lView}function Qt(){return Zt.lFrame.tView}function en(e){Zt.lFrame.contextLView=e}function tn(){let e=nn();for(;null!==e&&64===e.type;)e=e.parent;return e}function nn(){return Zt.lFrame.currentTNode}function rn(e,t){const n=Zt.lFrame;n.currentTNode=e,n.isParent=t}function sn(){return Zt.lFrame.isParent}function an(){return Zt.isInCheckNoChangesMode}function on(e){Zt.isInCheckNoChangesMode=e}function ln(){return Zt.lFrame.bindingIndex++}function un(e,t){const n=Zt.lFrame;n.bindingIndex=n.bindingRootIndex=e,cn(t)}function cn(e){Zt.lFrame.currentDirectiveIndex=e}function hn(e){Zt.lFrame.currentQueryIndex=e}function dn(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[6]:null}function pn(e,t,n){if(n&Ge.SkipSelf){let r=t,s=e;for(;r=r.parent,!(null!==r||n&Ge.Host||(r=dn(s),null===r)||(s=s[15],10&r.type)););if(null===r)return!1;t=r,e=s}const r=Zt.lFrame=mn();return r.currentTNode=t,r.lView=e,!0}function fn(e){const t=mn(),n=e[1];Zt.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function mn(){const e=Zt.lFrame,t=null===e?null:e.child;return null===t?gn(e):t}function gn(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function yn(){const e=Zt.lFrame;return Zt.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const bn=yn;function xn(){const e=yn();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function vn(){return Zt.lFrame.selectedIndex}function wn(e){Zt.lFrame.selectedIndex=e}function kn(){const e=Zt.lFrame;return Ut(e.tView,e.selectedIndex)}function In(e,t){for(let n=t.directiveStart,r=t.directiveEnd;n<r;n++){const t=e.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:a,ngAfterViewChecked:i,ngOnDestroy:o}=t;r&&(e.contentHooks||(e.contentHooks=[])).push(-n,r),s&&((e.contentHooks||(e.contentHooks=[])).push(n,s),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,s)),a&&(e.viewHooks||(e.viewHooks=[])).push(-n,a),i&&((e.viewHooks||(e.viewHooks=[])).push(n,i),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,i)),null!=o&&(e.destroyHooks||(e.destroyHooks=[])).push(n,o)}}function Nn(e,t,n){_n(e,t,3,n)}function Cn(e,t,n,r){(3&e[2])===n&&_n(e,t,n,r)}function Sn(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function _n(e,t,n,r){const s=null!=r?r:-1,a=t.length-1;let i=0;for(let o=void 0!==r?65535&e[18]:0;o<a;o++)if("number"==typeof t[o+1]){if(i=t[o],null!=r&&i>=r)break}else t[o]<0&&(e[18]+=65536),(i<s||-1==s)&&(Tn(e,n,t,o),e[18]=(4294901760&e[18])+o+2),o++}function Tn(e,t,n,r){const s=n[r]<0,a=n[r+1],i=e[s?-n[r]:n[r]];s?e[2]>>11<e[18]>>16&&(3&e[2])===t&&(e[2]+=2048,a.call(i)):a.call(i)}const $n=-1;class En{constructor(e,t,n){this.factory=e,this.resolving=!1,this.canSeeViewProviders=t,this.injectImpl=n}}function An(e,t,n){const r=zt(e);let s=0;for(;s<n.length;){const a=n[s];if("number"==typeof a){if(0!==a)break;s++;const i=n[s++],o=n[s++],l=n[s++];r?e.setAttribute(t,o,l,i):t.setAttributeNS(i,o,l)}else{const i=a,o=n[++s];Rn(i)?r&&e.setProperty(t,i,o):r?e.setAttribute(t,i,o):t.setAttribute(i,o),s++}}return s}function Rn(e){return 64===e.charCodeAt(0)}function Fn(e,t){if(null===t||0===t.length);else if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let r=0;r<t.length;r++){const s=t[r];"number"==typeof s?n=s:0===n||Dn(e,n,s,null,-1===n||2===n?t[++r]:null)}}return e}function Dn(e,t,n,r,s){let a=0,i=e.length;if(-1===t)i=-1;else for(;a<e.length;){const n=e[a++];if("number"==typeof n){if(n===t){i=-1;break}if(n>t){i=a-1;break}}}for(;a<e.length;){const t=e[a];if("number"==typeof t)break;if(t===n){if(null===r)return void(null!==s&&(e[a+1]=s));if(r===e[a+1])return void(e[a+2]=s)}a++,null!==r&&a++,null!==s&&a++}-1!==i&&(e.splice(i,0,t),a=i+1),e.splice(a++,0,n),null!==r&&e.splice(a++,0,r),null!==s&&e.splice(a++,0,s)}function On(e){return e!==$n}function Mn(e){return 32767&e}function Ln(e,t){let n=e>>16,r=t;for(;n>0;)r=r[15],n--;return r}let zn=!0;function Pn(e){const t=zn;return zn=e,t}let Bn=0;function Vn(e,t){const n=Un(e,t);if(-1!==n)return n;const r=t[1];r.firstCreatePass&&(e.injectorIndex=t.length,Wn(r.data,e),Wn(t,null),Wn(r.blueprint,null));const s=Hn(e,t),a=e.injectorIndex;if(On(s)){const e=Mn(s),n=Ln(s,t),r=n[1].data;for(let s=0;s<8;s++)t[a+s]=n[e+s]|r[e+s]}return t[a+8]=s,a}function Wn(e,t){e.push(0,0,0,0,0,0,0,0,t)}function Un(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function Hn(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,r=null,s=t;for(;null!==s;){const e=s[1],t=e.type;if(r=2===t?e.declTNode:1===t?s[6]:null,null===r)return $n;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return $n}function Gn(e,t,n){!function(e,t,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(ht)&&(r=n[ht]),null==r&&(r=n[ht]=Bn++);const s=255&r;t.data[e+(s>>5)]|=1<<s}(e,t,n)}function jn(e,t,n){if(n&Ge.Optional)return e;Oe(t,"NodeInjector")}function qn(e,t,n,r){if(n&Ge.Optional&&void 0===r&&(r=null),0==(n&(Ge.Self|Ge.Host))){const s=e[9],a=qe(void 0);try{return s?s.get(t,r,n&Ge.Optional):Ke(t,r,n&Ge.Optional)}finally{qe(a)}}return jn(r,t,n)}function Kn(e,t,n,r=Ge.Default,s){if(null!==e){const a=function(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(ht)?e[ht]:void 0;return"number"==typeof t?t>=0?255&t:Zn:t}(n);if("function"==typeof a){if(!pn(t,e,r))return r&Ge.Host?jn(s,n,r):qn(t,n,r,s);try{const e=a();if(null!=e||r&Ge.Optional)return e;Oe(n)}finally{bn()}}else if("number"==typeof a){let s=null,i=Un(e,t),o=$n,l=r&Ge.Host?t[16][6]:null;for((-1===i||r&Ge.SkipSelf)&&(o=-1===i?Hn(e,t):t[i+8],o!==$n&&er(r,!1)?(s=t[1],i=Mn(o),t=Ln(o,t)):i=-1);-1!==i;){const e=t[1];if(Qn(a,i,e.data)){const e=Yn(i,t,n,s,r,l);if(e!==Xn)return e}o=t[i+8],o!==$n&&er(r,t[1].data[i+8]===l)&&Qn(a,i,t)?(s=e,i=Mn(o),t=Ln(o,t)):i=-1}}}return qn(t,n,r,s)}const Xn={};function Zn(){return new tr(tn(),Jt())}function Yn(e,t,n,r,s,a){const i=t[1],o=i.data[e+8],l=function(e,t,n,r,s){const a=e.providerIndexes,i=t.data,o=1048575&a,l=e.directiveStart,u=a>>20,c=s?o+u:e.directiveEnd;for(let h=r?o:o+u;h<c;h++){const e=i[h];if(h<l&&n===e||h>=l&&e.type===n)return h}if(s){const e=i[l];if(e&&$t(e)&&e.type===n)return l}return null}(o,i,n,null==r?_t(o)&&zn:r!=i&&0!=(3&o.type),s&Ge.Host&&a===o);return null!==l?Jn(t,i,l,o):Xn}function Jn(e,t,n,r){let s=e[n];const a=t.data;if(s instanceof En){const i=s;i.resolving&&function(e,t){throw new Re("200",`Circular dependency in DI detected for ${e}`)}(De(a[n]));const o=Pn(i.canSeeViewProviders);i.resolving=!0;const l=i.injectImpl?qe(i.injectImpl):null;pn(e,r,Ge.Default);try{s=e[n]=i.factory(void 0,a,e,r),t.firstCreatePass&&n>=r.directiveStart&&function(e,t,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:a}=t.type.prototype;if(r){const r=Ft(t);(n.preOrderHooks||(n.preOrderHooks=[])).push(e,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,r)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-e,s),a&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,a),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,a))}(n,a[n],t)}finally{null!==l&&qe(l),Pn(o),i.resolving=!1,bn()}}return s}function Qn(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function er(e,t){return!(e&Ge.Self||e&Ge.Host&&t)}class tr{constructor(e,t){this._tNode=e,this._lView=t}get(e,t){return Kn(this._tNode,this._lView,e,void 0,t)}}function nr(e){const t=e;if(Ae(e))return()=>{const e=nr(Ee(t));return e?e():null};let n=Et(t);if(null===n){const e=Be(t);n=e&&e.factory}return n||null}function rr(e){return Xe(()=>{const t=e.prototype.constructor,n=t[ct]||nr(t),r=Object.prototype;let s=Object.getPrototypeOf(e.prototype).constructor;for(;s&&s!==r;){const e=s[ct]||nr(s);if(e&&e!==n)return e;s=Object.getPrototypeOf(s)}return e=>new e})}const sr="__parameters__";function ar(e,t,n){return Xe(()=>{const r=function(e){return function(...t){if(e){const n=e(...t);for(const e in n)this[e]=n[e]}}}(t);function s(...e){if(this instanceof s)return r.apply(this,e),this;const t=new s(...e);return n.annotation=t,n;function n(e,n,r){const s=e.hasOwnProperty(sr)?e[sr]:Object.defineProperty(e,sr,{value:[]})[sr];for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(t),e}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=e,s.annotationCls=s,s})}class ir{constructor(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof t?this.__NG_ELEMENT_ID__=t:void 0!==t&&(this.\u0275prov=Me({token:this,providedIn:t.providedIn||"root",factory:t.factory}))}toString(){return`InjectionToken ${this._desc}`}}function or(e,t){e.forEach(e=>Array.isArray(e)?or(e,t):t(e))}function lr(e,t,n){t>=e.length?e.push(n):e.splice(t,0,n)}function ur(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}function cr(e,t,n){let r=dr(e,t);return r>=0?e[1|r]=n:(r=~r,function(e,t,n,r){let s=e.length;if(s==t)e.push(n,r);else if(1===s)e.push(r,e[0]),e[0]=n;else{for(s--,e.push(e[s-1],e[s]);s>t;)e[s]=e[s-2],s--;e[t]=n,e[t+1]=r}}(e,r,t,n)),r}function hr(e,t){const n=dr(e,t);if(n>=0)return e[1|n]}function dr(e,t){return function(e,t,n){let r=0,s=e.length>>1;for(;s!==r;){const n=r+(s-r>>1),a=e[n<<1];if(t===a)return n<<1;a>t?s=n:r=n+1}return~(s<<1)}(e,t)}const pr={},fr=/\n/gm,mr="__source",gr=Ne({provide:String,useValue:Ne});let yr;function br(e){const t=yr;return yr=e,t}function xr(e,t=Ge.Default){if(void 0===yr)throw new Error("inject() must be called from an injection context");return null===yr?Ke(e,void 0,t):yr.get(e,t&Ge.Optional?null:void 0,t)}function vr(e,t=Ge.Default){return(je||xr)(Ee(e),t)}function wr(e){const t=[];for(let n=0;n<e.length;n++){const r=Ee(e[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let e,n=Ge.Default;for(let t=0;t<r.length;t++){const s=r[t],a=s.__NG_DI_FLAG__;"number"==typeof a?-1===a?e=s.token:n|=a:e=s}t.push(vr(e,n))}else t.push(vr(r))}return t}function kr(e,t){return e.__NG_DI_FLAG__=t,e.prototype.__NG_DI_FLAG__=t,e}const Ir=kr(ar("Inject",e=>({token:e})),-1),Nr=kr(ar("Optional"),8),Cr=kr(ar("SkipSelf"),4);function Sr(e){return e.ngDebugContext}function _r(e){return e.ngOriginalError}function Tr(e,...t){e.error(...t)}class $r{constructor(){this._console=console}handleError(e){const t=this._findOriginalError(e),n=this._findContext(e),r=function(e){return e.ngErrorLogger||Tr}(e);r(this._console,"ERROR",e),t&&r(this._console,"ORIGINAL ERROR",t),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(e){return e?Sr(e)?Sr(e):this._findContext(_r(e)):null}_findOriginalError(e){let t=_r(e);for(;t&&_r(t);)t=_r(t);return t}}function Er(e,t){e.__ngContext__=t}const Ar=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(nt))();function Rr(e){return e instanceof Function?e():e}var Fr=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}({});function Dr(e,t){return(void 0)(e,t)}function Or(e){const t=e[3];return Ct(t)?t[3]:t}function Mr(e){return zr(e[13])}function Lr(e){return zr(e[4])}function zr(e){for(;null!==e&&!Ct(e);)e=e[4];return e}function Pr(e,t,n,r,s){if(null!=r){let a,i=!1;Ct(r)?a=r:Nt(r)&&(i=!0,r=r[0]);const o=Bt(r);0===e&&null!==n?null==s?jr(t,n,o):Gr(t,n,o,s||null,!0):1===e&&null!==n?Gr(t,n,o,s||null,!0):2===e?function(e,t,n){const r=Kr(e,t);r&&function(e,t,n,r){zt(e)?e.removeChild(t,n,r):t.removeChild(n)}(e,r,t,n)}(t,o,i):3===e&&t.destroyNode(o),null!=a&&function(e,t,n,r,s){const a=n[7];a!==Bt(n)&&Pr(t,e,r,a,s);for(let i=It;i<n.length;i++){const s=n[i];es(s[1],s,e,t,r,a)}}(t,e,a,n,s)}}function Br(e,t,n){return zt(e)?e.createElement(t,n):null===n?e.createElement(t):e.createElementNS(n,t)}function Vr(e,t){const n=e[9],r=n.indexOf(t),s=t[3];1024&t[2]&&(t[2]&=-1025,Xt(s,-1)),n.splice(r,1)}function Wr(e,t){if(e.length<=It)return;const n=It+t,r=e[n];if(r){const a=r[17];null!==a&&a!==e&&Vr(a,r),t>0&&(e[n-1][4]=r[4]);const i=ur(e,It+t);es(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const o=i[19];null!==o&&o.detachView(i[1]),r[3]=null,r[4]=null,r[2]&=-129}var s;return r}function Ur(e,t){if(!(256&t[2])){const n=t[11];zt(n)&&n.destroyNode&&es(e,t,n,3,null,null),function(e){let t=e[13];if(!t)return Hr(e[1],e);for(;t;){let n=null;if(Nt(t))n=t[13];else{const e=t[10];e&&(n=e)}if(!n){for(;t&&!t[4]&&t!==e;)Nt(t)&&Hr(t[1],t),t=t[3];null===t&&(t=e),Nt(t)&&Hr(t[1],t),n=t&&t[4]}t=n}}(t)}}function Hr(e,t){if(!(256&t[2])){t[2]&=-129,t[2]|=256,function(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let r=0;r<n.length;r+=2){const e=t[n[r]];if(!(e instanceof En)){const t=n[r+1];if(Array.isArray(t))for(let n=0;n<t.length;n+=2)t[n+1].call(e[t[n]]);else t.call(e)}}}(e,t),function(e,t){const n=e.cleanup,r=t[7];let s=-1;if(null!==n)for(let a=0;a<n.length-1;a+=2)if("string"==typeof n[a]){const e=n[a+1],i="function"==typeof e?e(t):Bt(t[e]),o=r[s=n[a+2]],l=n[a+3];"boolean"==typeof l?i.removeEventListener(n[a],o,l):l>=0?r[s=l]():r[s=-l].unsubscribe(),a+=2}else{const e=r[s=n[a+1]];n[a].call(e)}if(null!==r){for(let e=s+1;e<r.length;e++)(0,r[e])();t[7]=null}}(e,t),1===t[1].type&&zt(t[11])&&t[11].destroy();const n=t[17];if(null!==n&&Ct(t[3])){n!==t[3]&&Vr(n,t);const r=t[19];null!==r&&r.detachView(e)}}}function Gr(e,t,n,r,s){zt(e)?e.insertBefore(t,n,r,s):t.insertBefore(n,r,s)}function jr(e,t,n){zt(e)?e.appendChild(t,n):t.appendChild(n)}function qr(e,t,n,r,s){null!==r?Gr(e,t,n,r,s):jr(e,t,n)}function Kr(e,t){return zt(e)?e.parentNode(t):t.parentNode}function Xr(e,t,n,r){const s=function(e,t,n){return function(e,t,n){let r=t;for(;null!==r&&40&r.type;)r=(t=r).parent;if(null===r)return n[0];if(2&r.flags){const t=e.data[r.directiveStart].encapsulation;if(t===Ye.None||t===Ye.Emulated)return null}return Wt(r,n)}(e,t.parent,n)}(e,r,t),a=t[11],i=function(e,t,n){return function(e,t,n){return 40&e.type?Wt(e,n):null}(e,0,n)}(r.parent||t[6],0,t);if(null!=s)if(Array.isArray(n))for(let o=0;o<n.length;o++)qr(a,s,n[o],i,!1);else qr(a,s,n,i,!1)}function Zr(e,t){if(null!==t){const n=t.type;if(3&n)return Wt(t,e);if(4&n)return Jr(-1,e[t.index]);if(8&n){const n=t.child;if(null!==n)return Zr(e,n);{const n=e[t.index];return Ct(n)?Jr(-1,n):Bt(n)}}if(32&n)return Dr(t,e)()||Bt(e[t.index]);{const n=Yr(e,t);return null!==n?Array.isArray(n)?n[0]:Zr(Or(e[16]),n):Zr(e,t.next)}}return null}function Yr(e,t){return null!==t?e[16][6].projection[t.projection]:null}function Jr(e,t){const n=It+e+1;if(n<t.length){const e=t[n],r=e[1].firstChild;if(null!==r)return Zr(e,r)}return t[7]}function Qr(e,t,n,r,s,a,i){for(;null!=n;){const o=r[n.index],l=n.type;if(i&&0===t&&(o&&Er(Bt(o),r),n.flags|=4),64!=(64&n.flags))if(8&l)Qr(e,t,n.child,r,s,a,!1),Pr(t,e,s,o,a);else if(32&l){const i=Dr(n,r);let l;for(;l=i();)Pr(t,e,s,l,a);Pr(t,e,s,o,a)}else 16&l?ts(e,t,r,n,s,a):Pr(t,e,s,o,a);n=i?n.projectionNext:n.next}}function es(e,t,n,r,s,a){Qr(n,r,e.firstChild,t,s,a,!1)}function ts(e,t,n,r,s,a){const i=n[16],o=i[6].projection[r.projection];if(Array.isArray(o))for(let l=0;l<o.length;l++)Pr(t,e,s,o[l],a);else Qr(e,t,o,i[3],s,a,!0)}function ns(e,t,n){zt(e)?e.setAttribute(t,"style",n):t.style.cssText=n}function rs(e,t,n){zt(e)?""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n):t.className=n}function ss(e,t,n){let r=e.length;for(;;){const s=e.indexOf(t,n);if(-1===s)return s;if(0===s||e.charCodeAt(s-1)<=32){const n=t.length;if(s+n===r||e.charCodeAt(s+n)<=32)return s}n=s+1}}const as="ng-template";function is(e,t,n){let r=0;for(;r<e.length;){let s=e[r++];if(n&&"class"===s){if(s=e[r],-1!==ss(s.toLowerCase(),t,0))return!0}else if(1===s){for(;r<e.length&&"string"==typeof(s=e[r++]);)if(s.toLowerCase()===t)return!0;return!1}}return!1}function os(e){return 4===e.type&&e.value!==as}function ls(e,t,n){return t===(4!==e.type||n?e.value:as)}function us(e,t,n){let r=4;const s=e.attrs||[],a=function(e){for(let n=0;n<e.length;n++)if(3===(t=e[n])||4===t||6===t)return n;var t;return e.length}(s);let i=!1;for(let o=0;o<t.length;o++){const l=t[o];if("number"!=typeof l){if(!i)if(4&r){if(r=2|1&r,""!==l&&!ls(e,l,n)||""===l&&1===t.length){if(cs(r))return!1;i=!0}}else{const u=8&r?l:t[++o];if(8&r&&null!==e.attrs){if(!is(e.attrs,u,n)){if(cs(r))return!1;i=!0}continue}const c=hs(8&r?"class":l,s,os(e),n);if(-1===c){if(cs(r))return!1;i=!0;continue}if(""!==u){let e;e=c>a?"":s[c+1].toLowerCase();const t=8&r?e:null;if(t&&-1!==ss(t,u,0)||2&r&&u!==e){if(cs(r))return!1;i=!0}}}}else{if(!i&&!cs(r)&&!cs(l))return!1;if(i&&cs(l))continue;i=!1,r=l|1&r}}return cs(r)||i}function cs(e){return 0==(1&e)}function hs(e,t,n,r){if(null===t)return-1;let s=0;if(r||!n){let n=!1;for(;s<t.length;){const r=t[s];if(r===e)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let e=t[++s];for(;"string"==typeof e;)e=t[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const r=e[n];if("number"==typeof r)return-1;if(r===t)return n;n++}return-1}(t,e)}function ds(e,t,n=!1){for(let r=0;r<t.length;r++)if(us(e,t[r],n))return!0;return!1}function ps(e,t){return e?":not("+t.trim()+")":t}function fs(e){let t=e[0],n=1,r=2,s="",a=!1;for(;n<e.length;){let i=e[n];if("string"==typeof i)if(2&r){const t=e[++n];s+="["+i+(t.length>0?'="'+t+'"':"")+"]"}else 8&r?s+="."+i:4&r&&(s+=" "+i);else""===s||cs(i)||(t+=ps(a,s),s=""),r=i,a=a||!cs(r);n++}return""!==s&&(t+=ps(a,s)),t}const ms={};function gs(e){ys(Qt(),Jt(),vn()+e,an())}function ys(e,t,n,r){if(!r)if(3==(3&t[2])){const r=e.preOrderCheckHooks;null!==r&&Nn(t,r,n)}else{const r=e.preOrderHooks;null!==r&&Cn(t,r,0,n)}wn(n)}function bs(e,t){return e<<17|t<<2}function xs(e){return e>>17&32767}function vs(e){return 2|e}function ws(e){return(131068&e)>>2}function ks(e,t){return-131069&e|t<<2}function Is(e){return 1|e}function Ns(e,t){const n=e.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],a=n[r+1];if(-1!==a){const n=e.data[a];hn(s),n.contentQueries(2,t[a],a)}}}function Cs(e,t,n,r,s,a,i,o,l,u){const c=t.blueprint.slice();return c[0]=s,c[2]=140|r,Kt(c),c[3]=c[15]=e,c[8]=n,c[10]=i||e&&e[10],c[11]=o||e&&e[11],c[12]=l||e&&e[12]||null,c[9]=u||e&&e[9]||null,c[6]=a,c[16]=2==t.type?e[16]:c,c}function Ss(e,t,n,r,s){let a=e.data[t];if(null===a)a=function(e,t,n,r,s){const a=nn(),i=sn(),o=e.data[t]=function(e,t,n,r,s,a){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:a,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,i?a:a&&a.parent,n,t,r,s);return null===e.firstChild&&(e.firstChild=o),null!==a&&(i?null==a.child&&null!==o.parent&&(a.child=o):null===a.next&&(a.next=o)),o}(e,t,n,r,s),Zt.lFrame.inI18n&&(a.flags|=64);else if(64&a.type){a.type=n,a.value=r,a.attrs=s;const e=function(){const e=Zt.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();a.injectorIndex=null===e?-1:e.injectorIndex}return rn(a,!0),a}function _s(e,t,n,r){if(0===n)return-1;const s=t.length;for(let a=0;a<n;a++)t.push(r),e.blueprint.push(r),e.data.push(null);return s}function Ts(e,t,n){fn(t);try{const r=e.viewQuery;null!==r&&ta(1,r,n);const s=e.template;null!==s&&As(e,t,s,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&Ns(e,t),e.staticViewQueries&&ta(2,e.viewQuery,n);const a=e.components;null!==a&&function(e,t){for(let n=0;n<t.length;n++)Zs(e,t[n])}(t,a)}catch(r){throw e.firstCreatePass&&(e.incompleteFirstPass=!0),r}finally{t[2]&=-5,xn()}}function $s(e,t,n,r){const s=t[2];if(256==(256&s))return;fn(t);const a=an();try{Kt(t),Zt.lFrame.bindingIndex=e.bindingStartIndex,null!==n&&As(e,t,n,2,r);const i=3==(3&s);if(!a)if(i){const n=e.preOrderCheckHooks;null!==n&&Nn(t,n,null)}else{const n=e.preOrderHooks;null!==n&&Cn(t,n,0,null),Sn(t,0)}if(function(e){for(let t=Mr(e);null!==t;t=Lr(t)){if(!t[2])continue;const e=t[9];for(let t=0;t<e.length;t++){const n=e[t],r=n[3];0==(1024&n[2])&&Xt(r,1),n[2]|=1024}}}(t),function(e){for(let t=Mr(e);null!==t;t=Lr(t))for(let e=It;e<t.length;e++){const n=t[e],r=n[1];jt(n)&&$s(r,n,r.template,n[8])}}(t),null!==e.contentQueries&&Ns(e,t),!a)if(i){const n=e.contentCheckHooks;null!==n&&Nn(t,n)}else{const n=e.contentHooks;null!==n&&Cn(t,n,1),Sn(t,1)}!function(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let e=0;e<n.length;e++){const r=n[e];if(r<0)wn(~r);else{const s=r,a=n[++e],i=n[++e];un(a,s),i(2,t[s])}}}finally{wn(-1)}}(e,t);const o=e.components;null!==o&&function(e,t){for(let n=0;n<t.length;n++)Ks(e,t[n])}(t,o);const l=e.viewQuery;if(null!==l&&ta(2,l,r),!a)if(i){const n=e.viewCheckHooks;null!==n&&Nn(t,n)}else{const n=e.viewHooks;null!==n&&Cn(t,n,2),Sn(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),a||(t[2]&=-73),1024&t[2]&&(t[2]&=-1025,Xt(t[3],-1))}finally{xn()}}function Es(e,t,n,r){const s=t[10],a=!an(),i=4==(4&t[2]);try{a&&!i&&s.begin&&s.begin(),i&&Ts(e,t,r),$s(e,t,n,r)}finally{a&&!i&&s.end&&s.end()}}function As(e,t,n,r,s){const a=vn();try{wn(-1),2&r&&t.length>kt&&ys(e,t,kt,an()),n(r,s)}finally{wn(a)}}function Rs(e,t,n){Yt()&&(function(e,t,n,r){const s=n.directiveStart,a=n.directiveEnd;e.firstCreatePass||Vn(n,t),Er(r,t);const i=n.initialInputs;for(let o=s;o<a;o++){const r=e.data[o],a=$t(r);a&&Hs(t,n,r);const l=Jn(t,e,o,n);Er(l,t),null!==i&&Gs(0,o-s,l,r,0,i),a&&(Ht(n.index,t)[8]=l)}}(e,t,n,Wt(n,t)),128==(128&n.flags)&&function(e,t,n){const r=n.directiveStart,s=n.directiveEnd,a=n.index,i=Zt.lFrame.currentDirectiveIndex;try{wn(a);for(let n=r;n<s;n++){const r=e.data[n],s=t[n];cn(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||Ps(r,s)}}finally{wn(-1),cn(i)}}(e,t,n))}function Fs(e,t,n=Wt){const r=t.localNames;if(null!==r){let s=t.index+1;for(let a=0;a<r.length;a+=2){const i=r[a+1],o=-1===i?n(t,e):e[i];e[s++]=o}}}function Ds(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=Os(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function Os(e,t,n,r,s,a,i,o,l,u){const c=kt+r,h=c+s,d=function(e,t){const n=[];for(let r=0;r<t;r++)n.push(r<e?null:ms);return n}(c,h),p="function"==typeof u?u():u;return d[1]={type:e,blueprint:d,template:n,queries:null,viewQuery:o,declTNode:t,data:d.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof a?a():a,pipeRegistry:"function"==typeof i?i():i,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function Ms(e,t,n){for(let r in e)if(e.hasOwnProperty(r)){const s=e[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(t,s):n[r]=[t,s]}return n}function Ls(e,t,n,r){let s=!1;if(Yt()){const a=function(e,t,n){const r=e.directiveRegistry;let s=null;if(r)for(let a=0;a<r.length;a++){const i=r[a];ds(n,i.selectors,!1)&&(s||(s=[]),Gn(Vn(n,t),e,i.type),$t(i)?(Bs(e,n),s.unshift(i)):s.push(i))}return s}(e,t,n),i=null===r?null:{"":-1};if(null!==a){s=!0,Ws(n,e.data.length,a.length);for(let e=0;e<a.length;e++){const t=a[e];t.providersResolver&&t.providersResolver(t)}let r=!1,o=!1,l=_s(e,t,a.length,null);for(let s=0;s<a.length;s++){const u=a[s];n.mergedAttrs=Fn(n.mergedAttrs,u.hostAttrs),Us(e,n,t,l,u),Vs(l,u,i),null!==u.contentQueries&&(n.flags|=8),null===u.hostBindings&&null===u.hostAttrs&&0===u.hostVars||(n.flags|=128);const c=u.type.prototype;!r&&(c.ngOnChanges||c.ngOnInit||c.ngDoCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index),r=!0),o||!c.ngOnChanges&&!c.ngDoCheck||((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index),o=!0),l++}!function(e,t){const n=t.directiveEnd,r=e.data,s=t.attrs,a=[];let i=null,o=null;for(let l=t.directiveStart;l<n;l++){const e=r[l],n=e.inputs,u=null===s||os(t)?null:js(n,s);a.push(u),i=Ms(n,l,i),o=Ms(e.outputs,l,o)}null!==i&&(i.hasOwnProperty("class")&&(t.flags|=16),i.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=a,t.inputs=i,t.outputs=o}(e,n)}i&&function(e,t,n){if(t){const r=e.localNames=[];for(let e=0;e<t.length;e+=2){const s=n[t[e+1]];if(null==s)throw new Re("301",`Export of name '${t[e+1]}' not found!`);r.push(t[e],s)}}}(n,r,i)}return n.mergedAttrs=Fn(n.mergedAttrs,n.attrs),s}function zs(e,t,n,r,s,a){const i=a.hostBindings;if(i){let n=e.hostBindingOpCodes;null===n&&(n=e.hostBindingOpCodes=[]);const a=~t.index;(function(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(n)!=a&&n.push(a),n.push(r,s,i)}}function Ps(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function Bs(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function Vs(e,t,n){if(n){if(t.exportAs)for(let r=0;r<t.exportAs.length;r++)n[t.exportAs[r]]=e;$t(t)&&(n[""]=e)}}function Ws(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function Us(e,t,n,r,s){e.data[r]=s;const a=s.factory||(s.factory=Et(s.type)),i=new En(a,$t(s),null);e.blueprint[r]=i,n[r]=i,zs(e,t,0,r,_s(e,n,s.hostVars,ms),s)}function Hs(e,t,n){const r=Wt(t,e),s=Ds(n),a=e[10],i=Ys(e,Cs(e,s,null,n.onPush?64:16,r,t,a,a.createRenderer(r,n),null,null));e[t.index]=i}function Gs(e,t,n,r,s,a){const i=a[t];if(null!==i){const e=r.setInput;for(let t=0;t<i.length;){const s=i[t++],a=i[t++],o=i[t++];null!==e?r.setInput(n,o,s,a):n[a]=o}}}function js(e,t){let n=null,r=0;for(;r<t.length;){const s=t[r];if(0!==s)if(5!==s){if("number"==typeof s)break;e.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,e[s],t[r+1])),r+=2}else r+=2;else r+=4}return n}function qs(e,t,n,r){return new Array(e,!0,!1,t,null,0,r,n,null,null)}function Ks(e,t){const n=Ht(t,e);if(jt(n)){const e=n[1];80&n[2]?$s(e,n,e.template,n[8]):n[5]>0&&Xs(n)}}function Xs(e){for(let n=Mr(e);null!==n;n=Lr(n))for(let e=It;e<n.length;e++){const t=n[e];if(1024&t[2]){const e=t[1];$s(e,t,e.template,t[8])}else t[5]>0&&Xs(t)}const t=e[1].components;if(null!==t)for(let n=0;n<t.length;n++){const r=Ht(t[n],e);jt(r)&&r[5]>0&&Xs(r)}}function Zs(e,t){const n=Ht(t,e),r=n[1];!function(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(r,n),Ts(r,n,n[8])}function Ys(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function Js(e){for(;e;){e[2]|=64;const t=Or(e);if(0!=(512&e[2])&&!t)return e;e=t}return null}function Qs(e,t,n){const r=t[10];r.begin&&r.begin();try{$s(e,t,e.template,n)}catch(s){throw aa(t,s),s}finally{r.end&&r.end()}}function ea(e){!function(e){for(let t=0;t<e.components.length;t++){const n=e.components[t],r=Gt(n),s=r[1];Es(s,r,s.template,n)}}(e[8])}function ta(e,t,n){hn(0),t(e,n)}const na=(()=>Promise.resolve(null))();function ra(e){return e[7]||(e[7]=[])}function sa(e){return e.cleanup||(e.cleanup=[])}function aa(e,t){const n=e[9],r=n?n.get($r,null):null;r&&r.handleError(t)}function ia(e,t,n,r,s){for(let a=0;a<n.length;){const i=n[a++],o=n[a++],l=t[i],u=e.data[i];null!==u.setInput?u.setInput(l,s,r,o):l[o]=s}}function oa(e,t,n){let r=n?e.styles:null,s=n?e.classes:null,a=0;if(null!==t)for(let i=0;i<t.length;i++){const e=t[i];"number"==typeof e?a=e:1==a?s=_e(s,e):2==a&&(r=_e(r,e+": "+t[++i]+";"))}n?e.styles=r:e.stylesWithoutHost=r,n?e.classes=s:e.classesWithoutHost=s}const la=new ir("INJECTOR",-1);class ua{get(e,t=pr){if(t===pr){const t=new Error(`NullInjectorError: No provider for ${Se(e)}!`);throw t.name="NullInjectorError",t}return t}}const ca=new ir("Set Injector scope."),ha={},da={},pa=[];let fa;function ma(){return void 0===fa&&(fa=new ua),fa}function ga(e,t=null,n=null,r){return new ya(e,n,t||ma(),r)}class ya{constructor(e,t,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];t&&or(t,n=>this.processProvider(n,e,t)),or([e],e=>this.processInjectorType(e,[],s)),this.records.set(la,va(void 0,this));const a=this.records.get(ca);this.scope=null!=a?a.value:null,this.source=r||("object"==typeof e?null:Se(e))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(e=>e.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(e,t=pr,n=Ge.Default){this.assertNotDestroyed();const r=br(this);try{if(!(n&Ge.SkipSelf)){let t=this.records.get(e);if(void 0===t){const n=("function"==typeof(s=e)||"object"==typeof s&&s instanceof ir)&&ze(e);t=n&&this.injectableDefInScope(n)?va(ba(e),ha):null,this.records.set(e,t)}if(null!=t)return this.hydrate(e,t)}return(n&Ge.Self?ma():this.parent).get(e,t=n&Ge.Optional&&t===pr?null:t)}catch(a){if("NullInjectorError"===a.name){if((a.ngTempTokenPath=a.ngTempTokenPath||[]).unshift(Se(e)),r)throw a;return function(e,t,n,r){const s=e.ngTempTokenPath;throw t[mr]&&s.unshift(t[mr]),e.message=function(e,t,n,r=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.substr(2):e;let s=Se(t);if(Array.isArray(t))s=t.map(Se).join(" -> ");else if("object"==typeof t){let e=[];for(let n in t)if(t.hasOwnProperty(n)){let r=t[n];e.push(n+":"+("string"==typeof r?JSON.stringify(r):Se(r)))}s=`{${e.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${e.replace(fr,"\n  ")}`}("\n"+e.message,s,n,r),e.ngTokenPath=s,e.ngTempTokenPath=null,e}(a,e,"R3InjectorError",this.source)}throw a}finally{br(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(e=>this.get(e))}toString(){const e=[];return this.records.forEach((t,n)=>e.push(Se(n))),`R3Injector[${e.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(e,t,n){if(!(e=Ee(e)))return!1;let r=Be(e);const s=null==r&&e.ngModule||void 0,a=void 0===s?e:s,i=-1!==n.indexOf(a);if(void 0!==s&&(r=Be(s)),null==r)return!1;if(null!=r.imports&&!i){let e;n.push(a);try{or(r.imports,r=>{this.processInjectorType(r,t,n)&&(void 0===e&&(e=[]),e.push(r))})}finally{}if(void 0!==e)for(let t=0;t<e.length;t++){const{ngModule:n,providers:r}=e[t];or(r,e=>this.processProvider(e,n,r||pa))}}this.injectorDefTypes.add(a),this.records.set(a,va(r.factory,ha));const o=r.providers;if(null!=o&&!i){const t=e;or(o,e=>this.processProvider(e,t,o))}return void 0!==s&&void 0!==e.providers}processProvider(e,t,n){let r=ka(e=Ee(e))?e:Ee(e&&e.provide);const s=function(e,t,n){return wa(e)?va(void 0,e.useValue):va(xa(e),ha)}(e);if(ka(e)||!0!==e.multi)this.records.get(r);else{let t=this.records.get(r);t||(t=va(void 0,ha,!0),t.factory=()=>wr(t.multi),this.records.set(r,t)),r=e,t.multi.push(e)}this.records.set(r,s)}hydrate(e,t){var n;return t.value===ha&&(t.value=da,t.value=t.factory()),"object"==typeof t.value&&t.value&&null!==(n=t.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(t.value),t.value}injectableDefInScope(e){return!!e.providedIn&&("string"==typeof e.providedIn?"any"===e.providedIn||e.providedIn===this.scope:this.injectorDefTypes.has(e.providedIn))}}function ba(e){const t=ze(e),n=null!==t?t.factory:Et(e);if(null!==n)return n;const r=Be(e);if(null!==r)return r.factory;if(e instanceof ir)throw new Error(`Token ${Se(e)} is missing a \u0275prov definition.`);if(e instanceof Function)return function(e){const t=e.length;if(t>0){const n=function(e,t){const n=[];for(let r=0;r<e;r++)n.push("?");return n}(t);throw new Error(`Can't resolve all parameters for ${Se(e)}: (${n.join(", ")}).`)}const n=function(e){const t=e&&(e[Ve]||e[Ue]);if(t){const n=function(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new Error("unreachable")}function xa(e,t,n){let r;if(ka(e)){const t=Ee(e);return Et(t)||ba(t)}if(wa(e))r=()=>Ee(e.useValue);else if((s=e)&&s.useFactory)r=()=>e.useFactory(...wr(e.deps||[]));else if(function(e){return!(!e||!e.useExisting)}(e))r=()=>vr(Ee(e.useExisting));else{const t=Ee(e&&(e.useClass||e.provide));if(!function(e){return!!e.deps}(e))return Et(t)||ba(t);r=()=>new t(...wr(e.deps))}var s;return r}function va(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function wa(e){return null!==e&&"object"==typeof e&&gr in e}function ka(e){return"function"==typeof e}const Ia=function(e,t,n){return function(e,t=null,n=null,r){const s=ga(e,t,n,r);return s._resolveInjectorDefTypes(),s}({name:n},t,e,n)};let Na=(()=>{class e{static create(e,t){return Array.isArray(e)?Ia(e,t,""):Ia(e.providers,e.parent,e.name||"")}}return e.THROW_IF_NOT_FOUND=pr,e.NULL=new ua,e.\u0275prov=Me({token:e,providedIn:"any",factory:()=>vr(la)}),e.__NG_ELEMENT_ID__=-1,e})();function Ca(e,t){In(Gt(e)[1],tn())}function Sa(e){let t=Object.getPrototypeOf(e.type.prototype).constructor,n=!0;const r=[e];for(;t;){let s;if($t(e))s=t.\u0275cmp||t.\u0275dir;else{if(t.\u0275cmp)throw new Error("Directives cannot inherit Components");s=t.\u0275dir}if(s){if(n){r.push(s);const t=e;t.inputs=_a(e.inputs),t.declaredInputs=_a(e.declaredInputs),t.outputs=_a(e.outputs);const n=s.hostBindings;n&&Ea(e,n);const a=s.viewQuery,i=s.contentQueries;if(a&&Ta(e,a),i&&$a(e,i),Ce(e.inputs,s.inputs),Ce(e.declaredInputs,s.declaredInputs),Ce(e.outputs,s.outputs),$t(s)&&s.data.animation){const t=e.data;t.animation=(t.animation||[]).concat(s.data.animation)}}const t=s.features;if(t)for(let r=0;r<t.length;r++){const s=t[r];s&&s.ngInherit&&s(e),s===Sa&&(n=!1)}}t=Object.getPrototypeOf(t)}!function(e){let t=0,n=null;for(let r=e.length-1;r>=0;r--){const s=e[r];s.hostVars=t+=s.hostVars,s.hostAttrs=Fn(s.hostAttrs,n=Fn(n,s.hostAttrs))}}(r)}function _a(e){return e===rt?{}:e===st?[]:e}function Ta(e,t){const n=e.viewQuery;e.viewQuery=n?(e,r)=>{t(e,r),n(e,r)}:t}function $a(e,t){const n=e.contentQueries;e.contentQueries=n?(e,r,s)=>{t(e,r,s),n(e,r,s)}:t}function Ea(e,t){const n=e.hostBindings;e.hostBindings=n?(e,r)=>{t(e,r),n(e,r)}:t}let Aa=null;function Ra(){if(!Aa){const e=nt.Symbol;if(e&&e.iterator)Aa=e.iterator;else{const e=Object.getOwnPropertyNames(Map.prototype);for(let t=0;t<e.length;++t){const n=e[t];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(Aa=n)}}}return Aa}function Fa(e){return!!Da(e)&&(Array.isArray(e)||!(e instanceof Map)&&Ra()in e)}function Da(e){return null!==e&&("function"==typeof e||"object"==typeof e)}function Oa(e,t,n){return!Object.is(e[t],n)&&(e[t]=n,!0)}function Ma(e,t,n,r){const s=Jt();return Oa(s,ln(),t)&&(Qt(),function(e,t,n,r,s,a){const i=Wt(e,t);!function(e,t,n,r,s,a,i){if(null==a)zt(e)?e.removeAttribute(t,s,n):t.removeAttribute(s);else{const o=null==i?Fe(a):i(a,r||"",s);zt(e)?e.setAttribute(t,s,o,n):n?t.setAttributeNS(n,s,o):t.setAttribute(s,o)}}(t[11],i,a,e.value,n,r,s)}(kn(),s,e,t,n,r)),Ma}function La(e,t,n,r,s,a,i,o){const l=Jt(),u=Qt(),c=e+kt,h=u.firstCreatePass?function(e,t,n,r,s,a,i,o,l){const u=t.consts,c=Ss(t,e,4,i||null,qt(u,o));Ls(t,n,c,qt(u,l)),In(t,c);const h=c.tViews=Os(2,c,r,s,a,t.directiveRegistry,t.pipeRegistry,null,t.schemas,u);return null!==t.queries&&(t.queries.template(t,c),h.queries=t.queries.embeddedTView(c)),c}(c,u,l,t,n,r,s,a,i):u.data[c];rn(h,!1);const d=l[11].createComment("");Xr(u,l,d,h),Er(d,l),Ys(l,l[c]=qs(d,l,d,h)),Tt(h)&&Rs(u,l,h),null!=i&&Fs(l,h,o)}function za(e,t=Ge.Default){const n=Jt();return null===n?vr(e,t):Kn(tn(),n,Ee(e),t)}function Pa(e,t,n){const r=Jt();return Oa(r,ln(),t)&&function(e,t,n,r,s,a,i,o){const l=Wt(t,n);let u,c=t.inputs;var h;null!=c&&(u=c[r])?(ia(e,n,u,r,s),_t(t)&&function(e,t){const n=Ht(t,e);16&n[2]||(n[2]|=64)}(n,t.index)):3&t.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=i?i(s,t.value||"",r):s,zt(a)?a.setProperty(l,r,s):Rn(r)||(l.setProperty?l.setProperty(r,s):l[r]=s))}(Qt(),kn(),r,e,t,r[11],n),Pa}function Ba(e,t,n,r,s){const a=s?"class":"style";ia(e,n,t.inputs[a],a,r)}function Va(e,t,n,r){const s=Jt(),a=Qt(),i=kt+e,o=s[11],l=s[i]=Br(o,t,Zt.lFrame.currentNamespace),u=a.firstCreatePass?function(e,t,n,r,s,a,i){const o=t.consts,l=Ss(t,e,2,s,qt(o,a));return Ls(t,n,l,qt(o,i)),null!==l.attrs&&oa(l,l.attrs,!1),null!==l.mergedAttrs&&oa(l,l.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,l),l}(i,a,s,0,t,n,r):a.data[i];rn(u,!0);const c=u.mergedAttrs;null!==c&&An(o,l,c);const h=u.classes;null!==h&&rs(o,l,h);const d=u.styles;null!==d&&ns(o,l,d),64!=(64&u.flags)&&Xr(a,s,l,u),0===Zt.lFrame.elementDepthCount&&Er(l,s),Zt.lFrame.elementDepthCount++,Tt(u)&&(Rs(a,s,u),function(e,t,n){if(St(t)){const r=t.directiveEnd;for(let s=t.directiveStart;s<r;s++){const t=e.data[s];t.contentQueries&&t.contentQueries(1,n[s],s)}}}(a,u,s)),null!==r&&Fs(s,u)}function Wa(){let e=tn();sn()?Zt.lFrame.isParent=!1:(e=e.parent,rn(e,!1));const t=e;Zt.lFrame.elementDepthCount--;const n=Qt();n.firstCreatePass&&(In(n,e),St(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function(e){return 0!=(16&e.flags)}(t)&&Ba(n,t,Jt(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function(e){return 0!=(32&e.flags)}(t)&&Ba(n,t,Jt(),t.stylesWithoutHost,!1)}function Ua(){return Jt()}function Ha(e){return!!e&&"function"==typeof e.then}function Ga(e,t,n=!1,r){const s=Jt(),a=Qt(),i=tn();return function(e,t,n,r,s,a,i=!1,o){const l=Tt(r),u=e.firstCreatePass&&sa(e),c=ra(t);let h=!0;if(3&r.type){const d=Wt(r,t),p=o?o(d):rt,f=p.target||d,m=c.length,g=o?e=>o(Bt(e[r.index])).target:r.index;if(zt(n)){let i=null;if(!o&&l&&(i=function(e,t,n,r){const s=e.cleanup;if(null!=s)for(let a=0;a<s.length-1;a+=2){const e=s[a];if(e===n&&s[a+1]===r){const e=t[7],n=s[a+2];return e.length>n?e[n]:null}"string"==typeof e&&(a+=2)}return null}(e,t,s,r.index)),null!==i)(i.__ngLastListenerFn__||i).__ngNextListenerFn__=a,i.__ngLastListenerFn__=a,h=!1;else{a=qa(r,t,a,!1);const e=n.listen(p.name||f,s,a);c.push(a,e),u&&u.push(s,g,m,m+1)}}else a=qa(r,t,a,!0),f.addEventListener(s,a,i),c.push(a),u&&u.push(s,g,m,i)}else a=qa(r,t,a,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const e=p.length;if(e)for(let n=0;n<e;n+=2){const e=t[p[n]][p[n+1]].subscribe(a),i=c.length;c.push(a,e),u&&u.push(s,r.index,i,-(i+1))}}}(a,s,s[11],i,e,t,n,r),Ga}function ja(e,t,n){try{return!1!==t(n)}catch(r){return aa(e,r),!1}}function qa(e,t,n,r){return function s(a){if(a===Function)return n;const i=2&e.flags?Ht(e.index,t):t;0==(32&t[2])&&Js(i);let o=ja(t,n,a),l=s.__ngNextListenerFn__;for(;l;)o=ja(t,l,a)&&o,l=l.__ngNextListenerFn__;return r&&!1===o&&(a.preventDefault(),a.returnValue=!1),o}}function Ka(e=1){return function(e){return(Zt.lFrame.contextLView=function(e,t){for(;e>0;)t=t[15],e--;return t}(e,Zt.lFrame.contextLView))[8]}(e)}const Xa=[];function Za(e,t,n,r,s){const a=e[n+1],i=null===t;let o=r?xs(a):ws(a),l=!1;for(;0!==o&&(!1===l||i);){const n=e[o+1];Ya(e[o],t)&&(l=!0,e[o+1]=r?Is(n):vs(n)),o=r?xs(n):ws(n)}l&&(e[n+1]=r?vs(a):Is(a))}function Ya(e,t){return null===e||null==t||(Array.isArray(e)?e[1]:e)===t||!(!Array.isArray(e)||"string"!=typeof t)&&dr(e,t)>=0}function Ja(e,t){return function(e,t,n,r){const s=Jt(),a=Qt(),i=function(e){const t=Zt.lFrame,n=t.bindingIndex;return t.bindingIndex=t.bindingIndex+2,n}();a.firstUpdatePass&&function(e,t,n,r){const s=e.data;if(null===s[n+1]){const a=s[vn()],i=function(e,t){return t>=e.expandoStartIndex}(e,n);(function(e,t){return 0!=(16&e.flags)})(a)&&null===t&&!i&&(t=!1),t=function(e,t,n,r){const s=function(e){const t=Zt.lFrame.currentDirectiveIndex;return-1===t?null:e[t]}(e);let a=t.residualClasses;if(null===s)0===t.classBindings&&(n=ei(n=Qa(null,e,t,n,r),t.attrs,r),a=null);else{const i=t.directiveStylingLast;if(-1===i||e[i]!==s)if(n=Qa(s,e,t,n,r),null===a){let n=function(e,t,n){const r=t.classBindings;if(0!==ws(r))return e[xs(r)]}(e,t);void 0!==n&&Array.isArray(n)&&(n=Qa(null,e,t,n[1],r),n=ei(n,t.attrs,r),function(e,t,n,r){e[xs(t.classBindings)]=r}(e,t,0,n))}else a=function(e,t,n){let r;const s=t.directiveEnd;for(let a=1+t.directiveStylingLast;a<s;a++)r=ei(r,e[a].hostAttrs,true);return ei(r,t.attrs,true)}(e,t)}return void 0!==a&&(t.residualClasses=a),n}(s,a,t,r),function(e,t,n,r,s,a){let i=t.classBindings,o=xs(i),l=ws(i);e[r]=n;let u,c=!1;if(Array.isArray(n)){const e=n;u=e[1],(null===u||dr(e,u)>0)&&(c=!0)}else u=n;if(s)if(0!==l){const t=xs(e[o+1]);e[r+1]=bs(t,o),0!==t&&(e[t+1]=ks(e[t+1],r)),e[o+1]=131071&e[o+1]|r<<17}else e[r+1]=bs(o,0),0!==o&&(e[o+1]=ks(e[o+1],r)),o=r;else e[r+1]=bs(l,0),0===o?o=r:e[l+1]=ks(e[l+1],r),l=r;c&&(e[r+1]=vs(e[r+1])),Za(e,u,r,!0),Za(e,u,r,!1),function(e,t,n,r,s){const a=e.residualClasses;null!=a&&"string"==typeof t&&dr(a,t)>=0&&(n[r+1]=Is(n[r+1]))}(t,u,e,r),i=bs(o,l),t.classBindings=i}(s,a,t,n,i)}}(a,e,i,true),t!==ms&&Oa(s,i,t)&&function(e,t,n,r,s,a,i,o){if(!(3&t.type))return;const l=e.data,u=l[o+1];ni(1==(1&u)?ti(l,t,n,s,ws(u),i):void 0)||(ni(a)||function(e){return 2==(2&e)}(u)&&(a=ti(l,null,n,s,o,i)),function(e,t,n,r,s){const a=zt(e);s?a?e.addClass(n,r):n.classList.add(r):a?e.removeClass(n,r):n.classList.remove(r)}(r,0,Vt(vn(),n),s,a))}(a,a.data[vn()],s,s[11],e,s[i+1]=function(e,t){return null==e||"object"==typeof e&&(e=Se(function(e){return e instanceof class{constructor(e){this.changingThisBreaksApplicationSecurity=e}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}?e.changingThisBreaksApplicationSecurity:e}(e))),e}(t),true,i)}(e,t),Ja}function Qa(e,t,n,r,s){let a=null;const i=n.directiveEnd;let o=n.directiveStylingLast;for(-1===o?o=n.directiveStart:o++;o<i&&(a=t[o],r=ei(r,a.hostAttrs,s),a!==e);)o++;return null!==e&&(n.directiveStylingLast=o),r}function ei(e,t,n){const r=n?1:2;let s=-1;if(null!==t)for(let a=0;a<t.length;a++){const i=t[a];"number"==typeof i?s=i:s===r&&(Array.isArray(e)||(e=void 0===e?[]:["",e]),cr(e,i,!!n||t[++a]))}return void 0===e?null:e}function ti(e,t,n,r,s,a){const i=null===t;let o;for(;s>0;){const t=e[s],a=Array.isArray(t),l=a?t[1]:t,u=null===l;let c=n[s+1];c===ms&&(c=u?Xa:void 0);let h=u?hr(c,r):l===r?c:void 0;if(a&&!ni(h)&&(h=hr(t,r)),ni(h)&&(o=h,i))return o;const d=e[s+1];s=i?xs(d):ws(d)}if(null!==t){let e=a?t.residualClasses:t.residualStyles;null!=e&&(o=hr(e,r))}return o}function ni(e){return void 0!==e}function ri(e,t=""){const n=Jt(),r=Qt(),s=e+kt,a=r.firstCreatePass?Ss(r,s,1,t,null):r.data[s],i=n[s]=function(e,t){return zt(e)?e.createText(t):e.createTextNode(t)}(n[11],t);Xr(r,n,i,a),rn(a,!1)}function si(e){return ai("",e,""),si}function ai(e,t,n){const r=Jt(),s=function(e,t,n,r){return Oa(e,ln(),n)?t+Fe(n)+r:ms}(r,e,t,n);return s!==ms&&function(e,t,n){const r=Vt(t,e);!function(e,t,n){zt(e)?e.setValue(t,n):t.textContent=n}(e[11],r,n)}(r,vn(),s),ai}const ii=void 0;var oi=["en",[["a","p"],["AM","PM"],ii],[["AM","PM"],ii,ii],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],ii,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],ii,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",ii,"{1} 'at' {0}",ii],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(e){let t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}];let li={};function ui(e){return e in li||(li[e]=nt.ng&&nt.ng.common&&nt.ng.common.locales&&nt.ng.common.locales[e]),li[e]}var ci=function(e){return e[e.LocaleId=0]="LocaleId",e[e.DayPeriodsFormat=1]="DayPeriodsFormat",e[e.DayPeriodsStandalone=2]="DayPeriodsStandalone",e[e.DaysFormat=3]="DaysFormat",e[e.DaysStandalone=4]="DaysStandalone",e[e.MonthsFormat=5]="MonthsFormat",e[e.MonthsStandalone=6]="MonthsStandalone",e[e.Eras=7]="Eras",e[e.FirstDayOfWeek=8]="FirstDayOfWeek",e[e.WeekendRange=9]="WeekendRange",e[e.DateFormat=10]="DateFormat",e[e.TimeFormat=11]="TimeFormat",e[e.DateTimeFormat=12]="DateTimeFormat",e[e.NumberSymbols=13]="NumberSymbols",e[e.NumberFormats=14]="NumberFormats",e[e.CurrencyCode=15]="CurrencyCode",e[e.CurrencySymbol=16]="CurrencySymbol",e[e.CurrencyName=17]="CurrencyName",e[e.Currencies=18]="Currencies",e[e.Directionality=19]="Directionality",e[e.PluralCase=20]="PluralCase",e[e.ExtraData=21]="ExtraData",e}({});const hi="en-US";let di=hi;function pi(e){var t,n;n="Expected localeId to be defined",null==(t=e)&&function(e,t,n,r){throw new Error(`ASSERTION ERROR: ${e} [Expected=> null != ${t} <=Actual]`)}(n,t),"string"==typeof e&&(di=e.toLowerCase().replace(/_/g,"-"))}function fi(e,t,n,r,s){if(e=Ee(e),Array.isArray(e))for(let a=0;a<e.length;a++)fi(e[a],t,n,r,s);else{const a=Qt(),i=Jt();let o=ka(e)?e:Ee(e.provide),l=xa(e);const u=tn(),c=1048575&u.providerIndexes,h=u.directiveStart,d=u.providerIndexes>>20;if(ka(e)||!e.multi){const r=new En(l,s,za),p=yi(o,t,s?c:c+d,h);-1===p?(Gn(Vn(u,i),a,o),mi(a,e,t.length),t.push(o),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(r),i.push(r)):(n[p]=r,i[p]=r)}else{const p=yi(o,t,c+d,h),f=yi(o,t,c,c+d),m=p>=0&&n[p],g=f>=0&&n[f];if(s&&!g||!s&&!m){Gn(Vn(u,i),a,o);const c=function(e,t,n,r,s){const a=new En(e,n,za);return a.multi=[],a.index=t,a.componentProviders=0,gi(a,s,r&&!n),a}(s?xi:bi,n.length,s,r,l);!s&&g&&(n[f].providerFactory=c),mi(a,e,t.length,0),t.push(o),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(c),i.push(c)}else mi(a,e,p>-1?p:f,gi(n[s?f:p],l,!s&&r));!s&&r&&g&&n[f].componentProviders++}}}function mi(e,t,n,r){const s=ka(t);if(s||t.useClass){const a=(t.useClass||t).prototype.ngOnDestroy;if(a){const i=e.destroyHooks||(e.destroyHooks=[]);if(!s&&t.multi){const e=i.indexOf(n);-1===e?i.push(n,[r,a]):i[e+1].push(r,a)}else i.push(n,a)}}}function gi(e,t,n){return n&&e.componentProviders++,e.multi.push(t)-1}function yi(e,t,n,r){for(let s=n;s<r;s++)if(t[s]===e)return s;return-1}function bi(e,t,n,r){return vi(this.multi,[])}function xi(e,t,n,r){const s=this.multi;let a;if(this.providerFactory){const e=this.providerFactory.componentProviders,t=Jn(n,n[1],this.providerFactory.index,r);a=t.slice(0,e),vi(s,a);for(let n=e;n<t.length;n++)a.push(t[n])}else a=[],vi(s,a);return a}function vi(e,t){for(let n=0;n<e.length;n++)t.push((0,e[n])());return t}function wi(e,t=[]){return n=>{n.providersResolver=(n,r)=>function(e,t,n){const r=Qt();if(r.firstCreatePass){const s=$t(e);fi(n,r.data,r.blueprint,s,!0),fi(t,r.data,r.blueprint,s,!1)}}(n,r?r(e):e,t)}}class ki{}class Ii{resolveComponentFactory(e){throw function(e){const t=Error(`No component factory found for ${Se(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(e)}}let Ni=(()=>{class e{}return e.NULL=new Ii,e})();function Ci(...e){}function Si(e,t){return new Ti(Wt(e,t))}const _i=function(){return Si(tn(),Jt())};let Ti=(()=>{class e{constructor(e){this.nativeElement=e}}return e.__NG_ELEMENT_ID__=_i,e})();class $i{}let Ei=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>Ai(),e})();const Ai=function(){const e=Jt(),t=Ht(tn().index,e);return function(e){return e[11]}(Nt(t)?t:e)};let Ri=(()=>{class e{}return e.\u0275prov=Me({token:e,providedIn:"root",factory:()=>null}),e})();class Fi{constructor(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}}const Di=new Fi("11.2.3");class Oi{constructor(){}supports(e){return Fa(e)}create(e){return new Li(e)}}const Mi=(e,t)=>t;class Li{constructor(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||Mi}forEachItem(e){let t;for(t=this._itHead;null!==t;t=t._next)e(t)}forEachOperation(e){let t=this._itHead,n=this._removalsHead,r=0,s=null;for(;t||n;){const a=!n||t&&t.currentIndex<Vi(n,r,s)?t:n,i=Vi(a,r,s),o=a.currentIndex;if(a===n)r--,n=n._nextRemoved;else if(t=t._next,null==a.previousIndex)r++;else{s||(s=[]);const e=i-r,t=o-r;if(e!=t){for(let n=0;n<e;n++){const r=n<s.length?s[n]:s[n]=0,a=r+n;t<=a&&a<e&&(s[n]=r+1)}s[a.previousIndex]=t-e}}i!==o&&e(a,i,o)}}forEachPreviousItem(e){let t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachMovedItem(e){let t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}forEachIdentityChange(e){let t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)}diff(e){if(null==e&&(e=[]),!Fa(e))throw new Error(`Error trying to diff '${Se(e)}'. Only arrays and iterables are allowed`);return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t,n,r,s=this._itHead,a=!1;if(Array.isArray(e)){this.length=e.length;for(let t=0;t<this.length;t++)n=e[t],r=this._trackByFn(t,n),null!==s&&Object.is(s.trackById,r)?(a&&(s=this._verifyReinsertion(s,n,r,t)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,t),a=!0),s=s._next}else t=0,function(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)t(e[n]);else{const n=e[Ra()]();let r;for(;!(r=n.next()).done;)t(r.value)}}(e,e=>{r=this._trackByFn(t,e),null!==s&&Object.is(s.trackById,r)?(a&&(s=this._verifyReinsertion(s,e,r,t)),Object.is(s.item,e)||this._addIdentityChange(s,e)):(s=this._mismatch(s,e,r,t),a=!0),s=s._next,t++}),this.length=t;return this._truncate(s),this.collection=e,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let e;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=e._nextMoved)e.previousIndex=e.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(e,t,n,r){let s;return null===e?s=this._itTail:(s=e._prev,this._remove(e)),null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,s,r)):null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,s,r)):e=this._addAfter(new zi(t,n),s,r),e}_verifyReinsertion(e,t,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?e=this._reinsertAfter(s,e._prev,r):e.currentIndex!=r&&(e.currentIndex=r,this._addToMoves(e,r)),e}_truncate(e){for(;null!==e;){const t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);const r=e._prevRemoved,s=e._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(e,t,n),this._addToMoves(e,n),e}_moveAfter(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e}_addAfter(e,t,n){return this._insertAfter(e,t,n),this._additionsTail=null===this._additionsTail?this._additionsHead=e:this._additionsTail._nextAdded=e,e}_insertAfter(e,t,n){const r=null===t?this._itHead:t._next;return e._next=r,e._prev=t,null===r?this._itTail=e:r._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new Bi),this._linkedRecords.put(e),e.currentIndex=n,e}_remove(e){return this._addToRemovals(this._unlink(e))}_unlink(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);const t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e}_addToMoves(e,t){return e.previousIndex===t||(this._movesTail=null===this._movesTail?this._movesHead=e:this._movesTail._nextMoved=e),e}_addToRemovals(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Bi),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e}_addIdentityChange(e,t){return e.item=t,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=e:this._identityChangesTail._nextIdentityChange=e,e}}class zi{constructor(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class Pi{constructor(){this._head=null,this._tail=null}add(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)}get(e,t){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&Object.is(n.trackById,e))return n;return null}remove(e){const t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head}}class Bi{constructor(){this.map=new Map}put(e){const t=e.trackById;let n=this.map.get(t);n||(n=new Pi,this.map.set(t,n)),n.add(e)}get(e,t){const n=this.map.get(e);return n?n.get(e,t):null}remove(e){const t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Vi(e,t,n){const r=e.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+t+s}class Wi{constructor(){}supports(e){return e instanceof Map||Da(e)}create(){return new Ui}}class Ui{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(e){let t;for(t=this._mapHead;null!==t;t=t._next)e(t)}forEachPreviousItem(e){let t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)}forEachChangedItem(e){let t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}diff(e){if(e){if(!(e instanceof Map||Da(e)))throw new Error(`Error trying to diff '${Se(e)}'. Only maps and objects are allowed`)}else e=new Map;return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t=this._mapHead;if(this._appendAfter=null,this._forEach(e,(e,n)=>{if(t&&t.key===n)this._maybeAddToChanges(t,e),this._appendAfter=t,t=t._next;else{const r=this._getOrCreateRecordForKey(n,e);t=this._insertBeforeOrAppend(t,r)}}),t){t._prev&&(t._prev._next=null),this._removalsHead=t;for(let e=t;null!==e;e=e._nextRemoved)e===this._mapHead&&(this._mapHead=null),this._records.delete(e.key),e._nextRemoved=e._next,e.previousValue=e.currentValue,e.currentValue=null,e._prev=null,e._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(e,t){if(e){const n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null}_getOrCreateRecordForKey(e,t){if(this._records.has(e)){const n=this._records.get(e);this._maybeAddToChanges(n,t);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new Hi(e);return this._records.set(e,n),n.currentValue=t,this._addToAdditions(n),n}_reset(){if(this.isDirty){let e;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(e,t){Object.is(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))}_addToAdditions(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)}_addToChanges(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)}_forEach(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(n=>t(e[n],n))}}class Hi{constructor(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function Gi(){return new ji([new Oi])}let ji=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(null!=n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||Gi()),deps:[[e,new Cr,new Nr]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(null!=t)return t;throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);var n}}return e.\u0275prov=Me({token:e,providedIn:"root",factory:Gi}),e})();function qi(){return new Ki([new Wi])}let Ki=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||qi()),deps:[[e,new Cr,new Nr]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(t)return t;throw new Error(`Cannot find a differ supporting object '${e}'`)}}return e.\u0275prov=Me({token:e,providedIn:"root",factory:qi}),e})();function Xi(e,t,n,r,s=!1){for(;null!==n;){const a=t[n.index];if(null!==a&&r.push(Bt(a)),Ct(a))for(let e=It;e<a.length;e++){const t=a[e],n=t[1].firstChild;null!==n&&Xi(t[1],t,n,r)}const i=n.type;if(8&i)Xi(e,t,n.child,r);else if(32&i){const e=Dr(n,t);let s;for(;s=e();)r.push(s)}else if(16&i){const e=Yr(t,n);if(Array.isArray(e))r.push(...e);else{const n=Or(t[16]);Xi(n[1],n,e,r,!0)}}n=s?n.projectionNext:n.next}return r}class Zi{constructor(e,t){this._lView=e,this._cdRefInjectingView=t,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const e=this._lView,t=e[1];return Xi(t,e,t.firstChild,[])}get context(){return this._lView[8]}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const e=this._lView[3];if(Ct(e)){const t=e[8],n=t?t.indexOf(this):-1;n>-1&&(Wr(e,n),ur(t,n))}this._attachedToViewContainer=!1}Ur(this._lView[1],this._lView)}onDestroy(e){!function(e,t,n,r){const s=ra(t);s.push(r)}(0,this._lView,0,e)}markForCheck(){Js(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Qs(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(e,t,n){on(!0);try{Qs(e,t,n)}finally{on(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var e;this._appRef=null,es(this._lView[1],e=this._lView,e[11],2,null,null)}attachToAppRef(e){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e}}class Yi extends Zi{constructor(e){super(e),this._view=e}detectChanges(){ea(this._view)}checkNoChanges(){!function(e){on(!0);try{ea(e)}finally{on(!1)}}(this._view)}get context(){return null}}const Ji=[new Wi],Qi=new ji([new Oi]),eo=new Ki(Ji),to=function(){return e=tn(),t=Jt(),4&e.type?new so(t,e,Si(e,t)):null;var e,t};let no=(()=>{class e{}return e.__NG_ELEMENT_ID__=to,e})();const ro=no,so=class extends ro{constructor(e,t,n){super(),this._declarationLView=e,this._declarationTContainer=t,this.elementRef=n}createEmbeddedView(e){const t=this._declarationTContainer.tViews,n=Cs(this._declarationLView,t,e,16,null,t.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const r=this._declarationLView[19];return null!==r&&(n[19]=r.createEmbeddedView(t)),Ts(t,n,e),new Zi(n)}};class ao{}const io=function(){return function(e,t){let n;const r=t[e.index];if(Ct(r))n=r;else{let s;if(8&e.type)s=Bt(r);else{const n=t[11];s=n.createComment("");const r=Wt(e,t);Gr(n,Kr(n,r),s,function(e,t){return zt(e)?e.nextSibling(t):t.nextSibling}(n,r),!1)}t[e.index]=n=qs(r,t,s,e),Ys(t,n)}return new uo(n,e,t)}(tn(),Jt())};let oo=(()=>{class e{}return e.__NG_ELEMENT_ID__=io,e})();const lo=oo,uo=class extends lo{constructor(e,t,n){super(),this._lContainer=e,this._hostTNode=t,this._hostLView=n}get element(){return Si(this._hostTNode,this._hostLView)}get injector(){return new tr(this._hostTNode,this._hostLView)}get parentInjector(){const e=Hn(this._hostTNode,this._hostLView);if(On(e)){const t=Ln(e,this._hostLView),n=Mn(e);return new tr(t[1].data[n+8],t)}return new tr(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(e){const t=co(this._lContainer);return null!==t&&t[e]||null}get length(){return this._lContainer.length-It}createEmbeddedView(e,t,n){const r=e.createEmbeddedView(t||{});return this.insert(r,n),r}createComponent(e,t,n,r,s){const a=n||this.parentInjector;if(!s&&null==e.ngModule&&a){const e=a.get(ao,null);e&&(s=e)}const i=e.create(a,r,void 0,s);return this.insert(i.hostView,t),i}insert(e,t){const n=e._lView,r=n[1];if(Ct(n[3])){const t=this.indexOf(e);if(-1!==t)this.detach(t);else{const t=n[3],r=new uo(t,t[6],t[3]);r.detach(r.indexOf(e))}}const s=this._adjustIndex(t),a=this._lContainer;!function(e,t,n,r){const s=It+r,a=n.length;r>0&&(n[s-1][4]=t),r<a-It?(t[4]=n[s],lr(n,It+r,t)):(n.push(t),t[4]=null),t[3]=n;const i=t[17];null!==i&&n!==i&&function(e,t){const n=e[9];t[16]!==t[3][3][16]&&(e[2]=!0),null===n?e[9]=[t]:n.push(t)}(i,t);const o=t[19];null!==o&&o.insertView(e),t[2]|=128}(r,n,a,s);const i=Jr(s,a),o=n[11],l=Kr(o,a[7]);return null!==l&&function(e,t,n,r,s,a){r[0]=s,r[6]=t,es(e,r,n,1,s,a)}(r,a[6],o,n,l,i),e.attachToViewContainerRef(),lr(ho(a),s,e),e}move(e,t){return this.insert(e,t)}indexOf(e){const t=co(this._lContainer);return null!==t?t.indexOf(e):-1}remove(e){const t=this._adjustIndex(e,-1),n=Wr(this._lContainer,t);n&&(ur(ho(this._lContainer),t),Ur(n[1],n))}detach(e){const t=this._adjustIndex(e,-1),n=Wr(this._lContainer,t);return n&&null!=ur(ho(this._lContainer),t)?new Zi(n):null}_adjustIndex(e,t=0){return null==e?this.length+t:e}};function co(e){return e[8]}function ho(e){return e[8]||(e[8]=[])}const po={};class fo extends Ni{constructor(e){super(),this.ngModule=e}resolveComponentFactory(e){const t=vt(e);return new yo(t,this.ngModule)}}function mo(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}const go=new ir("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Ar});class yo extends ki{constructor(e,t){super(),this.componentDef=e,this.ngModule=t,this.componentType=e.type,this.selector=e.selectors.map(fs).join(","),this.ngContentSelectors=e.ngContentSelectors?e.ngContentSelectors:[],this.isBoundToModule=!!t}get inputs(){return mo(this.componentDef.inputs)}get outputs(){return mo(this.componentDef.outputs)}create(e,t,n,r){const s=(r=r||this.ngModule)?function(e,t){return{get:(n,r,s)=>{const a=e.get(n,po,s);return a!==po||r===po?a:t.get(n,r,s)}}}(e,r.injector):e,a=s.get($i,Pt),i=s.get(Ri,null),o=a.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",u=n?function(e,t,n){if(zt(e))return e.selectRootElement(t,n===Ye.ShadowDom);let r="string"==typeof t?e.querySelector(t):t;return r.textContent="",r}(o,n,this.componentDef.encapsulation):Br(a.createRenderer(null,this.componentDef),l,function(e){const t=e.toLowerCase();return"svg"===t?"http://www.w3.org/2000/svg":"math"===t?"http://www.w3.org/1998/MathML/":null}(l)),c=this.componentDef.onPush?576:528,h={components:[],scheduler:Ar,clean:na,playerHandler:null,flags:0},d=Os(0,null,null,1,0,null,null,null,null,null),p=Cs(null,d,h,c,null,null,a,o,i,s);let f,m;fn(p);try{const e=function(e,t,n,r,s,a){const i=n[1];n[20]=e;const o=Ss(i,20,2,"#host",null),l=o.mergedAttrs=t.hostAttrs;null!==l&&(oa(o,l,!0),null!==e&&(An(s,e,l),null!==o.classes&&rs(s,e,o.classes),null!==o.styles&&ns(s,e,o.styles)));const u=r.createRenderer(e,t),c=Cs(n,Ds(t),null,t.onPush?64:16,n[20],o,r,u,null,null);return i.firstCreatePass&&(Gn(Vn(o,n),i,t.type),Bs(i,o),Ws(o,n.length,1)),Ys(n,c),n[20]=c}(u,this.componentDef,p,a,o);if(u)if(n)An(o,u,["ng-version",Di.full]);else{const{attrs:e,classes:t}=function(e){const t=[],n=[];let r=1,s=2;for(;r<e.length;){let a=e[r];if("string"==typeof a)2===s?""!==a&&t.push(a,e[++r]):8===s&&n.push(a);else{if(!cs(s))break;s=a}r++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);e&&An(o,u,e),t&&t.length>0&&rs(o,u,t.join(" "))}if(m=Ut(d,kt),void 0!==t){const e=m.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=t[n];e.push(null!=r?Array.from(r):null)}}f=function(e,t,n,r,s){const a=n[1],i=function(e,t,n){const r=tn();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),Us(e,r,t,_s(e,t,1,null),n));const s=Jn(t,e,r.directiveStart,r);Er(s,t);const a=Wt(r,t);return a&&Er(a,t),s}(a,n,t);if(r.components.push(i),e[8]=i,s&&s.forEach(e=>e(i,t)),t.contentQueries){const e=tn();t.contentQueries(1,i,e.directiveStart)}const o=tn();return!a.firstCreatePass||null===t.hostBindings&&null===t.hostAttrs||(wn(o.index),zs(n[1],o,0,o.directiveStart,o.directiveEnd,t),Ps(t,i)),i}(e,this.componentDef,p,h,[Ca]),Ts(d,p,null)}finally{xn()}return new bo(this.componentType,f,Si(m,p),p,m)}}class bo extends class{}{constructor(e,t,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=t,this.hostView=this.changeDetectorRef=new Yi(r),this.componentType=e}get injector(){return new tr(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(e){this.hostView.onDestroy(e)}}const xo=new Map;class vo extends ao{constructor(e,t){super(),this._parent=t,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new fo(this);const n=wt(e),r=e[ut]||null;r&&pi(r),this._bootstrapComponents=Rr(n.bootstrap),this._r3Injector=ga(e,t,[{provide:ao,useValue:this},{provide:Ni,useValue:this.componentFactoryResolver}],Se(e)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(e)}get(e,t=Na.THROW_IF_NOT_FOUND,n=Ge.Default){return e===Na||e===ao||e===la?this:this._r3Injector.get(e,t,n)}destroy(){const e=this._r3Injector;!e.destroyed&&e.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(e){this.destroyCbs.push(e)}}class wo extends class{}{constructor(e){super(),this.moduleType=e,null!==wt(e)&&function(e){const t=new Set;!function e(n){const r=wt(n,!0),s=r.id;null!==s&&(function(e,t,n){if(t&&t!==n)throw new Error(`Duplicate module registered for ${e} - ${Se(t)} vs ${Se(t.name)}`)}(s,xo.get(s),n),xo.set(s,n));const a=Rr(r.imports);for(const i of a)t.has(i)||(t.add(i),e(i))}(e)}(e)}create(e){return new vo(this.moduleType,e)}}const ko=class extends J{constructor(e=!1){super(),this.__isAsync=e}emit(e){super.next(e)}subscribe(e,t,n){let r,s=e=>null,a=()=>null;e&&"object"==typeof e?(r=this.__isAsync?t=>{setTimeout(()=>e.next(t))}:t=>{e.next(t)},e.error&&(s=this.__isAsync?t=>{setTimeout(()=>e.error(t))}:t=>{e.error(t)}),e.complete&&(a=this.__isAsync?()=>{setTimeout(()=>e.complete())}:()=>{e.complete()})):(r=this.__isAsync?t=>{setTimeout(()=>e(t))}:t=>{e(t)},t&&(s=this.__isAsync?e=>{setTimeout(()=>t(e))}:e=>{t(e)}),n&&(a=this.__isAsync?()=>{setTimeout(()=>n())}:()=>{n()}));const i=super.subscribe(r,s,a);return e instanceof B&&e.add(i),i}},Io=new ir("Application Initializer");let No=(()=>{class e{constructor(e){this.appInits=e,this.resolve=Ci,this.reject=Ci,this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}runInitializers(){if(this.initialized)return;const e=[],t=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const t=this.appInits[n]();Ha(t)&&e.push(t)}Promise.all(e).then(()=>{t()}).catch(e=>{this.reject(e)}),0===e.length&&t(),this.initialized=!0}}return e.\u0275fac=function(t){return new(t||e)(vr(Io,8))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Co=new ir("AppId"),So={provide:Co,useFactory:function(){return`${_o()}${_o()}${_o()}`},deps:[]};function _o(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const To=new ir("Platform Initializer"),$o=new ir("Platform ID"),Eo=new ir("appBootstrapListener");let Ao=(()=>{class e{log(e){console.log(e)}warn(e){console.warn(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Ro=new ir("LocaleId"),Fo=new ir("DefaultCurrencyCode");class Do{constructor(e,t){this.ngModuleFactory=e,this.componentFactories=t}}const Oo=function(e){return new wo(e)},Mo=Oo,Lo=function(e){return Promise.resolve(Oo(e))},zo=function(e){const t=Oo(e),n=Rr(wt(e).declarations).reduce((e,t)=>{const n=vt(t);return n&&e.push(new yo(n)),e},[]);return new Do(t,n)},Po=zo,Bo=function(e){return Promise.resolve(zo(e))};let Vo=(()=>{class e{constructor(){this.compileModuleSync=Mo,this.compileModuleAsync=Lo,this.compileModuleAndAllComponentsSync=Po,this.compileModuleAndAllComponentsAsync=Bo}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Wo=(()=>Promise.resolve(0))();function Uo(e){"undefined"==typeof Zone?Wo.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class Ho{constructor({enableLongStackTrace:e=!1,shouldCoalesceEventChangeDetection:t=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new ko(!1),this.onMicrotaskEmpty=new ko(!1),this.onStable=new ko(!1),this.onError=new ko(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),e&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&t,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let e=nt.requestAnimationFrame,t=nt.cancelAnimationFrame;if("undefined"!=typeof Zone&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const r=t[Zone.__symbol__("OriginalDelegate")];r&&(t=r)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function(e){const t=()=>{!function(e){-1===e.lastRequestAnimationFrameId&&(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(nt,()=>{e.fakeTopEventTask||(e.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{e.lastRequestAnimationFrameId=-1,qo(e),jo(e)},void 0,()=>{},()=>{})),e.fakeTopEventTask.invoke()}),qo(e))}(e)};e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,s,a,i,o)=>{try{return Ko(e),n.invokeTask(s,a,i,o)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===a.type||e.shouldCoalesceRunChangeDetection)&&t(),Xo(e)}},onInvoke:(n,r,s,a,i,o,l)=>{try{return Ko(e),n.invoke(s,a,i,o,l)}finally{e.shouldCoalesceRunChangeDetection&&t(),Xo(e)}},onHasTask:(t,n,r,s)=>{t.hasTask(r,s),n===r&&("microTask"==s.change?(e._hasPendingMicrotasks=s.microTask,qo(e),jo(e)):"macroTask"==s.change&&(e.hasPendingMacrotasks=s.macroTask))},onHandleError:(t,n,r,s)=>(t.handleError(r,s),e.runOutsideAngular(()=>e.onError.emit(s)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!Ho.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(Ho.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(e,t,n){return this._inner.run(e,t,n)}runTask(e,t,n,r){const s=this._inner,a=s.scheduleEventTask("NgZoneEvent: "+r,e,Go,Ci,Ci);try{return s.runTask(a,t,n)}finally{s.cancelTask(a)}}runGuarded(e,t,n){return this._inner.runGuarded(e,t,n)}runOutsideAngular(e){return this._outer.run(e)}}const Go={};function jo(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function qo(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&-1!==e.lastRequestAnimationFrameId)}function Ko(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function Xo(e){e._nesting--,jo(e)}class Zo{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new ko,this.onMicrotaskEmpty=new ko,this.onStable=new ko,this.onError=new ko}run(e,t,n){return e.apply(t,n)}runGuarded(e,t,n){return e.apply(t,n)}runOutsideAngular(e){return e()}runTask(e,t,n,r){return e.apply(t,n)}}let Yo=(()=>{class e{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{Ho.assertNotInAngularZone(),Uo(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())Uo(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(t=>!t.updateCb||!t.updateCb(e)||(clearTimeout(t.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,t,n){let r=-1;t&&t>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(e=>e.timeoutId!==r),e(this._didWork,this.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:r,updateCb:n})}whenStable(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,t,n){return[]}}return e.\u0275fac=function(t){return new(t||e)(vr(Ho))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),Jo=(()=>{class e{constructor(){this._applications=new Map,tl.addToWindow(this)}registerApplication(e,t){this._applications.set(e,t)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,t=!0){return tl.findTestabilityInTree(this,e,t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class Qo{addToWindow(e){}findTestabilityInTree(e,t,n){return null}}let el,tl=new Qo,nl=!0,rl=!1;const sl=new ir("AllowMultipleToken");function al(e,t,n=[]){const r=`Platform: ${t}`,s=new ir(r);return(t=[])=>{let a=il();if(!a||a.injector.get(sl,!1))if(e)e(n.concat(t).concat({provide:s,useValue:!0}));else{const e=n.concat(t).concat({provide:s,useValue:!0},{provide:ca,useValue:"platform"});!function(e){if(el&&!el.destroyed&&!el.injector.get(sl,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");el=e.get(ol);const t=e.get(To,null);t&&t.forEach(e=>e())}(Na.create({providers:e,name:r}))}return function(e){const t=il();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(s)}}function il(){return el&&!el.destroyed?el:null}let ol=(()=>{class e{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,t){const n=function(e,t){let n;return n="noop"===e?new Zo:("zone.js"===e?void 0:e)||new Ho({enableLongStackTrace:(rl=!0,nl),shouldCoalesceEventChangeDetection:!!(null==t?void 0:t.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==t?void 0:t.ngZoneRunCoalescing)}),n}(t?t.ngZone:void 0,{ngZoneEventCoalescing:t&&t.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:t&&t.ngZoneRunCoalescing||!1}),r=[{provide:Ho,useValue:n}];return n.run(()=>{const t=Na.create({providers:r,parent:this.injector,name:e.moduleType.name}),s=e.create(t),a=s.injector.get($r,null);if(!a)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const e=n.onError.subscribe({next:e=>{a.handleError(e)}});s.onDestroy(()=>{cl(this._modules,s),e.unsubscribe()})}),function(e,t,n){try{const r=n();return Ha(r)?r.catch(n=>{throw t.runOutsideAngular(()=>e.handleError(n)),n}):r}catch(r){throw t.runOutsideAngular(()=>e.handleError(r)),r}}(a,n,()=>{const e=s.injector.get(No);return e.runInitializers(),e.donePromise.then(()=>(pi(s.injector.get(Ro,hi)||hi),this._moduleDoBootstrap(s),s))})})}bootstrapModule(e,t=[]){const n=ll({},t);return function(e,t,n){const r=new wo(n);return Promise.resolve(r)}(0,0,e).then(e=>this.bootstrapModuleFactory(e,n))}_moduleDoBootstrap(e){const t=e.injector.get(ul);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(e=>t.bootstrap(e));else{if(!e.instance.ngDoBootstrap)throw new Error(`The module ${Se(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);e.instance.ngDoBootstrap(t)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(t){return new(t||e)(vr(Na))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();function ll(e,t){return Array.isArray(t)?t.reduce(ll,e):Object.assign(Object.assign({},e),t)}let ul=(()=>{class e{constructor(e,t,n,r,s){this._zone=e,this._injector=t,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const a=new q(e=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{e.next(this._stable),e.complete()})}),i=new q(e=>{let t;this._zone.runOutsideAngular(()=>{t=this._zone.onStable.subscribe(()=>{Ho.assertNotInAngularZone(),Uo(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,e.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{Ho.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{e.next(!1)}))});return()=>{t.unsubscribe(),n.unsubscribe()}});this.isStable=ge(a,i.pipe(e=>{return ye()((t=Ie,function(e){let n;n="function"==typeof t?t:function(){return t};const r=Object.create(e,we);return r.source=e,r.subjectFactory=n,r})(e));var t}))}bootstrap(e,t){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=e instanceof ki?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(ao),s=n.create(Na.NULL,[],t||n.selector,r),a=s.location.nativeElement,i=s.injector.get(Yo,null),o=i&&s.injector.get(Jo);return i&&o&&o.registerApplication(a,i),s.onDestroy(()=>{this.detachView(s.hostView),cl(this.components,s),o&&o.unregisterApplication(a)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const t=e;this._views.push(t),t.attachToAppRef(this)}detachView(e){const t=e;cl(this._views,t),t.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(Eo,[]).concat(this._bootstrapListeners).forEach(t=>t(e))}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return e.\u0275fac=function(t){return new(t||e)(vr(Ho),vr(Na),vr($r),vr(Ni),vr(No))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();function cl(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const hl=al(null,"core",[{provide:$o,useValue:"unknown"},{provide:ol,deps:[Na]},{provide:Jo,deps:[]},{provide:Ao,deps:[]}]),dl=[{provide:ul,useClass:ul,deps:[Ho,Na,$r,Ni,No]},{provide:go,deps:[Ho],useFactory:function(e){let t=[];return e.onStable.subscribe(()=>{for(;t.length;)t.pop()()}),function(e){t.push(e)}}},{provide:No,useClass:No,deps:[[new Nr,Io]]},{provide:Vo,useClass:Vo,deps:[]},So,{provide:ji,useFactory:function(){return Qi},deps:[]},{provide:Ki,useFactory:function(){return eo},deps:[]},{provide:Ro,useFactory:function(e){return pi(e=e||"undefined"!=typeof $localize&&$localize.locale||hi),e},deps:[[new Ir(Ro),new Nr,new Cr]]},{provide:Fo,useValue:"USD"}];let pl=(()=>{class e{constructor(e){}}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)(vr(ul))},providers:dl}),e})(),fl=null;function ml(){return fl}const gl=new ir("DocumentToken");var yl=function(e){return e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.Two=2]="Two",e[e.Few=3]="Few",e[e.Many=4]="Many",e[e.Other=5]="Other",e}({});class bl{}let xl=(()=>{class e extends bl{constructor(e){super(),this.locale=e}getPluralCategory(e,t){switch(function(e){return function(e){const t=function(e){return e.toLowerCase().replace(/_/g,"-")}(e);let n=ui(t);if(n)return n;const r=t.split("-")[0];if(n=ui(r),n)return n;if("en"===r)return oi;throw new Error(`Missing locale data for the locale "${e}".`)}(e)[ci.PluralCase]}(t||this.locale)(e)){case yl.Zero:return"zero";case yl.One:return"one";case yl.Two:return"two";case yl.Few:return"few";case yl.Many:return"many";default:return"other"}}}return e.\u0275fac=function(t){return new(t||e)(vr(Ro))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class vl{constructor(e,t,n,r){this.$implicit=e,this.ngForOf=t,this.index=n,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let wl=(()=>{class e{constructor(e,t,n){this._viewContainer=e,this._template=t,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(e){this._ngForOf=e,this._ngForOfDirty=!0}set ngForTrackBy(e){this._trackByFn=e}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(e){e&&(this._template=e)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const n=this._ngForOf;if(!this._differ&&n)try{this._differ=this._differs.find(n).create(this.ngForTrackBy)}catch(t){throw new Error(`Cannot find a differ supporting object '${n}' of type '${e=n,e.name||typeof e}'. NgFor only supports binding to Iterables such as Arrays.`)}}var e;if(this._differ){const e=this._differ.diff(this._ngForOf);e&&this._applyChanges(e)}}_applyChanges(e){const t=[];e.forEachOperation((e,n,r)=>{if(null==e.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new vl(null,this._ngForOf,-1,-1),null===r?void 0:r),s=new kl(e,n);t.push(s)}else if(null==r)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const s=this._viewContainer.get(n);this._viewContainer.move(s,r);const a=new kl(e,s);t.push(a)}});for(let n=0;n<t.length;n++)this._perViewChange(t[n].view,t[n].record);for(let n=0,r=this._viewContainer.length;n<r;n++){const e=this._viewContainer.get(n);e.context.index=n,e.context.count=r,e.context.ngForOf=this._ngForOf}e.forEachIdentityChange(e=>{this._viewContainer.get(e.currentIndex).context.$implicit=e.item})}_perViewChange(e,t){e.context.$implicit=t.item}static ngTemplateContextGuard(e,t){return!0}}return e.\u0275fac=function(t){return new(t||e)(za(oo),za(no),za(ji))},e.\u0275dir=xt({type:e,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),e})();class kl{constructor(e,t){this.record=e,this.view=t}}let Il=(()=>{class e{}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)},providers:[{provide:bl,useClass:xl}]}),e})();class Nl extends class extends class{}{constructor(){super()}supportsDOMEvents(){return!0}}{static makeCurrent(){var e;e=new Nl,fl||(fl=e)}getProperty(e,t){return e[t]}log(e){window.console&&window.console.log&&window.console.log(e)}logGroup(e){window.console&&window.console.group&&window.console.group(e)}logGroupEnd(){window.console&&window.console.groupEnd&&window.console.groupEnd()}onAndCancel(e,t,n){return e.addEventListener(t,n,!1),()=>{e.removeEventListener(t,n,!1)}}dispatchEvent(e,t){e.dispatchEvent(t)}remove(e){return e.parentNode&&e.parentNode.removeChild(e),e}getValue(e){return e.value}createElement(e,t){return(t=t||this.getDefaultDocument()).createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null}getHistory(){return window.history}getLocation(){return window.location}getBaseHref(e){const t=Sl||(Sl=document.querySelector("base"),Sl)?Sl.getAttribute("href"):null;return null==t?null:(n=t,Cl||(Cl=document.createElement("a")),Cl.setAttribute("href",n),"/"===Cl.pathname.charAt(0)?Cl.pathname:"/"+Cl.pathname);var n}resetBaseElement(){Sl=null}getUserAgent(){return window.navigator.userAgent}performanceNow(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()}supportsCookies(){return!0}getCookie(e){return function(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const e=n.indexOf("="),[r,s]=-1==e?[n,""]:[n.slice(0,e),n.slice(e+1)];if(r.trim()===t)return decodeURIComponent(s)}return null}(document.cookie,e)}}let Cl,Sl=null;const _l=new ir("TRANSITION_ID"),Tl=[{provide:Io,useFactory:function(e,t,n){return()=>{n.get(No).donePromise.then(()=>{const n=ml();Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t=>t.getAttribute("ng-transition")===e).forEach(e=>n.remove(e))})}},deps:[_l,gl,Na],multi:!0}];class $l{static init(){var e;e=new $l,tl=e}addToWindow(e){nt.getAngularTestability=(t,n=!0)=>{const r=e.findTestabilityInTree(t,n);if(null==r)throw new Error("Could not find testability for element.");return r},nt.getAllAngularTestabilities=()=>e.getAllTestabilities(),nt.getAllAngularRootElements=()=>e.getAllRootElements(),nt.frameworkStabilizers||(nt.frameworkStabilizers=[]),nt.frameworkStabilizers.push(e=>{const t=nt.getAllAngularTestabilities();let n=t.length,r=!1;const s=function(t){r=r||t,n--,0==n&&e(r)};t.forEach(function(e){e.whenStable(s)})})}findTestabilityInTree(e,t,n){if(null==t)return null;const r=e.getTestability(t);return null!=r?r:n?ml().isShadowRoot(t)?this.findTestabilityInTree(e,t.host,!0):this.findTestabilityInTree(e,t.parentElement,!0):null}}const El=new ir("EventManagerPlugins");let Al=(()=>{class e{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(e=>e.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)}addGlobalEventListener(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)}getZone(){return this._zone}_findPluginFor(e){const t=this._eventNameToPlugin.get(e);if(t)return t;const n=this._plugins;for(let r=0;r<n.length;r++){const t=n[r];if(t.supports(e))return this._eventNameToPlugin.set(e,t),t}throw new Error(`No event manager plugin found for event ${e}`)}}return e.\u0275fac=function(t){return new(t||e)(vr(El),vr(Ho))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class Rl{constructor(e){this._doc=e}addGlobalEventListener(e,t,n){const r=ml().getGlobalEventTarget(this._doc,e);if(!r)throw new Error(`Unsupported event target ${r} for event ${t}`);return this.addEventListener(r,t,n)}}let Fl=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(e){const t=new Set;e.forEach(e=>{this._stylesSet.has(e)||(this._stylesSet.add(e),t.add(e))}),this.onStylesAdded(t)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),Dl=(()=>{class e extends Fl{constructor(e){super(),this._doc=e,this._hostNodes=new Set,this._styleNodes=new Set,this._hostNodes.add(e.head)}_addStylesToHost(e,t){e.forEach(e=>{const n=this._doc.createElement("style");n.textContent=e,this._styleNodes.add(t.appendChild(n))})}addHost(e){this._addStylesToHost(this._stylesSet,e),this._hostNodes.add(e)}removeHost(e){this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach(t=>this._addStylesToHost(e,t))}ngOnDestroy(){this._styleNodes.forEach(e=>ml().remove(e))}}return e.\u0275fac=function(t){return new(t||e)(vr(gl))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Ol={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Ml=/%COMP%/g;function Ll(e,t,n){for(let r=0;r<t.length;r++){let s=t[r];Array.isArray(s)?Ll(e,s,n):(s=s.replace(Ml,e),n.push(s))}return n}function zl(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let Pl=(()=>{class e{constructor(e,t,n){this.eventManager=e,this.sharedStylesHost=t,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new Bl(e)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case Ye.Emulated:{let n=this.rendererByCompId.get(t.id);return n||(n=new Vl(this.eventManager,this.sharedStylesHost,t,this.appId),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n}case 1:case Ye.ShadowDom:return new Wl(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){const e=Ll(t.id,t.styles,[]);this.sharedStylesHost.addStyles(e),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(t){return new(t||e)(vr(Al),vr(Dl),vr(Co))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();class Bl{constructor(e){this.eventManager=e,this.data=Object.create(null)}destroy(){}createElement(e,t){return t?document.createElementNS(Ol[t]||t,e):document.createElement(e)}createComment(e){return document.createComment(e)}createText(e){return document.createTextNode(e)}appendChild(e,t){e.appendChild(t)}insertBefore(e,t,n){e&&e.insertBefore(t,n)}removeChild(e,t){e&&e.removeChild(t)}selectRootElement(e,t){let n="string"==typeof e?document.querySelector(e):e;if(!n)throw new Error(`The selector "${e}" did not match any elements`);return t||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,t,n,r){if(r){t=r+":"+t;const s=Ol[r];s?e.setAttributeNS(s,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)}removeAttribute(e,t,n){if(n){const r=Ol[n];r?e.removeAttributeNS(r,t):e.removeAttribute(`${n}:${t}`)}else e.removeAttribute(t)}addClass(e,t){e.classList.add(t)}removeClass(e,t){e.classList.remove(t)}setStyle(e,t,n,r){r&(Fr.DashCase|Fr.Important)?e.style.setProperty(t,n,r&Fr.Important?"important":""):e.style[t]=n}removeStyle(e,t,n){n&Fr.DashCase?e.style.removeProperty(t):e.style[t]=""}setProperty(e,t,n){e[t]=n}setValue(e,t){e.nodeValue=t}listen(e,t,n){return"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,zl(n)):this.eventManager.addEventListener(e,t,zl(n))}}class Vl extends Bl{constructor(e,t,n,r){super(e),this.component=n;const s=Ll(r+"-"+n.id,n.styles,[]);t.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(Ml,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(Ml,r+"-"+n.id)}applyToHost(e){super.setAttribute(e,this.hostAttr,"")}createElement(e,t){const n=super.createElement(e,t);return super.setAttribute(n,this.contentAttr,""),n}}class Wl extends Bl{constructor(e,t,n,r){super(e),this.sharedStylesHost=t,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=Ll(r.id,r.styles,[]);for(let a=0;a<s.length;a++){const e=document.createElement("style");e.textContent=s[a],this.shadowRoot.appendChild(e)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(e,t){return super.appendChild(this.nodeOrShadowRoot(e),t)}insertBefore(e,t,n){return super.insertBefore(this.nodeOrShadowRoot(e),t,n)}removeChild(e,t){return super.removeChild(this.nodeOrShadowRoot(e),t)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}}let Ul=(()=>{class e extends Rl{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,n){return e.addEventListener(t,n,!1),()=>this.removeEventListener(e,t,n)}removeEventListener(e,t,n){return e.removeEventListener(t,n)}}return e.\u0275fac=function(t){return new(t||e)(vr(gl))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Hl=["alt","control","meta","shift"],Gl={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},jl={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},ql={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let Kl=(()=>{class e extends Rl{constructor(e){super(e)}supports(t){return null!=e.parseEventName(t)}addEventListener(t,n,r){const s=e.parseEventName(n),a=e.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>ml().onAndCancel(t,s.domEventName,a))}static parseEventName(t){const n=t.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=e._normalizeKey(n.pop());let a="";if(Hl.forEach(e=>{const t=n.indexOf(e);t>-1&&(n.splice(t,1),a+=e+".")}),a+=s,0!=n.length||0===s.length)return null;const i={};return i.domEventName=r,i.fullKey=a,i}static getEventFullKey(e){let t="",n=function(e){let t=e.key;if(null==t){if(t=e.keyIdentifier,null==t)return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&jl.hasOwnProperty(t)&&(t=jl[t]))}return Gl[t]||t}(e);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),Hl.forEach(r=>{r!=n&&(0,ql[r])(e)&&(t+=r+".")}),t+=n,t}static eventCallback(t,n,r){return s=>{e.getEventFullKey(s)===t&&r.runGuarded(()=>n(s))}}static _normalizeKey(e){switch(e){case"esc":return"escape";default:return e}}}return e.\u0275fac=function(t){return new(t||e)(vr(gl))},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})();const Xl=al(hl,"browser",[{provide:$o,useValue:"browser"},{provide:To,useValue:function(){Nl.makeCurrent(),$l.init()},multi:!0},{provide:gl,useFactory:function(){return function(e){Lt=e}(document),document},deps:[]}]),Zl=[[],{provide:ca,useValue:"root"},{provide:$r,useFactory:function(){return new $r},deps:[]},{provide:El,useClass:Ul,multi:!0,deps:[gl,Ho,$o]},{provide:El,useClass:Kl,multi:!0,deps:[gl]},[],{provide:Pl,useClass:Pl,deps:[Al,Dl,Co]},{provide:$i,useExisting:Pl},{provide:Fl,useExisting:Dl},{provide:Dl,useClass:Dl,deps:[gl]},{provide:Yo,useClass:Yo,deps:[Ho]},{provide:Al,useClass:Al,deps:[El,Ho]},[]];let Yl=(()=>{class e{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(t){return{ngModule:e,providers:[{provide:Co,useValue:t.appId},{provide:_l,useExisting:Co},Tl]}}}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)(vr(e,12))},providers:Zl,imports:[Il,pl]}),e})();"undefined"!=typeof window&&window;class Jl{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ql{refCount(e){return eu("refCount")}incRef(e){return eu("incRef")}timerAvailable(){return!0}time(e){return eu("time")}read(e){return eu("read")}readSync(e){return eu("readSync")}numDataIds(){return eu("numDataIds")}disposeData(e,t){return eu("disposeData")}write(e,t,n){return eu("write")}move(e,t,n,r,s){return eu("move")}memory(){return eu("memory")}floatPrecision(){return eu("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return eu("dispose")}}function eu(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function tu(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function nu(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,s=e.length,a=0;for(;s>0;)a=Math.random()*s|0,s--,n=e[s],r=t[s],e[s]=e[a],t[s]=t[a],e[a]=n,t[a]=r}function ru(e,t,n){return Math.max(e,Math.min(t,n))}function su(e){return e%2==0?e:e+1}function au(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function iu(e,t){const n=Math.random();return t*n+(1-n)*e}function ou(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function lu(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function uu(e,t,n=""){lu(fu(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function cu(e){lu(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function hu(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$u(e)&&!n)for(let r=0;r<e.length;++r)hu(e[r],t,n);else t.push(e);return t}function du(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function pu(e){return 0===e.length}function fu(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function mu(e){return e%1==0}function gu(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function yu(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function bu(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return tu(t),t}function xu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function vu(e,t=(e=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function wu(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function ku(e,t){const n=t.length;return lu((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),lu(e.every(e=>mu(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function Iu(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:ku(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function Nu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Cu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Su(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _u(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Tu(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function $u(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Eu(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Au(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function Ru(e){return"string"==typeof e||e instanceof String}function Fu(e){return"boolean"==typeof e}function Du(e){return"number"==typeof e}function Ou(e){return Array.isArray(e)?Ou(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Du(e)?"float32":Ru(e)?"string":Fu(e)?"bool":"float32"}function Mu(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Lu(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function zu(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Pu(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce((e,t)=>e*t);for(let t=0;t<s;t++)r[t]=Pu(e+t*i,a,n)}return r}function Bu(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Pu(0,e,t)}function Vu(e,t){const n=Wu(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Wu(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Uu(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Bu(e,new Float32Array(n));if("int32"===t)return Bu(e,new Int32Array(n));if("bool"===t)return Bu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Hu(e){e.forEach(t=>{lu(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Gu(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function ju(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function qu(e){return e&&e.then&&"function"==typeof e.then}class Ku{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(qu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function Xu(){return Yu}let Zu,Yu=null;function Ju(){if(null==Zu){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Zu=e}return Zu}function Qu(e,t){const n=function(){const e=Ju();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const ec="Abs",tc="Acos",nc="Acosh",rc="Add",sc="AddN",ac="All",ic="Any",oc="ArgMax",lc="ArgMin",uc="Asin",cc="Asinh",hc="Atan",dc="Atanh",pc="Atan2",fc="AvgPool",mc="AvgPoolGrad",gc="AvgPool3D",yc="AvgPool3DGrad",bc="BatchMatMul",xc="BatchToSpaceND",vc="Bincount",wc="Cast",kc="Ceil",Ic="ClipByValue",Nc="Complex",Cc="ComplexAbs",Sc="Concat",_c="Conv2D",Tc="Conv2DBackpropFilter",$c="Conv2DBackpropInput",Ec="Conv3D",Ac="Conv3DBackpropFilterV2",Rc="Conv3DBackpropInputV2",Fc="Cos",Dc="Cosh",Oc="Cumsum",Mc="CropAndResize",Lc="DenseBincount",zc="DepthToSpace",Pc="DepthwiseConv2dNative",Bc="DepthwiseConv2dNativeBackpropFilter",Vc="DepthwiseConv2dNativeBackpropInput",Wc="Diag",Uc="Dilation2D",Hc="Dilation2DBackpropInput",Gc="Dilation2DBackpropFilter",jc="RealDiv",qc="Elu",Kc="EluGrad",Xc="Erf",Zc="Equal",Yc="Exp",Jc="ExpandDims",Qc="Expm1",eh="FFT",th="Fill",nh="FlipLeftRight",rh="Floor",sh="FloorDiv",ah="FusedBatchNorm",ih="GatherV2",oh="GatherNd",lh="Greater",uh="GreaterEqual",ch="Identity",hh="IFFT",dh="Imag",ph="IsFinite",fh="IsInf",mh="IsNan",gh="LeakyRelu",yh="Less",bh="LessEqual",xh="LinSpace",vh="Log",wh="Log1p",kh="LogicalAnd",Ih="LogicalNot",Nh="LogicalOr",Ch="LRN",Sh="LRNGrad",_h="Max",Th="Maximum",$h="MaxPool",Eh="MaxPoolGrad",Ah="MaxPool3D",Rh="MaxPool3DGrad",Fh="MaxPoolWithArgmax",Dh="Mean",Oh="Min",Mh="Minimum",Lh="MirrorPad",zh="Mod",Ph="Multinomial",Bh="Multiply",Vh="Neg",Wh="NotEqual",Uh="NonMaxSuppressionV3",Hh="NonMaxSuppressionV4",Gh="NonMaxSuppressionV5",jh="OnesLike",qh="OneHot",Kh="Pack",Xh="PadV2",Zh="Pow",Yh="Prelu",Jh="Prod",Qh="Range",ed="Real",td="Reciprocal",nd="Relu",rd="Reshape",sd="ResizeNearestNeighbor",ad="ResizeNearestNeighborGrad",id="ResizeBilinear",od="ResizeBilinearGrad",ld="Relu6",ud="Reverse",cd="Round",hd="Rsqrt",dd="ScatterNd",pd="Select",fd="Selu",md="Slice",gd="Sin",yd="Sinh",bd="Sign",xd="Sigmoid",vd="Softplus",wd="Sqrt",kd="Sum",Id="SpaceToBatchND",Nd="SplitV",Cd="Softmax",Sd="SquaredDifference",_d="Square",Td="Sub",$d="SparseToDense",Ed="StridedSlice",Ad="Tan",Rd="Tanh",Fd="Tile",Dd="TopK",Od="Transpose",Md="Unique",Ld="Unpack",zd="UnsortedSegmentSum",Pd="ZerosLike",Bd="Step",Vd="FromPixels",Wd="RotateWithOffset",Ud="_FusedMatMul",Hd="FusedConv2D",Gd="FusedDepthwiseConv2D",jd=Qu("kernelRegistry",()=>new Map),qd=Qu("gradRegistry",()=>new Map);function Kd(e,t){const n=Qd(e,t);return jd.get(n)}function Xd(e){return qd.get(e)}function Zd(e){const t=jd.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Yd(e){const{kernelName:t,backendName:n}=e,r=Qd(t,n);jd.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),jd.set(r,e)}function Jd(e){const{kernelName:t}=e;qd.has(t)&&Xu().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),qd.set(t,e)}function Qd(e,t){return`${t}_${e}`}function ep(e,t){return"string"===t?sp(e):tp([e],t)}function tp(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=hu(e)),Xu().getBool("DEBUG")&&Su(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function np(){return Xu().platform.now()}function rp(e,t){return Xu().platform.fetch(e,t)}function sp(e,t="utf-8"){return t=t||"utf-8",Xu().platform.encode(e,t)}function ap(e,t="utf-8"){return t=t||"utf-8",Xu().platform.decode(e,t)}class ip{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new lp)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=np();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:np()-i})}if(Xu().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then(n=>{op(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(e=>{Promise.all([e.data(),r,a]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function op(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class lp{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?xu(`${r}ms`,9):r.error,o=xu(e,25),l=t.rank,u=t.size,c=xu(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function up(e,t,n,r){const s=zu(t),a=function(e,t,n,r){const s=du(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?pp(e):e;if(o>1)for(let u=0;u<s/a;u++){const e=u*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],cp(l[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,o=dp(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function cp(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ru(e)?`'${e}'`:"bool"===n?hp(e):parseFloat(e.toFixed(7)).toString(),xu(r,t)}function hp(e){return 0===e?"false":"true"}function dp(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[cp(pp(e)[0],0,n)]:"bool"===n?[hp(e[0])]:[e[0].toString()];if(1===l){if(o>20){let t=Array.from(e.slice(0,3*i)),r=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(t=pp(t),r=pp(r)),["["+t.map((e,t)=>cp(e,s[t],n)).join(", ")+", ..., "+r.map((e,t)=>cp(e,s[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?pp(e):Array.from(e)).map((e,t)=>cp(e,s[t],n)).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h;d.push(...dp(e.slice(r,r+h),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h;d.push(...dp(e.slice(r,r+h),u,n,c,s,t===o-1))}}else for(let m=0;m<o;m++){const t=m*h;d.push(...dp(e.slice(t,t+h),u,n,c,s,m===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function pp(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class fp{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=du(e),null!=n){const e=n.length;lu(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Cu(t,this.size),this.strides=zu(e)}set(e,...t){0===t.length&&(t=[0]),lu(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return mp().makeTensor(this.values,this.shape,this.dtype)}}let mp=null,gp=null,yp=null;class bp{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=du(e),this.strides=zu(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return gp.buffer(this.shape,this.dtype,e)}bufferSync(){return gp.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Bu(this.shape,e)}arraySync(){return Bu(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=mp().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>ap(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=mp().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>ap(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await mp().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(mp().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return gp.print(this,e)}clone(){return this.throwIfDisposed(),gp.clone(this)}toString(e=!1){return up(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),gp.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),mp().makeVariable(this,e,t,n)}}function xp(){return Qu("Tensor",()=>bp)}Object.defineProperty(bp,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),xp();class vp extends bp{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!fu(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);mp().disposeTensor(this),this.dataId=e.dataId,mp().incRef(this,null)}dispose(){mp().disposeVariable(this),this.isDisposedInternal=!0}}var wp,kp,Ip,Np,Cp;Object.defineProperty(vp,Symbol.hasInstance,{value:e=>e instanceof bp&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(wp||(wp={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(kp||(kp={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ip||(Ip={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Np||(Np={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Cp||(Cp={}));const Sp={float32:Np,int32:kp,bool:Ip,complex64:Cp};function _p(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Sp[e][t]}function Tp(e){return _p(e,"int32")}function $p(e,t){if(e.dtype===t.dtype)return[e,t];const n=_p(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ep(e,t){lu(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Ap(e,t){return t.some(t=>t.id===e.id)}function Rp(e){const t=[];return Fp(e,t,new Set),t}function Fp(e,t,n){if(null==e)return;if(e instanceof bp)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),Fp(e,t,n))}}function Dp(e){return null!=e.kernelName}class Op{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Mp{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Op}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ip(this.backendInstance),!0}setupRegisteredKernels(){Zd(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Zd(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Ql||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Mp.nextTensorId++}nextVariableId(){return Mp.nextVariableId++}clone(e){const t=zp.runKernel(ch,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>zp.runKernel(wc,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==Kd(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=r-t-s-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const l=Dp(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Dp(e)){const{kernelName:t,inputs:s,attrs:a}=e,l=Kd(t,this.backendName);lu(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Dp(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(e=>null!=u[e]?u[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=Xd(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(lu(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let s=e;"string"===(n=n||"float32")&&Ru(e[0])&&(s=e.map(e=>sp(e)));const a=r.write(s,t,n),i=new bp(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Au(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new bp(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new vp(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Eu(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof vp||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Eu(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Xd(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=Wu(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Rp(e),n=new Set(t.map(e=>e.id));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(lu(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));lu(s instanceof bp,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=Vu(du(e),"float32");return zp.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(t=>{const n=e[t.id];i.push(null!=n?n:null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!fu(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,e=>this.tidy(e),Pp);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return lu(Mu(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;lu(t.every(e=>e instanceof bp),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),lu(n.value instanceof bp,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),lu(Mu(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];lu(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),lu(a.every(e=>e instanceof bp),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=np(),n=await this.backend.time(e);return n.wallMs=np()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Op;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Lp(){const e=Ju();if(null==e._tfengine){const t=new Ku(e);e._tfengine=new Mp(t)}return Yu=e._tfengine.ENV,mp=()=>e._tfengine,e._tfengine}Mp.nextTensorId=0,Mp.nextVariableId=0;const zp=Lp();function Pp(e,t){return zp.runKernel(rc,{a:e,b:t})}function Bp(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Vp(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Wp=Xu();function Up(e,t){let n=e;if($u(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||$u(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Xu().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Hp(e,r,[]),r}function Hp(e,t,n){if(n=n||[],!Array.isArray(e)&&!$u(e))return void lu(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);lu(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),lu(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let s=0;s<e.length;++s)Hp(e[s],r,n.concat(s))}function Gp(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function jp(e,t,n,r="numeric"){if(e instanceof bp)return Gp(r,e.dtype,t,n),e;let s=Ou(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Gp(r,s,t,n),null==e||!$u(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const a=Up(e,s);$u(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?tp(e,s):hu(e,[],!0);return zp.makeTensor(i,a,s)}function qp(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>jp(e,`${t}[${s}]`,n,r))}function Kp(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{zp.startScope(n);try{const t=r(...e);return qu(t)&&console.error("Cannot return a Promise inside of tidy."),zp.endScope(t),t}catch(t){throw zp.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Wp.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Wp.registerFlag("IS_BROWSER",()=>Vp()),Wp.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Wp.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Wp.registerFlag("PROD",()=>!1),Wp.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Wp.getBool("DEBUG")),Wp.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Wp.registerFlag("IS_TEST",()=>!1),Wp.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);const Xp=Kp({complex_:function(e,t){const n=jp(e,"real","complex"),r=jp(t,"imag","complex");return uu(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),zp.runKernel(Nc,{real:n,imag:r})}});function Zp(e,t,n,r){if(null==r&&(r=Ou(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!$u(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Hu(t);const e=du(t),r=du(n);lu(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==du(t.slice(s));lu(n[s]===t[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return $u(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?tp(e,r):hu(e,[],!0),zp.makeTensor(e,t,r)}function Yp(e,t,n){return Zp(e,t,Up(e,n),n)}const Jp={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Qp(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:tf(await Promise.all(r)),specs:n}}function ef(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=du(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Jp[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++)u[e]=h[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=lf()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++)u[e]=Math.round(h[e]*n.scale+n.min)}s+=l*o}else if("string"===i){const t=du(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=Jp[i],a=e.slice(s,s+l*r);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=Yp(e,o,"float32"),i=Yp(r,o,"float32");n[t]=Xp(s,i),s.dispose(),i.dispose()}}s+=l*r}"complex64"!==i&&(n[t]=Yp(u,o,i))}return n}function tf(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const nf="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function rf(e){return nf?Buffer.byteLength(e):new Blob([e]).size}function sf(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function af(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function of(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:rf(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:rf(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function lf(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i];a[i]=e[n[s>>10]+(1023&s)]+t[s>>10]}return new Float32Array(s)}}class uf{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==uf.instance&&(uf.instance=new uf),uf.instance}static registerSaveRouter(e){uf.getInstance().saveRouters.push(e)}static registerLoadRouter(e){uf.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return uf.getHandlers(e,"save")}static getLoadHandlers(e,t){return uf.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?uf.getInstance().loadRouters:uf.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const cf=e=>uf.registerSaveRouter(e),hf=e=>uf.registerLoadRouter(e),df=e=>uf.getSaveHandlers(e),pf=(e,t)=>uf.getLoadHandlers(e,t),ff="tensorflowjs",mf="models_store",gf="model_info_store";function yf(){if(!Xu().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function bf(e){const t=e.result;t.createObjectStore(mf,{keyPath:"modelPath"}),t.createObjectStore(gf,{keyPath:"modelPath"})}class xf{constructor(e){if(this.indexedDB=yf(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(ff,1);r.onupgradeneeded=()=>bf(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(mf,"readonly"),r=t.objectStore(mf).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=of(t),a=s.transaction(gf,"readwrite");let i=a.objectStore(gf);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(mf,"readwrite");const o=l.objectStore(mf).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(gf);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}xf.URL_SCHEME="indexeddb://";const vf=e=>{return Xu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xf.URL_SCHEME)?(t=e.slice(xf.URL_SCHEME.length),new xf(t)):null;var t};uf.registerSaveRouter(vf),uf.registerLoadRouter(vf);class wf{constructor(){this.indexedDB=yf()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(ff,1);n.onupgradeneeded=()=>bf(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(gf,"readonly"),a=s.objectStore(gf).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(xf.URL_SCHEME)?t.slice(xf.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(ff,1);r.onupgradeneeded=()=>bf(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(gf,"readwrite"),i=a.objectStore(gf),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(mf,"readwrite");const r=l.objectStore(mf).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const kf="/",If="tensorflowjs_models",Nf="info",Cf="model_topology",Sf="weight_specs",_f="weight_data",Tf="model_metadata";function $f(e){return{info:[If,e,Nf].join(kf),topology:[If,e,Cf].join(kf),weightSpecs:[If,e,Sf].join(kf),weightData:[If,e,_f].join(kf),modelMetadata:[If,e,Tf].join(kf)}}function Ef(e){const t=e.split(kf);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(kf)}class Af{constructor(e){if(!Xu().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=$f(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=of(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(nf)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(nf){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}Af.URL_SCHEME="localstorage://";const Rf=e=>{return Xu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Af.URL_SCHEME)?(t=e.slice(Af.URL_SCHEME.length),new Af(t)):null;var t};uf.registerSaveRouter(Rf),uf.registerLoadRouter(Rf);class Ff{constructor(){lu(Xu().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),lu("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=If+kf,n=kf+Nf;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Ef(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=$f(e=(t=e).startsWith(Af.URL_SCHEME)?t.slice(Af.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const Df="://";class Of{constructor(){this.managers={}}static getInstance(){return null==Of.instance&&(Of.instance=new Of),Of.instance}static registerManager(e,t){lu(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(Df)&&(e=e.slice(0,e.indexOf(Df))),lu(e.length>0,()=>"scheme must not be an empty string.");const n=Of.getInstance();lu(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Mf(e){if(-1===e.indexOf(Df))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Of.getSchemes().join(",")}`);return{scheme:e.split(Df)[0],path:e.split(Df)[1]}}async function Lf(e,t,n=!1){lu(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=uf.getLoadHandlers(e);lu(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),lu(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],a=uf.getSaveHandlers(t);lu(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),lu(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],o=Mf(e).scheme,l=Mf(e).path,u=o===Mf(e).scheme,c=await s.load();n&&u&&await Of.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await Of.getManager(o).removeModel(l),h.modelArtifactsInfo}async function zf(){const e=Of.getSchemes(),t={};for(const n of e){const e=await Of.getManager(n).listModels();for(const r in e)t[n+Df+r]=e[r]}return t}async function Pf(e){const t=Mf(e);return Of.getManager(t.scheme).removeModel(t.path)}async function Bf(e,t){return Lf(e,t,!1)}async function Vf(e,t){return Lf(e,t,!0)}class Wf{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Xu().get("IS_BROWSER")){Xu().setPlatform("browser",new Wf);try{Of.registerManager(Af.URL_SCHEME,new Ff)}catch(TU){}try{Of.registerManager(xf.URL_SCHEME,new wf)}catch(TU){}}let Uf;function Hf(e,t="float32",n){return t=t||"float32",Hu(e),new fp(e,t,n)}Xu().get("IS_NODE")&&Xu().setPlatform("node",new class{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Xu().global.fetch?Xu().global.fetch(e,t):(null==Uf&&(Uf=n(1)),Uf(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Gf=Kp({cast_:function(e,t){const n=jp(e,"x","cast");if(!_u(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return zp.runKernel(wc,{x:n},{dtype:t})}}),jf=Kp({clone_:function(e){const t=jp(e,"x","clone","string_or_numeric");return zp.runKernel(ch,{x:t})}});function qf(e){return new Promise(e=>setTimeout(e)).then(e)}Lp(),gp={buffer:Hf,cast:Gf,clone:jf,print:function(e,t=!1){console.log(e.toString(t))}};class Kf{constructor(e){if(!Xu().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Kf.URL_SCHEME)&&(e=e.slice(Kf.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await qf(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await qf(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:of(e)}}}}Kf.URL_SCHEME="downloads://";class Xf{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let l;try{l=this.checkManifestAndWeightFiles(o,t)}catch(TU){return void r(TU)}const u=[],c=[],h=[];o.forEach(e=>{e.paths.forEach(e=>{c.push(e),h.push(null)}),u.push(...e.weights)}),o.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=c.indexOf(e);if(h[s]=r,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:u,weightData:sf(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(l[e])})})},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>af(e.name)),s={};for(const a of e)a.paths.forEach(e=>{const a=af(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[e]=t[r.indexOf(a)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function Zf(e){return new Xf(e)}function Yf(e,t,n,r){!function(e){lu(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){lu(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),lu(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),lu(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const i=n+ ++s/e.length*(r-n);return t(i),a}),a)))}async function Jf(e,t){null==t&&(t={});const n=null==t.fetchFunc?Xu().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await Yf(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await Yf(s,t.onProgress,.5,1)}async function Qf(e,t="",n,r){return em(e=>Jf(e,{requestInit:r}))(e,t,n)}function em(e){return async(t,n="",r)=>{const s=t.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const l=Jp["quantization"in e?e.quantization.dtype:e.dtype]*du(e.shape),u=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(u(),i[n]=!0)}):u(),o.push(e.name),n+=l})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});const c=await e(u),h={};let d=0;return l.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[d+t].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[d+t]);i.set(e,o),o+=e.byteLength}a[e].forEach(e=>{const t=ef(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]}),d+=n}),h}}uf.registerSaveRouter(e=>Xu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Kf.URL_SCHEME)?function(e="model"){return new Kf(e)}(e.slice(Kf.URL_SCHEME.length)):null);class tm{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(lu("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Xu().platform.fetch,lu(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&lu(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./model.weights.bin"],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:of(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(p){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const l of e)a.push(...l.weights);const i=[],o=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,sf(await Jf(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function nm(e){return null!=e.match(tm.URL_SCHEME_REGEX)}tm.URL_SCHEME_REGEX=/^https?:\/\//;const rm=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>nm(e)):nm(e),n)return sm(e,t)}return null};function sm(e,t){return new tm(e,t)}function am(e,t){return sm(e,t)}uf.registerSaveRouter(rm),uf.registerLoadRouter(rm);class im{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class om{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function lm(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new im(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new im({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new im({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function um(e){return new om(e)}let cm;async function hm(e,t){let n=jp(e,"img","toPixels");if(!(e instanceof bp)){const e=n;n=Gf(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const dm=Kp({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Kd(Vd,zp.backendName))return zp.runKernel(Vd,{pixels:e},{numChannels:t});const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(a||s||o)&&(null==cm&&(cm=document.createElement("canvas").getContext("2d")),cm.canvas.width=l,cm.canvas.height=u,cm.drawImage(e,0,0,l,u),c=cm.getImageData(0,0,l,u).data),4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(cu(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Up(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Zp(e,t,r,n)}(h,[u,l,t],"int32")}});function pm(e,t,n){const r=e.shape.length;lu(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),lu(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)lu(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function fm(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function mm(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function gm(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function ym(e,t,n){return n<=e?n:n-(t-1)}function bm(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function xm(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=vm(i,l,u,r,e),h=wm(o,l,u,s,e),d=gm(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=Im(i,r,a,e,p,l),h[p]=Nm(o,s,a,e,p,l),d[p]=km(a,p,l);return{begin:c,end:h,strides:d}}function vm(e,t,n,r,s){const a=[...s],i=bm(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=ym(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function wm(e,t,n,r,s){const a=[...s],i=bm(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=ym(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=s[o];a[o]<0&&(a[o]+=e),a[o]=ru(0,a[o],s[o])}return a}function km(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Im(e,t,n,r,s,a){let i=t[s];(e&1<<s||a&1<<s||null==i)&&(i=(n[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[s];return i<0&&(i+=o),i=ru(0,i,o-1),i}function Nm(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?ru(0,i,l):ru(-1,i,l-1),i}function Cm(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Sm(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function _m(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{lu(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(lu(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function Tm(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=fm(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=fm(o),m=e.slice();f.forEach(e=>{u[e]=0,c[e]=1,m.splice(e,0,1)});const{begin:g,end:y,strides:b}=xm(m,d,p,u,c,h,s,a,i);u=g,c=y,h=b;const x=fm(l);x.forEach(e=>{c[e]=u[e]+1,h[e]=1});const v=mm(u,c,h),w=v.filter((e,t)=>-1===x.indexOf(t));return{nonStrided:h.every(e=>1===e),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}class $m{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Em{constructor(){this.classNameMap={}}static getMap(){return null==Em.instance&&(Em.instance=new Em),Em.instance}static register(e){Em.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Am(e){lu(null!=e.className,()=>"Class being registered does not have the static className property defined."),lu("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),lu(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Em.register(e)}function Rm(){return zp}function Fm(){return zp.memory()}function Dm(e,t){return zp.tidy(e,t)}function Om(e){Rp(e).forEach(e=>e.dispose())}function Mm(e){return zp.keep(e)}function Lm(e,t,n=1){return zp.registerBackend(e,t,n)}function zm(e){return zp.customGrad(e)}function Pm(e,t){if(($u(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&$u(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Zp(e,[],[],t)}yp=function(e){Xu().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Bm extends $m{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return Om(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){lu(Mu(e),()=>"The f passed in variableGrads(f) must be a function"),lu(null==t||Array.isArray(t)&&t.every(e=>e instanceof vp),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in zp.registeredVariables)t.push(zp.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;lu((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=zp.gradients(e,t,null,!0);lu(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),lu(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Om(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Pm(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Bm,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Vm=Kp({abs_:function(e){const t=jp(e,"x","abs");return zp.runKernel("complex64"===t.dtype?Cc:ec,{x:t})}}),Wm=Kp({add_:function(e,t){let n=jp(e,"a","add"),r=jp(t,"b","add");return[n,r]=$p(n,r),zp.runKernel(rc,{a:n,b:r})}}),Um=Kp({all_:function(e,t=null,n=!1){const r=jp(e,"x","all","bool");return zp.runKernel(ac,{x:r},{axis:t,keepDims:n})}}),Hm=Kp({any_:function(e,t=null,n=!1){const r=jp(e,"x","any","bool");return zp.runKernel(ic,{x:r},{axis:t,keepDims:n})}}),Gm=Kp({argMax_:function(e,t=0){const n=jp(e,"x","argMax");return zp.runKernel(oc,{x:n},{axis:t})}});function jm(e,t,n,r,s="NHWC",a){return Xm(e,[...t,e[3]],n,a,r,null,null,sg(s))}function qm(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Jm(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Xm(e,u,n,r,s,a,!1,i)}function Km(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Qm(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Zm(e,c,n,r,s,!1,h,a)}function Xm(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Jm(n),[y,b]=Jm(r),x=eg(d,y),v=eg(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Ym(e,t,n));const a=e[1];return[tg((e[0]-t+2*r)/n+1,s),tg((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=tg((t-a+d+p)/r+1,o),h=tg((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,v,a,o),N=i?f*h:f;let C;return"channelsFirst"===o?C=[l,N,k,I]:"channelsLast"===o&&(C=[l,k,I,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:C,filterShape:t}}function Zm(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Qm(n),[v,w,k]=Qm(r),I=eg(p,v),N=eg(f,w),C=eg(m,k),{padInfo:S,outDepth:_,outHeight:T,outWidth:$}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=Ym(e,t,r));const i=e[1],o=e[2];return[tg((e[0]-t+2*s)/r+1,a),tg((i-t+2*s)/r+1,a),tg((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,I,N,C,o),E=a?g*d:g;let A;return"channelsFirst"===i?A=[l,E,_,T,$]:"channelsLast"===i&&(A=[l,_,T,$,E]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:_,outHeight:T,outWidth:$,outChannels:E,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Ym(e,t,n,r=1){const s=eg(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Jm(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Qm(e){return"number"==typeof e?[e,e,e]:e}function eg(e,t){return t<=1?e:e+(e-1)*(t-1)}function tg(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ng(e){const[t,n,r]=Jm(e);return 1===t&&1===n&&1===r}function rg(e,t){return ng(e)||ng(t)}function sg(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const ag=Kp({reshape_:function(e,t){const n=jp(e,"x","reshape","string_or_numeric");return zp.runKernel(rd,{x:n},{shape:t})}}),ig=Kp({avgPool_:function(e,t,n,r,s){const a=jp(e,"x","avgPool","float32");lu(rg(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=ag(a,[1,a.shape[0],a.shape[1],a.shape[2]])),lu(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&lu(mu(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let l=zp.runKernel(fc,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:s});return l=Gf(l,a.dtype),o?ag(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),og=Kp({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=jp(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=ag(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),lu(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),lu("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),null!=s&&lu(mu(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let u=zp.runKernel(gc,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a});return u=Gf(u,o.dtype),l?ag(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),lg=Kp({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=jp(e,"x","batchNorm"),o=jp(t,"mean","batchNorm"),l=jp(n,"variance","batchNorm");let u,c;null!=s&&(u=jp(s,"scale","batchNorm")),null!=r&&(c=jp(r,"offset","batchNorm")),lu(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),lu(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),lu(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(e){let t;return t=0===e.rank||1===e.rank?ag(e,[1,1,1,e.size]):2===e.rank?ag(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ag(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d=zp.runKernel(ah,{x:h,scale:u,offset:c,mean:o,variance:l},{varianceEpsilon:a});return ag(d,i.shape)}}),ug=Kp({batchNorm2d_:function(e,t,n,r,s,a){const i=jp(e,"x","batchNorm"),o=jp(t,"mean","batchNorm"),l=jp(n,"variance","batchNorm");let u,c;return null!=s&&(u=jp(s,"scale","batchNorm")),null!=r&&(c=jp(r,"offset","batchNorm")),lu(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),lu(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),lu(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&lu(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&lu(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),lg(i,o,l,c,u,a)}}),cg=Kp({batchNorm3d_:function(e,t,n,r,s,a){const i=jp(e,"x","batchNorm"),o=jp(t,"mean","batchNorm"),l=jp(n,"variance","batchNorm");let u,c;return null!=s&&(u=jp(s,"scale","batchNorm")),null!=r&&(c=jp(r,"offset","batchNorm")),lu(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),lu(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),lu(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&lu(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&lu(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),lg(i,o,l,c,u,a)}}),hg=Kp({batchNorm4d_:function(e,t,n,r,s,a){const i=jp(e,"x","batchNorm"),o=jp(t,"mean","batchNorm"),l=jp(n,"variance","batchNorm");let u,c;return null!=s&&(u=jp(s,"scale","batchNorm")),null!=r&&(c=jp(r,"offset","batchNorm")),lu(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),lu(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),lu(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&lu(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&lu(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),lg(i,o,l,c,u,a)}}),dg=Kp({clipByValue_:function(e,t,n){const r=jp(e,"x","clipByValue");return lu(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),zp.runKernel(Ic,{x:r},{clipValueMin:t,clipValueMax:n})}}),pg=Kp({concat_:function(e,t=0){lu(e.length>=1,()=>"Pass at least one tensor to concat");const n=qp(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?jf(n[0]):zp.runKernel(Sc,n,{axis:t})}}),fg=Kp({concat1d_:function(e){return pg(e,0)}}),mg=Kp({concat2d_:function(e,t){return pg(e,t)}}),gg=Kp({concat3d_:function(e,t){return pg(e,t)}}),yg=Kp({concat4d_:function(e,t){return pg(e,t)}}),bg=Kp({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=jp(e,"x","conv2d"),l=jp(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=ag(o,[1,o.shape[0],o.shape[1],o.shape[2]])),lu(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),lu(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),null!=i&&lu(mu(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h="NHWC"===s?u.shape[3]:u.shape[1];lu(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),lu(rg(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d=zp.runKernel(_c,{x:u,filter:l},{strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return c?ag(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),xg=Kp({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=jp(e,"x","conv1d"),l=jp(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=ag(o,[1,o.shape[0],o.shape[1]])),lu(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),lu(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),null!=i&&lu(mu(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),lu(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),lu(rg(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),lu("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=ag(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ag(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=bg(d,h,[1,n],r,"NHWC",[1,a],i);return ag(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),vg=Kp({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){lu(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=ag(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),lu(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),lu(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),lu(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];lu(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),lu(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=i&&lu(mu(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d=zp.runKernel($c,{dy:l,filter:n},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o});return u?ag(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),wg=Kp({conv2dTranspose_:function(e,t,n,r,s,a){const i=jp(e,"x","conv2dTranspose"),o=jp(t,"filter","conv2dTranspose");return vg(n,i,o,r,s,"NHWC",a)}}),kg=Kp({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=jp(e,"x","conv3d"),o=jp(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=ag(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),lu(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),lu(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),lu(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),lu(rg(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),lu("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c=zp.runKernel(Ec,{x:l,filter:o},{strides:n,pad:r,dataFormat:s,dilations:a});return u?ag(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Ig=Kp({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=jp(e,"x","depthwiseConv2d"),l=jp(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=ag(o,[1,o.shape[0],o.shape[1],o.shape[2]])),lu(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),lu(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),lu(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),null!=i&&lu(mu(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h=zp.runKernel(Pc,{x:u,filter:l},{strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return c?ag(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ng=Kp({floorDiv_:function(e,t){let n=jp(e,"a","floorDiv"),r=jp(t,"b","floorDiv");return[n,r]=$p(n,r),zp.runKernel(sh,{a:n,b:r})}}),Cg=Kp({div_:function(e,t){let n=jp(e,"a","div"),r=jp(t,"b","div");return[n,r]=$p(n,r),"int32"===n.dtype&&"int32"===r.dtype?Ng(n,r):zp.runKernel(jc,{a:n,b:r},{})}}),Sg=Kp({elu_:function(e){const t=jp(e,"x","elu");return zp.runKernel(qc,{x:t})}});function _g(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Tg(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function $g(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Eg=Kp({equal_:function(e,t){let n=jp(e,"a","equal"),r=jp(t,"b","equal");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(Zc,{a:n,b:r})}}),Ag=Kp({expandDims_:function(e,t=0){const n=jp(e,"x","expandDims","string_or_numeric");return lu(t<=n.rank,()=>"Axis must be <= rank of the tensor"),zp.runKernel(Jc,{input:n},{dim:t})}}),Rg=Kp({tile_:function(e,t){const n=jp(e,"x","tile","string_or_numeric");return lu(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),zp.runKernel(Fd,{x:n},{reps:t})}}),Fg=Kp({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Hf([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=ag(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Rg(Ag(i,0),[n[0],1,1]);if(2===n.length)return Rg(Ag(Ag(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Rg(Ag(Ag(Ag(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Dg(e,t,n){return zp.runKernel(th,{},{shape:e,value:t,dtype:n})}const Og=Kp({floor_:function(e){const t=jp(e,"x","floor");return zp.runKernel(rh,{x:t})}}),Mg=Kp({gather_:function(e,t,n=0,r=0){const s=jp(e,"x","gather"),a=jp(t,"indices","gather","int32");return zp.runKernel(ih,{x:s,indices:a},{axis:n,batchDims:r})}}),Lg=Kp({greater_:function(e,t){let n=jp(e,"a","greater"),r=jp(t,"b","greater");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(lh,{a:n,b:r})}}),zg=Kp({greaterEqual_:function(e,t){let n=jp(e,"a","greaterEqual"),r=jp(t,"b","greaterEqual");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(uh,{a:n,b:r})}}),Pg=Kp({leakyRelu_:function(e,t=.2){const n=jp(e,"x","leakyRelu");return zp.runKernel(gh,{x:n},{alpha:t})}}),Bg=Kp({log_:function(e){const t=jp(e,"x","log");return zp.runKernel(vh,{x:t})}}),Vg=Kp({exp_:function(e){const t=jp(e,"x","exp");return zp.runKernel(Yc,{x:t})}}),Wg=Kp({max_:function(e,t=null,n=!1){const r=jp(e,"x","max");return zp.runKernel(_h,{x:r},{reductionIndices:t,keepDims:n})}}),Ug=Kp({mul_:function(e,t){let n=jp(e,"a","mul"),r=jp(t,"b","mul");return[n,r]=$p(n,r),zp.runKernel(Bh,{a:n,b:r})}}),Hg=Kp({sub_:function(e,t){let n=jp(e,"a","sub"),r=jp(t,"b","sub");return[n,r]=$p(n,r),zp.runKernel(Td,{a:n,b:r})}}),Gg=Kp({sum_:function(e,t=null,n=!1){let r=jp(e,"x","sum");return"bool"===r.dtype&&(r=Gf(r,"int32")),zp.runKernel(kd,{x:r},{axis:t,keepDims:n})}}),jg=Kp({logSoftmax_:function(e,t=-1){const n=jp(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return zm((e,n)=>{const r=Wg(e,t,!0),s=Hg(e,r),a=Hg(Gf(s,"float32"),Bg(Gg(Vg(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=Vg(r);return Hg(e,Ug(Gg(e,t,!0),s))}}})(n)}}),qg=Kp({logicalAnd_:function(e,t){const n=jp(e,"a","logicalAnd","bool"),r=jp(t,"b","logicalAnd","bool");return $g(n.shape,r.shape),zp.runKernel(kh,{a:n,b:r})}}),Kg=Kp({maxPool_:function(e,t,n,r,s){const a=jp(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ag(a,[1,a.shape[0],a.shape[1],a.shape[2]])),lu(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),lu(rg(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&lu(mu(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const l=zp.runKernel($h,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:s});return o?ag(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Xg=Kp({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=jp(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=ag(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),lu(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),lu("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),null!=s&&lu(mu(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u=zp.runKernel(Ah,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a});return l?ag(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),Zg=Kp({maximum_:function(e,t){let n=jp(e,"a","maximum"),r=jp(t,"b","maximum");return[n,r]=$p(n,r),"bool"===n.dtype&&(n=Gf(n,"int32"),r=Gf(r,"int32")),$g(n.shape,r.shape),zp.runKernel(Th,{a:n,b:r})}}),Yg=Kp({mean_:function(e,t=null,n=!1){const r=jp(e,"x","mean");return zp.runKernel(Dh,{x:r},{axis:t,keepDims:n})}}),Jg=Kp({min_:function(e,t=null,n=!1){const r=jp(e,"x","min");return zp.runKernel(Oh,{x:r},{axis:t,keepDims:n})}}),Qg=Kp({minimum_:function(e,t){let n=jp(e,"a","minimum"),r=jp(t,"b","minimum");return[n,r]=$p(n,r),"bool"===n.dtype&&(n=Gf(n,"int32"),r=Gf(r,"int32")),$g(n.shape,r.shape),zp.runKernel(Mh,{a:n,b:r})}});function ey(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ty(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function ny(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function ry(e,t){return ty(e,t.map(e=>1),t)}function sy(e,t,n){lu(ey(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function ay(e,t){if(ey(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function iy(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function oy(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const ly=Kp({square_:function(e){const t=jp(e,"x","square");return zp.runKernel("Square",{x:t},{})}}),uy=Kp({moments_:function(e,t=null,n=!1){const r=ku(t,(e=jp(e,"x","moments")).shape),s=Yg(e,r,n);let a=s.shape;n||(a=ry(s.shape,r));const i=ly(Hg(Gf(e,"float32"),ag(s,a)));return{mean:s,variance:Yg(i,r,n)}}}),cy=Kp({neg_:function(e){const t=jp(e,"x","neg");return zp.runKernel(Vh,{x:t})}}),hy=Kp({notEqual_:function(e,t){let n=jp(e,"a","notEqual"),r=jp(t,"b","notEqual");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(Wh,{a:n,b:r})}}),dy=Kp({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s=jp(e,"indices","oneHot","int32");return zp.runKernel(qh,{indices:s},{depth:t,onValue:n,offValue:r})}});function py(e,t="float32"){if("complex64"===t){const t=py(e,"float32"),n=py(e,"float32");return Xp(t,n)}const n=Wu(du(e),t);return zp.makeTensor(n,e,t)}function fy(e,t="float32"){if("complex64"===t){const t=fy(e,"float32"),n=py(e,"float32");return Xp(t,n)}const n=Vu(du(e),t);return zp.makeTensor(n,e,t)}const my=Kp({onesLike_:function(e){const t=jp(e,"x","onesLike");return zp.runKernel(jh,{x:t})}}),gy=Kp({pad_:function(e,t,n=0){const r=jp(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return zp.runKernel(Xh,{x:r},{paddings:t,constantValue:n})}}),yy=Kp({pow_:function(e,t){let n=jp(e,"base","pow"),r=jp(t,"exp","pow");return[n,r]=$p(n,r),zp.runKernel(Zh,{a:n,b:r})}}),by=Kp({prelu_:function(e,t){const n=jp(e,"x","prelu"),r=jp(t,"alpha","prelu");return zp.runKernel(Yh,{x:n,alpha:r})}});var xy=n("pDBr");class vy{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=xy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class wy{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xy.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ky=Kp({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new vy(t,n,r,!1,s),i=Hf(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Iy=Kp({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=Hf(e,r),i=new wy(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}}),Ny=Kp({relu_:function(e){const t=jp(e,"x","relu");return zp.runKernel(nd,{x:t})}}),Cy=Kp({reverse_:function(e,t){const n=jp(e,"x","reverse");return zp.runKernel(ud,{x:n},{dims:t})}}),Sy=Kp({selu_:function(e){const t=jp(e,"x","selu");return zp.runKernel(fd,{x:t})}}),_y=Kp({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=jp(e,"x","separableConv2d"),l=jp(t,"depthwiseFilter","separableConv2d"),u=jp(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=ag(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");lu(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),lu(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),lu(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),lu(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),lu(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];lu(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Ig(c,l,r,s,i,a),m=bg(f,u,1,"valid",i);return h?ag(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ty=Kp({sigmoid_:function(e){const t=jp(e,"x","sigmoid");return zp.runKernel(xd,{x:t})}}),$y=Kp({slice_:function(e,t,n){const r=jp(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return zp.runKernel(md,{x:r},{begin:t,size:n})}}),Ey=Kp({slice1d_:function(e,t,n){const r=jp(e,"x","slice1d");return lu(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),$y(r,[t],[n])}}),Ay=Kp({slice2d_:function(e,t,n){const r=jp(e,"x","slice2d");return lu(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),$y(r,t,n)}}),Ry=Kp({slice3d_:function(e,t,n){const r=jp(e,"x","slice3d");return lu(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),$y(r,t,n)}}),Fy=Kp({slice4d_:function(e,t,n){const r=jp(e,"x","slice4d");return lu(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),$y(r,t,n)}}),Dy=Kp({softmax_:function(e,t=-1){const n=jp(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return zp.runKernel(Cd,{logits:n},{dim:t})}}),Oy=Kp({softplus_:function(e){const t=jp(e,"x","softplus");return zp.runKernel(vd,{x:t})}}),My=Kp({split_:function(e,t,n=0){const r=jp(e,"x","split");return zp.runKernel(Nd,{x:r},{numOrSizeSplits:t,axis:n})}}),Ly=Kp({sqrt_:function(e){const t=jp(e,"x","sqrt");return zp.runKernel(wd,{x:t})}}),zy=Kp({squeeze_:function(e,t){const n=jp(e,"x","squeeze");return ag(n,Iu(n.shape,t).newShape)}}),Py=Kp({stack_:function(e,t=0){const n=qp(e,"tensors","stack","string_or_numeric");return lu(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&lu(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),zp.runKernel(Kh,n,{axis:t})}}),By=Kp({tanh_:function(e){const t=jp(e,"x","tanh");return zp.runKernel(Rd,{x:t})}});function Vy(e,t){cu(e);const n=Up(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Zp(e,null,n,t)}function Wy(e,t,n){if(cu(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Up(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Zp(e,t,r,n)}const Uy=Kp({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new vy(t,n,r,!0,s),i=Hf(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Hy=Kp({unstack_:function(e,t=0){const n=jp(e,"x","unstack","string_or_numeric");return lu(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),zp.runKernel(Ld,{value:n},{axis:t})}}),Gy=Kp({broadcastTo_:function(e,t){let n=jp(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ag(n,e)}const s=n.shape,a=Array.from(t);for(let i=t.length-1;i>=0;i--)if(s[i]===t[i])a[i]=1;else if(1!==n.shape[i])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?jf(n):zp.runKernel(Fd,{x:n},{reps:a})}}),jy=Kp({where_:function(e,t,n){const r=jp(t,"a","where"),s=jp(n,"b","where"),a=jp(e,"condition","where","bool"),i=$g(r.shape,s.shape),o=Gy(r,i),l=Gy(s,i);return 1===a.rank&&lu(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==a.rank&&uu(a.shape,l.shape,"Error in where: "),zp.runKernel(pd,{condition:a,t:o,e:l})}}),qy=Kp({zerosLike_:function(e){const t=jp(e,"x","zerosLike");return zp.runKernel(Pd,{x:t})}}),Ky=Kp({transpose_:function(e,t){const n=jp(e,"x","transpose");return null==t&&(t=n.shape.map((e,t)=>t).reverse()),lu(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{lu(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`)}),n.rank<=1?n.clone():zp.runKernel(Od,{x:n},{perm:t})}}),Xy=Kp({dropout_:function(e,t,n,r){const s=jp(e,"x","dropout");if(lu("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),lu(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof bp?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(fu(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(s,n),i=1-t,o=Cg(Og(Wm(Iy(a,0,1,"float32",r),i)),i);return Ug(s,o)}}),Zy=Kp({imag_:function(e){const t=jp(e,"input","imag");return zp.runKernel(dh,{input:t})}}),Yy=Kp({real_:function(e){const t=jp(e,"input","real");return zp.runKernel(ed,{input:t})}}),Jy=Kp({fft_:function(e){return lu("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),zp.runKernel(eh,{input:e})}}),Qy=Kp({rfft_:function(e,t){lu("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=$y(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=pg([e,py(r)],e.shape.length-1),n=t}else s=e;const a=qy(s),i=ag(Xp(s,a),[r,n]),o=Jy(i),l=Math.floor(n/2)+1,u=Yy(o),c=Zy(o),h=My(u,[l,n-l],u.shape.length-1),d=My(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,ag(Xp(h[0],d[0]),p)}}),eb=Kp({ifft_:function(e){return lu("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),zp.runKernel(hh,{input:e})}}),tb=Kp({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ag(e,[n,t]);r=eb(s)}else{const s=[n,2*(t-1)],a=ag(Yy(e),[n,t]),i=ag(Zy(e),[n,t]),o=Cy($y(a,[0,1],[n,t-2]),1),l=Ug(Cy($y(i,[0,1],[n,t-2]),1),Pm(-1)),u=pg([a,o],1),c=pg([i,l],1),h=ag(Xp(u,c),[s[0],s[1]]);r=eb(h)}if(r=Yy(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ag(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),nb=Kp({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=ag(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ag(t,[1,t.shape[0],t.shape[1],t.shape[2]])),lu(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),lu(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),lu(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];return lu(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),lu(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&lu(mu(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),zp.runKernel(Tc,{x:o,dy:l},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n})}}),rb=Kp({relu6_:function(e){const t=jp(e,"x","relu6");return zp.runKernel(ld,{x:t})}}),sb=Kp({step_:function(e,t=0){const n=jp(e,"x","step");return zp.runKernel(Bd,{x:n},{alpha:t})}});function ab(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ug(e,sb(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ib(e,t){let n=t;const r=Tg(e.shape,t.shape);return r.length>0&&(n=Gg(n,r)),ag(n,e.shape)}function ob(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ny(e);if("elu"===t)return Sg(e);if("relu6"===t)return rb(e);if("prelu"===t)return by(e,n);if("leakyrelu"===t)return Pg(e,r);throw new Error(`Unknown fused activation ${t}.`)}const lb=(e,t)=>!(e>0)||"linear"===t,ub=Kp({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===lb(zp.state.gradientDepth,l=l||"linear")){let h=bg(e,t,n,r,s,a,i);return null!=o&&(h=Wm(h,o)),ob(h,l,u,c)}const h=jp(e,"x","conv2d"),d=jp(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=ag(h,[1,h.shape[0],h.shape[1],h.shape[2]])),lu(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),lu(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),null!=i&&lu(mu(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),lu(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),lu(rg(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),lu("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const m=Xm(p.shape,d.shape,n,a,r,i);let g,y;null!=o&&(g=jp(o,"bias","fused conv2d"),[g]=$p(g,h),$g(m.outShape,g.shape)),null!=u&&(y=jp(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,i,o,u]=t,c=ab(e,o,l);lu(ng(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const h=[vg(i.shape,c,s,n,r),nb(i,c,s.shape,n,r)];if(null!=u){const e=ib(u,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?zm((e,t,n)=>{let r=zp.runKernel(Hd,x,v);return n([t,e,r]),f&&(r=ag(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):zm((e,t,n,r)=>{let s=zp.runKernel(Hd,x,v);return r([t,e,s,n]),f&&(s=ag(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}})(p,d,g)}}),cb=Kp({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=ag(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;return 3===l.rank&&(l=ag(t,[1,t.shape[0],t.shape[1],t.shape[2]])),zp.runKernel(Bc,{x:o,dy:l},{strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n})}}),hb=Kp({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=ag(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u=zp.runKernel(Vc,{dy:o,filter:n},{strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e});return l?ag(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),db=Kp({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===lb(zp.state.gradientDepth,l)){let h=Ig(e,t,n,r,s,a,i);return null!=o&&(h=Wm(h,o)),ob(h,l,u,c)}const h=jp(e,"x","depthwiseConv2d"),d=jp(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=ag(h,[1,h.shape[0],h.shape[1],h.shape[2]])),lu(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),lu(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),lu(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),lu(rg(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&lu(mu(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const m=Xm(p.shape,d.shape,n,a,r,i,!0);let g,y;null!=o&&(g=jp(o,"bias","fused conv2d"),[g]=$p(g,h),$g(m.outShape,g.shape)),null!=u&&(y=jp(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{lu(ng(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[s,o,u,c]=t,h=ab(e,u,l),d=hb(o.shape,h,s,n,r,a,i),p=cb(o,h,s.shape,n,r,a,i);return null!=c?[d,p,ib(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?zm((e,t,n)=>{let r=zp.runKernel(Gd,x,v);return n([t,e,r]),f&&(r=ag(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):zm((e,t,n,r)=>{let s=zp.runKernel(Gd,x,v);return r([t,e,s,n]),f&&(s=ag(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}})(p,d,g)}}),pb=Kp({matMul_:function(e,t,n=!1,r=!1){let s=jp(e,"a","matMul"),a=jp(t,"b","matMul");return[s,a]=$p(s,a),zp.runKernel(bc,{a:s,b:a},{transposeA:n,transposeB:r})}}),fb=Kp({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===lb(zp.state.gradientDepth,a)){let l=pb(e,t,n,r);return null!=s&&(l=Wm(l,s)),ob(l,a,i,o)}let l=jp(e,"a","fused matMul"),u=jp(t,"b","fused matMul");[l,u]=$p(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=du(f),y=du(m);lu(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),lu(fu(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),lu(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=l.shape.slice(0,-2).concat([d,p]),x=ag(l,n?[g,c,d]:[g,d,c]),v=ag(u,r?[y,p,h]:[y,h,p]);let w,k;null!=s&&(w=jp(s,"bias","fused matMul"),[w]=$p(w,l),$g(b,w.shape)),null!=i&&(k=jp(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=ab(ag(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=pb(c,o,!1,!1),d=pb(c,i,!0,!1)):n&&!r?(h=pb(o,c,!1,!0),d=pb(i,c,!1,!1)):(h=pb(o,c,!0,!0),d=pb(c,i,!0,!0)):(h=pb(c,o,!1,!0),d=pb(i,c,!0,!1)),null!=s?[h,d,ib(u,c)]:[h,d]},N={a:x,b:v,bias:w,preluActivationWeights:k},C={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?zm((e,t,n)=>{const r=zp.runKernel(Ud,N,C);return n([e,t,r]),{value:ag(r,b),gradFunc:I}})(x,v):zm((e,t,n,r)=>{const s=zp.runKernel(Ud,N,C);return r([e,t,s,n]),{value:ag(s,b),gradFunc:I}})(x,v,w)}});function mb(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Vy(s,"float32")}Kp({hammingWindow_:function(e){return mb(e,.54,.46)}});const gb=Kp({hannWindow_:function(e){return mb(e,.5,.5)}}),yb=Kp({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push($y(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=pg([$y(e,a,t-r),Dg([r],s)]);i.push(o),a+=n}return 0===i.length?Wy([],[0,t]):ag(pg(i),[i.length,t])}});function bb(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),lu(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),lu(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),lu(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),lu(1===t.rank,()=>"scores must be a 1D tensor"),lu(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),lu(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function xb(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||vb)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function vb(e,t){return e>t?1:e<t?-1:0}function wb(e,t,n,r,s){return Nb(e,t,n,r,s,0)}function kb(e,t,n,r,s,a){return Nb(e,t,n,r,s,0,!1,a,!0)}function Ib(e,t,n,r,s,a){return Nb(e,t,n,r,s,a,!0)}function Nb(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(_b);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=i;--l){const n=Cb(e,a,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*Sb(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&xb(u,t,_b))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Cb(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Sb(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function _b(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Kp({stft_:function(e,t,n,r,s=gb){null==r&&(r=Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2)))));const a=yb(e,t,n),i=Ug(a,s(t)),o=[];for(let l=0;l<a.shape[0];l++)o.push(Qy($y(i,[l,0],[1,t]),r));return pg(o)}}),Kp({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=jp(e,"image","cropAndResize"),o=jp(t,"boxes","cropAndResize","float32"),l=jp(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return lu(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),lu(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),lu(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),lu(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),lu(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),lu("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`),zp.runKernel(Mc,{image:i,boxes:o,boxInd:l},{method:s,extrapolationValue:a,cropSize:r})}}),Kp({flipLeftRight_:function(e){const t=jp(e,"image","flipLeftRight","float32");return lu(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),zp.runKernel(nh,{image:t},{})}}),Kp({rotateWithOffset_:function(e,t,n=0,r=.5){const s=jp(e,"image","rotateWithOffset","float32");return lu(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`),zp.runKernel(Wd,{image:s},{radians:t,fillValue:n,center:r})}}),Kp({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=jp(e,"boxes","nonMaxSuppression"),i=jp(t,"scores","nonMaxSuppression"),o=bb(a,i,n,r,s);return zp.runKernel(Uh,{boxes:a,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold})}}),Kp({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=jp(e,"boxes","nonMaxSuppression"),o=jp(t,"scores","nonMaxSuppression"),l=bb(i,o,n,r,s,a),u=zp.runKernel(Gh,{boxes:i,scores:o},{maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma});return{selectedIndices:u[0],selectedScores:u[1]}}}),Kp({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=jp(e,"boxes","nonMaxSuppression"),o=jp(t,"scores","nonMaxSuppression"),l=bb(i,o,n,r,s,null),u=zp.runKernel(Hh,{boxes:i,scores:o},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:u[0],validOutputs:u[1]}}});const Tb=Kp({resizeBilinear_:function(e,t,n=!1,r=!1){const s=jp(e,"images","resizeBilinear");lu(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),lu(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),lu(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=ag(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o=zp.runKernel(id,{images:a},{alignCorners:n,halfPixelCenters:r,size:t});return i?ag(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),$b=Kp({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=jp(e,"images","resizeNearestNeighbor");lu(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),lu(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),lu("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),lu(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=ag(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o=zp.runKernel(sd,{images:a},{alignCorners:n,halfPixelCenters:r,size:t});return i?ag(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Eb=Kp({lessEqual_:function(e,t){let n=jp(e,"a","lessEqual"),r=jp(t,"b","lessEqual");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(bh,{a:n,b:r})}});function Ab(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return zp.runKernel(Qh,{},{start:e,stop:t,step:n,dtype:r})}const Rb=Kp({bandPart_:function(e,t,n){lu(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),lu(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=jp(e,"a","bandPart");lu(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=ag(Ab(0,a,1,"int32"),[-1,1]),l=Ab(0,i,1,"int32"),u=Hg(o,l),c=qg(Eb(u,Pm(+t,"int32")),zg(u,Pm(-n,"int32"))),h=py([a,i],r.dtype);return ag(Py(Hy(ag(r,[-1,a,i])).map(e=>jy(c,e,h))),s)}});function Fb(e,t,n=null){if(0===e.rank)return Vm(e);if(1!==e.rank&&null===n)return Fb(ag(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Gg(Vm(e),n);if(t===1/0)return Wg(Vm(e),n);if(t===-1/0)return Jg(Vm(e),n);if("euclidean"===t||2===t)return Ly(Gg(yy(Vm(e),Pm(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Wg(Gg(Vm(e),n[0]),n[1]-1);if(t===1/0)return Wg(Gg(Vm(e),n[1]),n[0]);if(t===-1/0)return Jg(Gg(Vm(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ly(Gg(ly(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Db=Kp({norm_:function(e,t="euclidean",n=null,r=!1){const s=Fb(e=jp(e,"x","norm"),t,n);let a=s.shape;if(r){const t=ku(n,e.shape);a=ry(s.shape,t)}return ag(s,a)}}),Ob=Kp({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,lu(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)lu(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=My(e,e.shape[0],0).map(e=>zy(e,[0]));lu(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let s=0;s<e.length;++s)n.push(zp.tidy(()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=Ug(Gg(Ug(n[t],e)),n[t]);e=Hg(e,r)}return Cg(e,Db(e,"euclidean"))}));return t?Py(n,0):n}});function Mb(e,t=!1){return zp.tidy(()=>{lu(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=Fg(n),a=jf(e);const i=Wy([[1]],[1,1]);let o=jf(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=zp.tidy(()=>{const t=$y(a,[e,e],[n-e,1]),l=Db(t),u=$y(a,[e,e],[1,1]),c=jy(Lg(u,0),Wy([[-1]]),Wy([[1]])),h=Hg(u,Ug(c,l)),d=Cg(t,h);o=1===d.shape[0]?jf(i):pg([i,$y(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=cy(Cg(pb(c,h),l)),f=$y(a,[e,0],[n-e,r]),m=Ug(p,o),g=Ky(o);if(0===e)a=Hg(f,pb(m,pb(g,f)));else{const t=Hg(f,pb(m,pb(g,f)));a=pg([$y(a,[0,0],[e,r]),t],0)}const y=Ky(m),b=$y(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Hg(b,pb(pb(b,o),y));else{const t=Hg(b,pb(pb(b,o),y));s=pg([$y(s,[0,0],[n,e]),t],1)}return[o,a,s]}),Om([t,l,u])}return!t&&n>r&&(s=$y(s,[0,0],[n,r]),a=$y(a,[0,0],[r,r])),[s,a]})}const Lb=Kp({qr_:function(e,t=!1){if(lu(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return Mb(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Hy(ag(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach(e=>{const[n,r]=Mb(e,t);s.push(n),a.push(r)}),[ag(Py(s,0),e.shape),ag(Py(a,0),e.shape)]}}});var zb;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(zb||(zb={}));const Pb=Kp({computeWeightedLoss_:function(e,t,n=zb.SUM_BY_NONZERO_WEIGHTS){const r=jp(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=jp(t,"weights","computeWeightedLoss"));const a=null==s?r:Ug(r,s);if(n===zb.NONE)return a;if(n===zb.SUM)return Gg(a);if(n===zb.MEAN){if(null==s)return Yg(a);{const e=r.size/s.size,t=Cg(Gg(a),Gg(s));return e>1?Cg(t,Pm(e)):t}}if(n===zb.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Cg(Gg(a),Pm(r.size));{const e=Ug(s,fy(r.shape)),t=Gf(Gg(hy(e,Pm(0))),"float32");return Cg(Gg(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Kp({absoluteDifference_:function(e,t,n,r=zb.SUM_BY_NONZERO_WEIGHTS){const s=jp(e,"labels","absoluteDifference"),a=jp(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=jp(n,"weights","absoluteDifference")),uu(s.shape,a.shape,"Error in absoluteDifference: ");const o=Vm(Hg(s,a));return Pb(o,i,r)}}),Kp({cosineDistance_:function(e,t,n,r,s=zb.SUM_BY_NONZERO_WEIGHTS){const a=jp(e,"labels","cosineDistance"),i=jp(t,"predictions","cosineDistance");let o=null;null!=r&&(o=jp(r,"weights","cosineDistance")),uu(a.shape,i.shape,"Error in cosineDistance: ");const l=Pm(1),u=Hg(l,Gg(Ug(a,i),n,!0));return Pb(u,o,s)}}),Kp({hingeLoss_:function(e,t,n,r=zb.SUM_BY_NONZERO_WEIGHTS){let s=jp(e,"labels","hingeLoss");const a=jp(t,"predictions","hingeLoss");let i=null;null!=n&&(i=jp(n,"weights","hingeLoss")),uu(s.shape,a.shape,"Error in hingeLoss: ");const o=Pm(1);s=Hg(Ug(Pm(2),s),o);const l=Ny(Hg(o,Ug(s,a)));return Pb(l,i,r)}}),Kp({huberLoss_:function(e,t,n,r=1,s=zb.SUM_BY_NONZERO_WEIGHTS){const a=jp(e,"labels","huberLoss"),i=jp(t,"predictions","huberLoss");let o=null;null!=n&&(o=jp(n,"weights","huberLoss")),uu(a.shape,i.shape,"Error in huberLoss: ");const l=Pm(r),u=Vm(Hg(i,a)),c=Qg(u,l),h=Hg(u,c),d=Wm(Ug(Pm(.5),ly(c)),Ug(l,h));return Pb(d,o,s)}}),Kp({logLoss_:function(e,t,n,r=1e-7,s=zb.SUM_BY_NONZERO_WEIGHTS){const a=jp(e,"labels","logLoss"),i=jp(t,"predictions","logLoss");let o=null;null!=n&&(o=jp(n,"weights","logLoss")),uu(a.shape,i.shape,"Error in logLoss: ");const l=Pm(1),u=Pm(r),c=cy(Ug(a,Bg(Wm(i,u)))),h=Ug(Hg(l,a),Bg(Wm(Hg(l,i),u))),d=Hg(c,h);return Pb(d,o,s)}});const Bb=Kp({squaredDifference_:function(e,t){let n=jp(e,"a","squaredDifference"),r=jp(t,"b","squaredDifference");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(Sd,{a:n,b:r},{})}});Kp({meanSquaredError_:function(e,t,n,r=zb.SUM_BY_NONZERO_WEIGHTS){const s=jp(e,"labels","meanSquaredError"),a=jp(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=jp(n,"weights","meanSquaredError")),uu(s.shape,a.shape,"Error in meanSquaredError: ");const o=Bb(s,a);return Pb(o,i,r)}});const Vb=Kp({log1p_:function(e){const t=jp(e,"x","log1p");return zp.runKernel(wh,{x:t})}});Kp({sigmoidCrossEntropy_:function(e,t,n,r=0,s=zb.SUM_BY_NONZERO_WEIGHTS){let a=jp(e,"multiClassLabels","sigmoidCrossEntropy");const i=jp(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=jp(n,"weights","sigmoidCrossEntropy")),uu(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Pm(r),t=Pm(1),n=Pm(.5);a=Wm(Ug(a,Hg(t,e)),Ug(n,e))}const l=function(e,t){const n=jp(e,"labels","sigmoidCrossEntropyWithLogits"),r=jp(t,"logits","sigmoidCrossEntropyWithLogits");uu(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ny(r),a=Ug(r,n),i=Vb(Vg(cy(Vm(r))));return Wm(Hg(s,a),i)}(a,i);return Pb(l,o,s)}});const Wb=Kp({logSumExp_:function(e,t=null,n=!1){const r=jp(e,"x","logSumExp"),s=ku(t,r.shape),a=Wg(r,s,!0),i=Hg(r,a),o=Vg(i),l=Gg(o,s),u=Bg(l),c=Wm(ag(a,u.shape),u);if(n){const e=ry(c.shape,s);return ag(c,e)}return c}});Kp({softmaxCrossEntropy_:function(e,t,n,r=0,s=zb.SUM_BY_NONZERO_WEIGHTS){let a=jp(e,"onehotLabels","softmaxCrossEntropy");const i=jp(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=jp(n,"weights","softmaxCrossEntropy")),uu(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Pm(r),t=Pm(1),n=Pm(a.shape[1]);a=Wm(Ug(a,Hg(t,e)),Cg(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return zm((e,t,r)=>{const s=Wb(t,[n],!0),a=Hg(Gf(t,"float32"),s);r([e,a]);const i=cy(Ug(a,e));return{value:Gg(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=ry(e.shape,[n]);return[Ug(ag(e,a),Hg(Gf(r,"float32"),Vg(s))),Ug(ag(e,a),Hg(Vg(s),Gf(r,"float32")))]}}})(e,t)}(a,i);return Pb(l,o,s)}});const Ub={bandPart:Rb,gramSchmidt:Ob,qr:Lb};class Hb extends Bm{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=zp.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=zp.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Dm(()=>qy(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Dm(()=>qy(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Dm(()=>{const e=Wm(Ug(a,this.rho),Ug(ly(s),1-this.rho)),t=Ug(Cg(Ly(Wm(i,this.epsilon)),Ly(Wm(a,this.epsilon))),s),n=Wm(Ug(i,this.rho),Ug(ly(t),1-this.rho));a.assign(e),i.assign(n);const o=Wm(Ug(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Om(this.accumulatedGrads.map(e=>e.variable)),Om(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Hb.className="Adadelta",Am(Hb);class Gb extends Bm{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=zp.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Dm(()=>Dg(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Dm(()=>{const e=Wm(a,ly(s));a.assign(e);const t=Wm(Ug(Cg(s,Ly(Wm(e,zp.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Om(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Gb.className="Adagrad",Am(Gb);class jb extends Bm{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Dm(()=>{this.accBeta1=Pm(t).variable(),this.accBeta2=Pm(n).variable()}),null==r&&(this.epsilon=zp.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Dm(()=>{const n=Hg(1,this.accBeta1),r=Hg(1,this.accBeta2);t.forEach((t,s)=>{const a=zp.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Dm(()=>qy(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Dm(()=>qy(a).variable(!1))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Wm(Ug(o,this.beta1),Ug(i,1-this.beta1)),c=Wm(Ug(l,this.beta2),Ug(ly(i),1-this.beta2)),h=Cg(u,n),d=Cg(c,r);o.assign(u),l.assign(c);const p=Wm(Ug(Cg(h,Wm(Ly(d),this.epsilon)),-this.learningRate),a);a.assign(p)}),this.accBeta1.assign(Ug(this.accBeta1,this.beta1)),this.accBeta2.assign(Ug(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Om(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Om(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Dm(()=>{this.accBeta1.assign(yy(this.beta1,this.iterations_+1)),this.accBeta2.assign(yy(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}jb.className="Adam",Am(jb);class qb extends Bm{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Dm(()=>{this.iteration=Pm(0).variable(),this.accBeta1=Pm(t).variable()}),null==r&&(this.epsilon=zp.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Dm(()=>{const n=Hg(1,this.accBeta1),r=Cg(-this.learningRate,Wm(Ug(this.iteration,this.decay),1));t.forEach((t,s)=>{const a=zp.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:qy(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:qy(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Wm(Ug(o,this.beta1),Ug(i,1-this.beta1)),c=Ug(l,this.beta2),h=Vm(i),d=Zg(c,h);o.assign(u),l.assign(d);const p=Wm(Ug(Cg(r,n),Cg(u,Wm(d,this.epsilon))),a);a.assign(p)}),this.iteration.assign(Wm(this.iteration,1)),this.accBeta1.assign(Ug(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Om(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Om(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}qb.className="Adamax",Am(qb);class Kb extends Bm{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=zp.registeredVariables[t];Dm(()=>{const e=Wm(Ug(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Mm(Pm(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Kb.className="SGD",Am(Kb);class Xb extends Kb{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Pm(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=zp.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Dm(()=>qy(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Dm(()=>{let e;const t=Wm(Ug(this.m,s),a);e=Wm(Ug(this.c,this.useNesterov?Wm(a,Ug(t,this.m)):t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Om(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Xb.className="Momentum",Am(Xb);class Zb extends Bm{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=zp.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=zp.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Dm(()=>qy(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Dm(()=>qy(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Dm(()=>qy(r).variable(s))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Dm(()=>{const e=Wm(Ug(i,this.decay),Ug(ly(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Wm(Ug(t,this.decay),Ug(a,1-this.decay)),l=Cg(Ug(a,this.learningRate),Ly(Hg(e,Wm(ly(s),this.epsilon)))),u=Wm(Ug(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=Hg(r,u);r.assign(c)}else{const e=Wm(Ug(i,this.decay),Ug(ly(a),1-this.decay)),t=Wm(Ug(o,this.momentum),Cg(Ug(a,this.learningRate),Ly(Wm(e,this.epsilon))));i.assign(e),o.assign(t);const n=Hg(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Om(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Om(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Om(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Zb.className="RMSProp",Am(Zb);class Yb{static sgd(e){return new Kb(e)}static momentum(e,t,n=!1){return new Xb(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Zb(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new jb(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Hb(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new qb(e,t,n,r,s)}static adagrad(e,t=.1){return new Gb(e,t)}}const Jb={sgd:Yb.sgd,momentum:Yb.momentum,adadelta:Yb.adadelta,adagrad:Yb.adagrad,rmsprop:Yb.rmsprop,adamax:Yb.adamax,adam:Yb.adam},Qb="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function ex(){return new Promise(e=>Qb(()=>e()))}function tx(e,t){const n=e[0].length;e.forEach((e,t)=>{lu(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),lu(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)lu(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function nx(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const rx=30;function sx(e){return e<=rx?e:Lu(e,Math.floor(Math.sqrt(e)))}function ax(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ix(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function ox(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function lx(e,t,n,r=!0){const s=[];s.push(r?e[0]/n:e[0]*n);for(let a=1;a<e.length;++a)s.push(a<=t.length?r?t[a-1]*e[a]:e[a]/t[a-1]:e[a]);return s}function ux(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function cx(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function hx(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===du(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...zu(e.shape).map(e=>e/u),1].slice(0,a);return[l,i,u,c]}function dx(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function px(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}dx(n,t,e)}function fx(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let l=s;l<a;++l)i*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:du(t.shape)/o,sliceSize:i,strides:[...zu(n.slice(0,s)),1],outputSize:du(n)}}const mx=1.7580993408473768,gx=1.0507009873554805,yx=.3275911,bx=.254829592,xx=-.284496736,vx=1.421413741,wx=-1.453152027,kx=1.061405429;function Ix(...e){Xu().getBool("IS_TEST")||console.warn(...e)}function Nx(...e){Xu().getBool("IS_TEST")||console.log(...e)}function Cx(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Sx(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function _x(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Tx(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function $x(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ex(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ax(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Rx(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Fx(e,t,n=0){let r=[];if("number"==typeof t)lu(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{lu(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}lu(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Dx(e,t){let n,r=!1;for(e<=rx?(n=e,r=!0):n=Lu(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Lu(e,n+1);return n}function Ox(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)r.push(a!==t?e[a]:n);return r}function Mx(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Lx(e){try{return e.map(e=>ap(e))}catch(TU){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${TU}`)}}function zx(e){return e.map(e=>sp(e))}function Px(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=Hf(e,"int32"),s=Hf([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]);s.values.set(t,a*e.length)}return s.toTensor()}const Bx={kernelName:ec,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,sb(Gf(n,"float32"),-1))}}},Vx={kernelName:tc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ly(Gf(n,"float32")),r=Ly(Hg(Pm(1),t));return cy(Cg(e,r))}}}},Wx={kernelName:nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ly(Hg(ly(Gf(n,"float32")),1));return Cg(e,t)}}}},Ux={kernelName:rc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{let t=e;const r=Tg(n.shape,s);return r.length>0&&(t=Gg(t,r)),ag(t,n.shape)},b:()=>{let t=e;const n=Tg(r.shape,s);return n.length>0&&(t=Gg(t,n)),ag(t,r.shape)}}}},Hx={kernelName:sc,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Gx={kernelName:oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qy(n)}}},jx={kernelName:lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qy(n)}}},qx={kernelName:uc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,Ly(Hg(Pm(1),ly(Gf(n,"float32")))))}}},Kx={kernelName:cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ly(Wm(Pm(1),ly(Gf(n,"float32"))));return Cg(e,t)}}}},Xx={kernelName:pc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{const t=Wm(ly(n),ly(r));let a=Ug(e,Cg(r,t));const i=Tg(n.shape,s);return i.length>0&&(a=Gg(a,i)),ag(a,n.shape)},b:()=>{const t=Wm(ly(n),ly(r));let a=cy(Ug(e,Cg(n,t)));const i=Tg(r.shape,s);return i.length>0&&(a=Gg(a,i)),ag(a,r.shape)}}}},Zx={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,Wm(ly(Gf(n,"float32")),1))}}},Yx={kernelName:dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,Hg(Pm(1),ly(Gf(n,"float32"))))}}},Jx=Kp({avgPool3dGrad_:function(e,t,n,r,s,a){const i=jp(e,"dy","avgPool3dGrad"),o=jp(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=ag(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=ag(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),lu(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),lu(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),null!=a&&lu(mu(s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const h=zp.runKernel(yc,{dy:l,input:u},{filterSize:n,strides:r,pad:s,dimRoundingMode:a});return c?ag(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Qx={kernelName:gc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Jx(e,r,s,a,i,o)}}},ev=Kp({avgPoolGrad_:function(e,t,n,r,s){const a=jp(e,"dy","avgPoolGrad"),i=jp(t,"input","avgPoolGrad");lu(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=ag(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=ag(a,[1,a.shape[0],a.shape[1],a.shape[2]])),lu(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),lu(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c=zp.runKernel(mc,{dy:l,input:o},{filterSize:n,strides:r,pad:s});return u?ag(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),tv={kernelName:fc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ev(e,r,s,a,i)}}},nv={kernelName:bc,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>pb(e,s,!1,!1),b:()=>pb(e,r,!0,!1)}:a&&!i?{a:()=>pb(s,e,!1,!0),b:()=>pb(r,e,!1,!1)}:{a:()=>pb(s,e,!0,!0),b:()=>pb(e,r,!0,!0)}:{a:()=>pb(e,s,!1,!0),b:()=>pb(r,e,!0,!1)}}},rv=Kp({spaceToBatchND_:function(e,t,n){const r=jp(e,"x","spaceToBatchND");return lu(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),lu(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),lu(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),zp.runKernel(Id,{x:r},{blockShape:t,paddings:n})}}),sv={kernelName:xc,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>rv(e,r,s)}}},av={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n.inputShape,s=n.shape,a=Array.from(s);for(let o=r.length-1;o>=0;o--)if(r[o]===s[o])a[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const i=[];for(let o=0;o<a.length;o++)a[o]>1&&i.push(o);return{x:()=>Gg(e,i,!0)}}},iv={kernelName:wc,gradFunc:e=>({x:()=>e.clone()})},ov={kernelName:kc,gradFunc:e=>({x:()=>qy(e)})},lv={kernelName:Ic,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>jy(qg(zg(r,s),Eb(r,a)),e,qy(e))}}},uv={kernelName:Cc,inputsToSave:["x"],gradFunc:Bx.gradFunc},cv={kernelName:Sc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=ku(s,t[0].shape)[0],i=r.map(e=>e[a]);return My(e,i,a).map(e=>()=>e)}},hv={kernelName:_c,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return lu(ng(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>vg(r.shape,e,s,i,o,l),filter:()=>nb(r,e,s.shape,i,o,l)}}},dv={kernelName:$c,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>bg(e,s,a,i,o,1,l),filter:()=>nb(e,r,s.shape,a,i,o,l)}}},pv=Kp({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ag(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=ag(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),lu(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),lu(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),lu(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),lu(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),lu(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),zp.runKernel(Ac,{x:a,dy:i},{strides:r,pad:s,filterShape:n})}}),fv=Kp({conv3DBackpropInput_:function(e,t,n,r,s){lu(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=ag(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];lu(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),lu(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),lu(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),lu(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),lu(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c=zp.runKernel(Rc,{dy:i,filter:n},{pad:s,strides:r,inputShape:a});return o?ag(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),mv={kernelName:Ec,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;lu(ng(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>fv(i.shape,e,o,s,a),filter:()=>pv(i,e,o.shape,s,a)}}},gv=Kp({sin_:function(e){const t=jp(e,"x","sin");return zp.runKernel(gd,{x:t})}}),yv={kernelName:Fc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(cy(gv(Gf(n,"float32"))),e)}}},bv=Kp({sinh_:function(e){const t=jp(e,"x","sinh");return zp.runKernel(yd,{x:t})}}),xv={kernelName:Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(bv(Gf(n,"float32")),e)}}},vv=Kp({cumsum_:function(e,t=0,n=!1,r=!1){const s=jp(e,"x","cumsum");return zp.runKernel(Oc,{x:s},{axis:t,exclusive:n,reverse:r})}}),wv={kernelName:Oc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=ay([s],r.rank);let n=vv(e,s,a,!i);return null!=t&&(n=Ky(n,t)),n}}}},kv={kernelName:Pc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;lu(ng(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=t;return lu(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),lu(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),lu(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),lu(rg(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=i&&lu(mu(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),{x:()=>hb(l.shape,e,u,s,a,r,i),filter:()=>cb(l,e,u.shape,s,a,r,i)}}},Iv={kernelName:Uc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>zp.runKernel(Hc,a,n),filter:()=>zp.runKernel(Gc,i,n)}}},Nv={kernelName:qc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>zp.runKernel(Kc,r)}}},Cv={kernelName:Xc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ug(Vg(cy(ly(n))),2/Math.sqrt(Math.PI));return{x:()=>Ug(e,r)}}},Sv={kernelName:Yc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,n)}}},_v={kernelName:Jc,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ag(e,n.shape)}}},Tv={kernelName:Qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,Vg(n))}}},$v={kernelName:rh,gradFunc:e=>({x:()=>qy(e)})},Ev={kernelName:sh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{const t=Cg(e,Gf(r,"float32")),a=Tg(n.shape,s);return a.length>0?ag(Gg(t,a),n.shape):t},b:()=>{let t=Ug(e,Gf(n,"float32"));const a=Tg(r.shape,s);a.length>0&&(t=ag(Gg(t,a),r.shape));const i=ly(r);return cy(Cg(t,Gf(i,"float32")))}}}},Av=Kp({rsqrt_:function(e){const t=jp(e,"x","rsqrt");return zp.runKernel(hd,{x:t})}}),Rv={kernelName:ah,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Pm(1):o,u=Tg(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Hg(s,a),d=Ug(e,l),p=Av(Wm(i,Pm(r))),f=Ug(Ug(Ug(p,p),p),Pm(-.5));return{x:()=>ag(Ug(Ug(e,1===a.rank?Rg(ag(p,[1,1,1,a.shape[0]]),c):p),l),s.shape),mean:()=>{let e=Ug(Ug(p,Pm(-1)),d);return 1===a.rank&&(e=Gg(e,u)),ag(e,a.shape)},variance:()=>{let e=Ug(Ug(f,h),d);return 1===a.rank&&(e=Gg(e,u)),ag(e,a.shape)},scale:()=>{const t=Ug(h,p);let n=Ug(e,t);return 1===a.rank&&(n=Gg(n,u)),ag(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Gg(t,u)),ag(t,a.shape)}}}},Fv=Kp({unsortedSegmentSum_:function(e,t,n){const r=jp(e,"x","unsortedSegmentSum"),s=jp(t,"segmentIds","unsortedSegmentSum","int32");return lu(mu(n),()=>"numSegments must be of dtype int"),zp.runKernel(zd,{x:r,segmentIds:s},{numSegments:n})}}),Dv={kernelName:ih,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=ku(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=Ov(0,l),d=Ov(l+1,l+1+c),p=Mv([o,[n],u]),f=ag(e,p),m=ag(s,[n]),g=Mv([[l],h,d]),y=Ky(f,g);let b=Fv(y,m,r.shape[i]);const x=iy(g);return b=Ky(b,x),b},indices:()=>s}}};function Ov(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Mv(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Lv={kernelName:uh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>qy(n),b:()=>qy(r)}}},zv={kernelName:ch,gradFunc:e=>({x:()=>Gf(e,"float32")})},Pv={kernelName:ph,gradFunc:e=>({x:()=>qy(e)})},Bv={kernelName:fh,gradFunc:e=>({x:()=>qy(e)})},Vv={kernelName:mh,gradFunc:e=>({x:()=>qy(e)})},Wv={kernelName:gh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Lg(r,0);return{x:()=>jy(a,e,Ug(e,s))}}},Uv={kernelName:wh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,Wm(n,1))}}},Hv={kernelName:vh,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,Gf(n,"float32"))}}},Gv={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Vg(r);return Hg(e,Ug(Gg(e,s,!0),t))}}}},jv=Kp({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){return zp.runKernel(Sh,{x:e,y:t,dy:n},{depthRadius:r,bias:s,alpha:a,beta:i})}}),qv={kernelName:Ch,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>jv(r,s,e,a,i,o,l)}}};function Kv(e,t,n,r){return t.rank<n.rank&&(t=ag(t,ry(t.shape,r))),e.rank<n.rank&&(e=ag(e,ry(e.shape,r))),{x:()=>Ug(e,Gf(Eg(n,t),e.dtype))}}const Xv={kernelName:_h,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Kv(e,t[1],a,ku(s,a.shape));return{x:()=>i.x()}}},Zv=Kp({less_:function(e,t){let n=jp(e,"a","less"),r=jp(t,"b","less");return[n,r]=$p(n,r),$g(n.shape,r.shape),zp.runKernel(yh,{a:n,b:r})}}),Yv={kernelName:Th,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ug(e,Gf(zg(n,r),"float32")),b:()=>Ug(e,Gf(Zv(n,r),"float32"))}}},Jv=Kp({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=jp(e,"dy","maxPool3dGrad"),l=jp(t,"input","maxPool3dGrad"),u=jp(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=ag(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ag(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ag(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),lu(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),lu(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),lu(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),null!=i&&lu(mu(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const f=zp.runKernel(Rh,{dy:c,input:h,output:d},{filterSize:r,strides:s,pad:a,dimRoundingMode:i});return p?ag(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Qv={kernelName:Ah,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Jv(e,r,s,a,i,o,l)}}},ew=Kp({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=jp(e,"dy","maxPoolGrad"),l=jp(t,"input","maxPoolGrad"),u=jp(n,"output","maxPoolGrad");return lu(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),lu(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),lu(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),null!=i&&lu(mu(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),zp.runKernel(Eh,{dy:o,input:l,output:u},{filterSize:r,strides:s,pad:a,dimRoundingMode:i})}}),tw={kernelName:$h,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ew(e,r,s,a,i,o)}}},nw={kernelName:Dh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=ku(s,r.shape),i=du(ny(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});const n=ag(e,t);return Cg(Ug(n,fy(r.shape,"float32")),i)}}}},rw={kernelName:Oh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Kv(e,i,a,ku(s,a.shape));return{x:()=>o.x()}}},sw={kernelName:Mh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ug(e,Gf(Eb(n,r),"float32")),b:()=>Ug(e,Gf(Lg(n,r),"float32"))}}},aw={kernelName:Lh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>$y(e,a,r.shape)}}},iw={kernelName:zh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{const t=Tg(n.shape,s);return t.length>0?ag(Gg(e,t),n.shape):e},b:()=>{const t=Ug(e,cy(Og(Cg(n,r)))),a=Tg(r.shape,s);return a.length>0?ag(Gg(t,a),r.shape):t}}}},ow={kernelName:Bh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{const t=Ug(e,Gf(r,"float32")),a=Tg(n.shape,s);return a.length>0?ag(Gg(t,a),n.shape):t},b:()=>{const t=Ug(e,Gf(n,"float32")),a=Tg(r.shape,s);return a.length>0?ag(Gg(t,a),r.shape):t}}}},lw={kernelName:Vh,gradFunc:e=>({x:()=>cy(e)})},uw={kernelName:qh,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>py(n.shape,"float32")}}},cw={kernelName:jh,gradFunc:e=>({x:()=>qy(e)})},hw={kernelName:Kh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Hy(e,r).map(e=>()=>e)}},dw={kernelName:Xh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>$y(e,a,r.shape)}}},pw={kernelName:Zh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=$g(a.shape,i.shape);return{a:()=>{const t=Gf(i,"float32");let n=Ug(e,Ug(t,yy(a,Hg(t,Pm(1)))));const r=Tg(a.shape,o);return r.length>0&&(n=Gg(n,r)),ag(n,a.shape)},b:()=>{const t=Lg(a,0),n=jy(t,Bg(a),qy(a));let r=Ug(e,Ug(s,n));const l=Tg(i.shape,o);return l.length>0&&(r=Gg(r,l)),ag(r,i.shape)}}}},fw={kernelName:Yh,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Lg(n,0);return{x:()=>jy(s,e,Ug(e,r)),alpha:()=>{let t=jy(s,qy(e),Ug(e,n));const a=Tg(r.shape,e.shape);return a.length>0&&(t=Gg(t,a)),ag(t,r.shape)}}}},mw={kernelName:jc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{const t=Cg(e,Gf(r,"float32")),a=Tg(n.shape,s);return a.length>0?ag(Gg(t,a),n.shape):t},b:()=>{let t=Ug(e,Gf(n,"float32"));const a=Tg(r.shape,s);a.length>0&&(t=ag(Gg(t,a),r.shape));const i=ly(r);return cy(Cg(t,Gf(i,"float32")))}}}},gw={kernelName:td,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,cy(ly(n)))}}},yw={kernelName:ld,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ug(Eb(n,6),sb(n));return{x:()=>Ug(e,Gf(r,"float32"))}}},bw={kernelName:nd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,Gf(sb(n),"float32"))}}},xw={kernelName:rd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ag(e,n.shape)}}},vw={kernelName:id,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>zp.runKernel(od,s,n)}}},ww={kernelName:sd,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>zp.runKernel(ad,s,n)}}},kw={kernelName:ud,gradFunc:(e,t,n)=>{const{dims:r}=n,s=ku(r,e.shape);return{x:()=>Cy(e,s)}}},Iw={kernelName:cd,gradFunc:e=>({x:()=>qy(e)})},Nw={kernelName:hd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cy(Cg(e,Ug(yy(n,1.5),2)))}}},Cw=Kp({logicalNot_:function(e){const t=jp(e,"x","logicalNot","bool");return zp.runKernel(Ih,{x:t})}}),Sw={kernelName:pd,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Gf(qy(n),"float32"),t:()=>Ug(e,Gf(n,e.dtype)),e:()=>Ug(e,Gf(Cw(n),e.dtype))}}},_w={kernelName:fd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Lg(n,Pm(0)),r=Pm(mx),s=Pm(gx),a=Ug(e,s),i=Ug(Ug(e,r),Vg(Gf(n,"float32")));return jy(t,a,i)}}}},Tw={kernelName:xd,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,Ug(n,Hg(Pm(1),n)))}}},$w={kernelName:bd,gradFunc:e=>({x:()=>qy(e)})},Ew=Kp({cos_:function(e){const t=jp(e,"x","cos");return zp.runKernel(Fc,{x:t})}}),Aw={kernelName:gd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(Ew(Gf(n,"float32")),e)}}},Rw=Kp({cosh_:function(e){const t=jp(e,"x","cosh");return zp.runKernel(Dc,{x:t})}}),Fw={kernelName:yd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(Rw(Gf(n,"float32")),e)}}},Dw={kernelName:md,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=_m(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>gy(e,u)}}},Ow={kernelName:Cd,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Ug(e,r);return{logits:()=>Hg(a,Ug(Gg(a,[s],!0),r))}}},Mw={kernelName:vd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,Ty(n))}}},Lw=Kp({batchToSpaceND_:function(e,t,n){const r=jp(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);return lu(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),lu(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),lu(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`),zp.runKernel(xc,{x:r},{blockShape:t,crops:n})}}),zw={kernelName:Id,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Lw(e,r,s)}}},Pw={kernelName:Nd,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>pg(e,r)}}},Bw=[Bx,Vx,Wx,Ux,Hx,Gx,jx,qx,Kx,Xx,Zx,Yx,Qx,tv,nv,sv,av,iv,ov,lv,uv,cv,dv,hv,mv,yv,xv,wv,kv,Iv,mw,Nv,Cv,Sv,_v,Tv,Ev,$v,Rv,Dv,Lv,zv,Pv,Bv,Vv,Wv,Uv,Hv,Gv,qv,Xv,Xv,Yv,Qv,tw,nw,rw,sw,aw,iw,ow,lw,uw,cw,hw,dw,dw,pw,fw,gw,yw,bw,xw,vw,ww,kw,Iw,Nw,Sw,_w,Tw,$w,Aw,Fw,Dw,Ow,Mw,zw,zw,Pw,Pw,{kernelName:wd,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,Ug(Ly(Gf(n,"float32")),2))}}},{kernelName:Sd,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Pm(2);return{a:()=>Ug(e,Ug(s,Hg(n,r))),b:()=>Ug(e,Ug(s,Hg(r,n)))}}},{kernelName:_d,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(e,Ug(Gf(n,"float32"),2))}}},{kernelName:Bd,gradFunc:e=>({x:()=>qy(e)})},{kernelName:Td,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$g(n.shape,r.shape);return{a:()=>{let t=e;const r=Tg(n.shape,s);return r.length>0&&(t=Gg(t,r)),ag(t,n.shape)},b:()=>{let t=e;const n=Tg(r.shape,s);return n.length>0&&(t=Gg(t,n)),ag(cy(t),r.shape)}}}},{kernelName:kd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;ku(a,r.shape).forEach(e=>{s[e]=1});const i=ag(e,s),o=Ug(i,fy(r.shape,"float32"));return{x:()=>o}}},{kernelName:Ad,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cg(e,ly(Ew(n)))}}},{kernelName:Rd,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ug(Hg(Pm(1),ly(n)),e)}}},{kernelName:Fd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=qy(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Wm(t,$y(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=Wm(t,$y(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=Wm(t,$y(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=Wm(t,$y(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Od,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=iy(s);return{x:()=>Ky(e,a)}}},{kernelName:Ld,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Py(e,s)}}},{kernelName:zd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Zg(t,qy(t)),r=Mg(e,n);let s=zg(t,Pm(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=Ag(s,o+1);s=qg(s,fy(r.shape,"bool"));const i=qy(r);return jy(s,r,i)}(e,n)}}},{kernelName:Pd,gradFunc:e=>({x:()=>qy(e)})}];for(const $U of Bw)Jd($U);xp().prototype.abs=function(){return this.throwIfDisposed(),Vm(this)};const Vw=Kp({acos_:function(e){const t=jp(e,"x","acos");return zp.runKernel(tc,{x:t})}});xp().prototype.acos=function(){return this.throwIfDisposed(),Vw(this)};const Ww=Kp({acosh_:function(e){const t=jp(e,"x","acosh");return zp.runKernel(nc,{x:t})}});xp().prototype.acosh=function(){return this.throwIfDisposed(),Ww(this)},xp().prototype.add=function(e){return this.throwIfDisposed(),Wm(this,e)},xp().prototype.all=function(e,t){return this.throwIfDisposed(),Um(this,e,t)},xp().prototype.any=function(e,t){return this.throwIfDisposed(),Hm(this,e,t)},xp().prototype.argMax=function(e){return this.throwIfDisposed(),Gm(this,e)};const Uw=Kp({argMin_:function(e,t=0){const n=jp(e,"x","argMin");return zp.runKernel(lc,{x:n},{axis:t})}});xp().prototype.argMin=function(e){return this.throwIfDisposed(),Uw(this,e)},xp().prototype.asScalar=function(){return this.throwIfDisposed(),lu(1===this.size,()=>"The array must have only 1 element."),ag(this,[])},xp().prototype.asType=function(e){return this.throwIfDisposed(),Gf(this,e)},xp().prototype.as1D=function(){return this.throwIfDisposed(),ag(this,[this.size])},xp().prototype.as2D=function(e,t){return this.throwIfDisposed(),ag(this,[e,t])},xp().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ag(this,[e,t,n])},xp().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ag(this,[e,t,n,r])},xp().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ag(this,[e,t,n,r,s])};const Hw=Kp({asin_:function(e){const t=jp(e,"x","asin");return zp.runKernel(uc,{x:t})}});xp().prototype.asin=function(){return this.throwIfDisposed(),Hw(this)};const Gw=Kp({asinh_:function(e){const t=jp(e,"x","asinh");return zp.runKernel(cc,{x:t})}});xp().prototype.asinh=function(){return this.throwIfDisposed(),Gw(this)};const jw=Kp({atan_:function(e){const t=jp(e,"x","atan");return zp.runKernel(hc,{x:t})}});xp().prototype.atan=function(){return this.throwIfDisposed(),jw(this)};const qw=Kp({atan2_:function(e,t){let n=jp(e,"a","atan2"),r=jp(t,"b","atan2");return[n,r]=$p(n,r),zp.runKernel(pc,{a:n,b:r})}});xp().prototype.atan2=function(e){return this.throwIfDisposed(),qw(this,e)};const Kw=Kp({atanh_:function(e){const t=jp(e,"x","atanh");return zp.runKernel(dc,{x:t})}});xp().prototype.atanh=function(){return this.throwIfDisposed(),Kw(this)},xp().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ig(this,e,t,n,r)},xp().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Lw(this,e,t)},xp().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),lg(this,e,t,n,r,s)},xp().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Gy(this,e)},xp().prototype.cast=function(e){return this.throwIfDisposed(),Gf(this,e)};const Xw=Kp({ceil_:function(e){const t=jp(e,"x","ceil");return zp.runKernel(kc,{x:t})}});xp().prototype.ceil=function(){return this.throwIfDisposed(),Xw(this)},xp().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),dg(this,e,t)},xp().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof bp&&(e=[e]),pg([this,...e],t)},xp().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),xg(this,e,t,n,r,s,a)},xp().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),wg(this,e,t,n,r,s)},xp().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),bg(this,e,t,n,r,s,a)},xp().prototype.cos=function(){return this.throwIfDisposed(),Ew(this)},xp().prototype.cosh=function(){return this.throwIfDisposed(),Rw(this)},xp().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),vv(this,e,t,n)};const Zw=Kp({depthToSpace_:function(e,t,n="NHWC"){const r=jp(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return lu(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),lu(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),lu(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),zp.runKernel(zc,{x:r},{blockSize:t,dataFormat:n})}});xp().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Zw(this,e,t)},xp().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ig(this,e,t,n,r,s,a)};const Yw=Kp({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=jp(e,"x","dilation2d"),o=jp(t,"filter","dilation2d");lu(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),lu(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),lu("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=i,u=!1;3===i.rank&&(l=ag(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c=zp.runKernel(Uc,{x:l,filter:o},{strides:n,pad:r,dilations:s});return u?ag(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});xp().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Yw(this,e,t,n,r,s)};const Jw=Kp({divNoNan_:function(e,t){let n=jp(e,"a","div"),r=jp(t,"b","div");[n,r]=$p(n,r);const s=Cg(n,r),a=qy(s),i=Eg(r,a);return jy(i,a,s)}});xp().prototype.divNoNan=function(e){return this.throwIfDisposed(),Jw(this,e)},xp().prototype.div=function(e){return this.throwIfDisposed(),Cg(this,e)};const Qw=Kp({dot_:function(e,t){const n=jp(e,"t1","dot"),r=jp(t,"t2","dot");lu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(lu(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=ag(n,[1,-1]),t=ag(r,[-1,1]),s=pb(e,t);return ag(s,[])}if(1===n.rank&&2===r.rank){const e=ag(n,[1,-1]),t=ag(r,[r.shape[0],r.shape[1]]),s=pb(e,t);return ag(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ag(r,[-1,1]),t=pb(n,e);return ag(t,[t.size])}{const e=ag(r,[r.shape[0],r.shape[1]]);return pb(n,e)}}});xp().prototype.dot=function(e){return this.throwIfDisposed(),Qw(this,e)},xp().prototype.elu=function(){return this.throwIfDisposed(),Sg(this)},xp().prototype.equal=function(e){return this.throwIfDisposed(),Eg(this,e)};const ek=Kp({erf_:function(e){let t=jp(e,"x","erf");return lu("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Gf(t,"float32")),zp.runKernel(Xc,{x:t})}});xp().prototype.erf=function(){return this.throwIfDisposed(),ek(this)},xp().prototype.exp=function(){return this.throwIfDisposed(),Vg(this)},xp().prototype.expandDims=function(e){return this.throwIfDisposed(),Ag(this,e)};const tk=Kp({expm1_:function(e){const t=jp(e,"x","expm1");return zp.runKernel(Qc,{x:t})}});xp().prototype.expm1=function(){return this.throwIfDisposed(),tk(this)},xp().prototype.fft=function(){return this.throwIfDisposed(),Jy(this)},xp().prototype.flatten=function(){return this.throwIfDisposed(),ag(this,[this.size])},xp().prototype.floor=function(){return this.throwIfDisposed(),Og(this)},xp().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ng(this,e)},xp().prototype.gather=function(e,t){return this.throwIfDisposed(),Mg(this,e,t)},xp().prototype.greaterEqual=function(e){return this.throwIfDisposed(),zg(this,e)},xp().prototype.greater=function(e){return this.throwIfDisposed(),Lg(this,e)},xp().prototype.ifft=function(){return this.throwIfDisposed(),eb(this)},xp().prototype.irfft=function(){return this.throwIfDisposed(),tb(this)};const nk=Kp({isFinite_:function(e){const t=jp(e,"x","isFinite");return zp.runKernel(ph,{x:t})}});xp().prototype.isFinite=function(){return this.throwIfDisposed(),nk(this)};const rk=Kp({isInf_:function(e){const t=jp(e,"x","isInf");return zp.runKernel(fh,{x:t})}});xp().prototype.isInf=function(){return this.throwIfDisposed(),rk(this)};const sk=Kp({isNaN_:function(e){const t=jp(e,"x","isNaN");return zp.runKernel(mh,{x:t})}});xp().prototype.isNaN=function(){return this.throwIfDisposed(),sk(this)},xp().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Pg(this,e)},xp().prototype.lessEqual=function(e){return this.throwIfDisposed(),Eb(this,e)},xp().prototype.less=function(e){return this.throwIfDisposed(),Zv(this,e)};const ak=Kp({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=jp(e,"x","localResponseNormalization");lu(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),lu(mu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=ag(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l=zp.runKernel(Ch,{x:i},{depthRadius:t,bias:n,alpha:r,beta:s});return o?ag(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});xp().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ak(this,e,t,n,r)};const ik=Kp({logSigmoid_:function(e){const t=jp(e,"x","logSigmoid");return zm(e=>({value:cy(Oy(cy(e))),gradFunc:t=>Ug(t,Ty(cy(e)))}))(t)}});xp().prototype.logSigmoid=function(){return this.throwIfDisposed(),ik(this)},xp().prototype.logSoftmax=function(e){return this.throwIfDisposed(),jg(this,e)},xp().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Wb(this,e,t)},xp().prototype.log=function(){return this.throwIfDisposed(),Bg(this)},xp().prototype.log1p=function(){return this.throwIfDisposed(),Vb(this)},xp().prototype.logicalAnd=function(e){return this.throwIfDisposed(),qg(this,e)},xp().prototype.logicalNot=function(){return this.throwIfDisposed(),Cw(this)};const ok=Kp({logicalOr_:function(e,t){const n=jp(e,"a","logicalOr","bool"),r=jp(t,"b","logicalOr","bool");return $g(n.shape,r.shape),zp.runKernel(Nh,{a:n,b:r})}});xp().prototype.logicalOr=function(e){return this.throwIfDisposed(),ok(this,e)};const lk=Kp({logicalXor_:function(e,t){const n=jp(e,"a","logicalXor","bool"),r=jp(t,"b","logicalXor","bool");return $g(n.shape,r.shape),qg(ok(e,t),Cw(qg(e,t)))}});xp().prototype.logicalXor=function(e){return this.throwIfDisposed(),lk(this,e)},xp().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),pb(this,e,t,n)},xp().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Kg(this,e,t,n,r)},xp().prototype.max=function(e,t){return this.throwIfDisposed(),Wg(this,e,t)},xp().prototype.maximum=function(e){return this.throwIfDisposed(),Zg(this,e)},xp().prototype.mean=function(e,t){return this.throwIfDisposed(),Yg(this,e,t)},xp().prototype.min=function(e,t){return this.throwIfDisposed(),Jg(this,e,t)},xp().prototype.minimum=function(e){return this.throwIfDisposed(),Qg(this,e)};const uk=Kp({mirrorPad_:function(e,t,n){lu("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=jp(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");lu(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let a=0;a<r.rank;a++)lu(2===t[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),lu(t[a][0]>=0&&t[a][0]<=r.shape[a]-s&&t[a][1]>=0&&t[a][1]<=r.shape[a]-s,()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);return zp.runKernel(Lh,{x:r},{paddings:t,mode:n})}});xp().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),uk(this,e,t)};const ck=Kp({mod_:function(e,t){let n=jp(e,"a","mod"),r=jp(t,"b","mod");return[n,r]=$p(n,r),zp.runKernel(zh,{a:n,b:r})}});xp().prototype.mod=function(e){return this.throwIfDisposed(),ck(this,e)},xp().prototype.mul=function(e){return this.throwIfDisposed(),Ug(this,e)},xp().prototype.neg=function(){return this.throwIfDisposed(),cy(this)},xp().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Db(this,e,t,n)},xp().prototype.notEqual=function(e){return this.throwIfDisposed(),hy(this,e)},xp().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),dy(this,e,t,n)},xp().prototype.onesLike=function(){return this.throwIfDisposed(),my(this)},xp().prototype.pad=function(e,t){return this.throwIfDisposed(),gy(this,e,t)};const hk=Kp({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=jp(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=ag(i,[1,i.shape[0],i.shape[1],i.shape[2]])),lu(rg(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const u=qm(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),i=t.map((e,t)=>(e-a[t]%e)%e),o=s.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:rv(o,c,p),y=("avg"===n?()=>ig(g,t,a,m):()=>Kg(g,t,a,m))(),b=d?y:Lw(y,c,f);return l?ag(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});xp().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),hk(this,e,t,n,r,s)},xp().prototype.pow=function(e){return this.throwIfDisposed(),yy(this,e)},xp().prototype.prelu=function(e){return this.throwIfDisposed(),by(this,e)};const dk=Kp({prod_:function(e,t=null,n=!1){let r=jp(e,"x","prod");return"bool"===r.dtype&&(r=Gf(r,"int32")),zp.runKernel(Jh,{x:r},{axis:t,keepDims:n})}});xp().prototype.prod=function(e,t){return this.throwIfDisposed(),dk(this,e,t)};const pk=Kp({reciprocal_:function(e){const t=jp(e,"x","reciprocal");return zp.runKernel(td,{x:t})}});xp().prototype.reciprocal=function(){return this.throwIfDisposed(),pk(this)},xp().prototype.relu=function(){return this.throwIfDisposed(),Ny(this)},xp().prototype.relu6=function(){return this.throwIfDisposed(),rb(this)},xp().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ag(this,e.shape)},xp().prototype.reshape=function(e){return this.throwIfDisposed(),ag(this,e)},xp().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Tb(this,e,t,n)},xp().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),$b(this,e,t,n)},xp().prototype.reverse=function(e){return this.throwIfDisposed(),Cy(this,e)},xp().prototype.rfft=function(){return this.throwIfDisposed(),Qy(this)};const fk=Kp({round_:function(e){const t=jp(e,"x","round");return zp.runKernel(cd,{x:t})}});xp().prototype.round=function(){return this.throwIfDisposed(),fk(this)},xp().prototype.rsqrt=function(){return this.throwIfDisposed(),Av(this)},xp().prototype.selu=function(){return this.throwIfDisposed(),Sy(this)},xp().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),_y(this,e,t,n,r,s,a)},xp().prototype.sigmoid=function(){return this.throwIfDisposed(),Ty(this)};const mk=Kp({sign_:function(e){const t=jp(e,"x","sign");return zp.runKernel(bd,{x:t})}});xp().prototype.sign=function(){return this.throwIfDisposed(),mk(this)},xp().prototype.sin=function(){return this.throwIfDisposed(),gv(this)},xp().prototype.sinh=function(){return this.throwIfDisposed(),bv(this)},xp().prototype.slice=function(e,t){return this.throwIfDisposed(),$y(this,e,t)},xp().prototype.softmax=function(e){return this.throwIfDisposed(),Dy(this,e)},xp().prototype.softplus=function(){return this.throwIfDisposed(),Oy(this)},xp().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),rv(this,e,t)},xp().prototype.split=function(e,t){return this.throwIfDisposed(),My(this,e,t)},xp().prototype.sqrt=function(){return this.throwIfDisposed(),Ly(this)},xp().prototype.square=function(){return this.throwIfDisposed(),ly(this)},xp().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Bb(this,e)},xp().prototype.squeeze=function(e){return this.throwIfDisposed(),zy(this,e)},xp().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof bp?[this,e]:[this,...e];return Py(n,t)},xp().prototype.step=function(e){return this.throwIfDisposed(),sb(this,e)};const gk=Kp({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u=jp(e,"x","stridedSlice");return zp.runKernel(Ed,{x:u},{begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}});xp().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),gk(this,e,t,n,r,s,a,i,o)},xp().prototype.sub=function(e){return this.throwIfDisposed(),Hg(this,e)},xp().prototype.sum=function(e,t){return this.throwIfDisposed(),Gg(this,e,t)};const yk=Kp({tan_:function(e){const t=jp(e,"x","tan");return zp.runKernel(Ad,{x:t})}});xp().prototype.tan=function(){return this.throwIfDisposed(),yk(this)},xp().prototype.tanh=function(){return this.throwIfDisposed(),By(this)},xp().prototype.tile=function(e){return this.throwIfDisposed(),Rg(this,e)},xp().prototype.toBool=function(){return this.throwIfDisposed(),Gf(this,"bool")},xp().prototype.toFloat=function(){return this.throwIfDisposed(),Gf(this,"float32")},xp().prototype.toInt=function(){return this.throwIfDisposed(),Gf(this,"int32")};const bk=Kp({topk_:function(e,t=1,n=!0){const r=jp(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=zp.runKernel(Dd,a,i);return{values:o,indices:l}}});xp().prototype.topk=function(e,t){return this.throwIfDisposed(),bk(this,e,t)},xp().prototype.transpose=function(e){return this.throwIfDisposed(),Ky(this,e)};const xk=Kp({unique_:function(e,t=0){const n=jp(e,"x","unique","string_or_numeric");lu(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[a,i]=zp.runKernel(Md,r,s);return{values:a,indices:i}}});let vk;function wk(){return null==vk&&(vk=zp.backend.epsilon()),vk}xp().prototype.unique=function(e){return this.throwIfDisposed(),xk(this,e)},xp().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Fv(this,e,t)},xp().prototype.unstack=function(e){return this.throwIfDisposed(),Hy(this,e)},xp().prototype.where=function(e,t){return this.throwIfDisposed(),jy(e,this,t)},xp().prototype.zerosLike=function(){return this.throwIfDisposed(),qy(this)};class kk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kk.prototype)}}class Ik extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ik.prototype)}}class Nk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Nk.prototype)}}class Ck extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ck.prototype)}}class Sk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sk.prototype)}}function _k(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Tk(e,t){if(!e)throw new Sk(t)}function $k(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Ek(e){return 1===e.length?e[0]:e}function Ak(e){return Array.isArray(e)?e:[e]}function Rk(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Fk(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}Error;let Dk={};function Ok(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Mk(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Mk(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Mk(t):e[n]=t.value)}}}function Lk(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Dk)a=Dk[s];else if(a=t[s],null==a)throw new Nk(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Nk(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Dk?[o,l]=Dk.className:i in t&&([o,l]=t[i]),null==o)throw new Nk(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(Dk))e[n]=Dk[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},Dk);for(const s of Object.keys(n))Dk[s]=n[s];Mk(a.config);const r=l(o,a.config,n,s);return Dk=Object.assign({},t),r}{const e=Object.assign({},Dk);for(const r of Object.keys(n))Dk[r]=n[r];const t=new o(a.config);return Dk=Object.assign({},e),t}}}function zk(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Pk(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Bk(e){if(null==e)throw new Nk(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Vk(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Nk(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Wk(e,t,n=0,r=1/0){return Tk(n>=0),Tk(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Uk(e,t){Array.isArray(e)?(r.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>Uk(e,`element ${n+1} of ${t}`))):r.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Hk(e)}.`)}function Hk(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>Hk(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Gk(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function jk(e,t){return Dm(()=>Ly(Gg(Ug(e,e),t,!0)))}class qk extends u.Serializable{getConfig(){return{}}}class Kk extends qk{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Dm(()=>{const t=jk(e,this.axis),n=dg(t,0,this.maxValue);return Ug(e,Cg(n,Wm(wk(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Kk.className="MaxNorm",u.registerClass(Kk);class Xk extends qk{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Dm(()=>Cg(e,Wm(wk(),jk(e,this.axis))))}getConfig(){return{axis:this.axis}}}Xk.className="UnitNorm",u.registerClass(Xk);class Zk extends qk{apply(e){return Ny(e)}}Zk.className="NonNeg",u.registerClass(Zk);class Yk extends qk{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Dm(()=>{const t=jk(e,this.axis),n=Wm(Ug(this.rate,dg(t,this.minValue,this.maxValue)),Ug(1-this.rate,t));return Ug(e,Cg(n,Wm(wk(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Yk.className="MinMaxNorm",u.registerClass(Yk);const Jk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Qk(e){return Ok(e)}function eI(e,t={}){return Lk(e,u.SerializationMap.getMap().classNameMap,t,"constraint")}function tI(e){return null==e?null:"string"==typeof e?eI({className:e in Jk?Jk[e]:e,config:{}}):e instanceof qk?e:eI(e)}const nI=["channelsFirst","channelsLast"],rI=["nearest","bilinear"],sI=["valid","same","causal"],aI=["max","avg"],iI=["sum","mul","concat","ave"],oI=new Map;function lI(e){Vk(nI,"DataFormat",e)}function uI(e){Vk(sI,"PaddingMode",e)}function cI(e){Vk(aI,"PoolMode",e)}const hI=[];function dI(e,t){hI.push(e);try{const e=t();return hI.pop(),e}catch(n){throw hI.pop(),n}}function pI(e){if(!gI(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===hI.length?"":hI.join("/")+"/")+e}function fI(e){if(!gI(e))throw new Error("Not a valid tensor name: '"+e+"'");oI.has(e)||oI.set(e,0);const t=oI.get(e);if(oI.set(e,oI.get(e)+1),t>0){const n=`${e}_${t}`;return oI.set(n,1),n}return e}const mI=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function gI(e){return!!e.match(mI)}function yI(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function bI(e){return Vy(e=Array.isArray(e)?new Float32Array(e):e)}function xI(e){return Jg(bI(e)).dataSync()[0]}function vI(e){return Wg(bI(e)).dataSync()[0]}function wI(e,t){if(t<e)throw new Nk(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function kI(e,t){return e.asType(t)}function II(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function NI(e,t,n){return Dm(()=>{switch(e.rank){case 1:return Ey(e,t,n);case 2:return Ay(e,[t,0],[n,e.shape[1]]);case 3:return Ry(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Fy(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return $y(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return $y(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Nk(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function CI(e,t,n){return Dm(()=>{switch(e.rank){case 1:return Ey(e,t,n);case 2:return Ay(e,[0,t],[e.shape[0],n]);case 3:return Ry(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Fy(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Nk(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function SI(e,t,n,r){return Dm(()=>{switch(e.rank){case 1:return Ey(e,t,n);case 2:switch(r){case 1:return NI(e,t,n);case 2:return CI(e,t,n);default:throw new Nk(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return NI(e,t,n);case 2:return Ry(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return CI(e,t,n);default:throw new Nk(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return NI(e,t,n);case 2:return Fy(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Fy(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return CI(e,t,n);default:throw new Nk(`The axis is not within the rank of the tensor ${r}`)}default:throw new Nk(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function _I(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),pg(e,t)}function TI(e,t){switch(e.rank){case 1:return fg([e,t]);case 2:return mg([e,t],0);case 3:return gg([e,t],0);case 4:return yg([e,t],0);default:throw new Nk(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function $I(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Nk(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Rg(e,t)}function EI(e,t=0,n=1,r,s){return ky(e,t,n,r,s)}function AI(e,t,n,r){if(e.rank<2||t.rank<2)throw new Ck(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ck(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return c.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?DI(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(h).reshape([l,-1]);const d=[...s,...u];return c.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?DI(e.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function RI(e,t,n){return Dm(()=>(t=Array.isArray(t)?Vy(t,"int32"):t.toInt(),Mg(e,t,n)))}function FI(e){return Ug(e,e)}function DI(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Nk(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new Nk(`Unsupported input rank by biasAdd: ${t.rank}`)}function OI(e,t,n){return Dm(()=>(null==n&&(n="channelsLast"),lI(n),e.add(DI(e.rank,t,n))))}function MI(e,t,n,r){return Dm(()=>Xy(e,t,n,r))}function LI(e,t,n=!1){return n?e():t()}const zI=["fanIn","fanOut","fanAvg"],PI=["normal","uniform","truncatedNormal"];class BI extends u.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class VI extends BI{apply(e,t){return py(e,t)}}VI.className="Zeros",u.registerClass(VI);class WI extends BI{apply(e,t){return fy(e,t)}}WI.className="Ones",u.registerClass(WI);class UI extends BI{constructor(e){if(super(),"object"!=typeof e)throw new Nk(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Nk(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Dm(()=>Ug(Pm(this.value),fy(e,t)))}getConfig(){return{value:this.value}}}UI.className="Constant",u.registerClass(UI);class HI extends BI{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Iy(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}HI.className="RandomUniform",u.registerClass(HI);class GI extends BI{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ck(`randomNormal does not support dType ${t}.`);return EI(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}GI.className="RandomNormal",u.registerClass(GI);class jI extends BI{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ck(`truncatedNormal does not support dType ${t}.`);return Uy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}jI.className="TruncatedNormal",u.registerClass(jI);class qI extends BI{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Dm(()=>{if(2!==e.length||e[0]!==e[1])throw new Nk("Identity matrix initializer can only be used for 2D square matrices.");return Ug(this.gain,Fg(e[0]))})}getConfig(){return{gain:this.gain}}}qI.className="Identity",u.registerClass(qI);class KI extends BI{constructor(e){if(super(),e.scale<0)throw new Nk(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,Vk(zI,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,Vk(PI,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(lI(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=yI(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=yI(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=yI(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if(a/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,s):Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ck(`${this.getClassName()} does not support dType ${t}.`);return Uy(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Iy(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}KI.className="VarianceScaling",u.registerClass(KI);class XI extends KI{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return KI.className}}XI.className="GlorotUniform",u.registerClass(XI);class ZI extends KI{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return KI.className}}ZI.className="GlorotNormal",u.registerClass(ZI);class YI extends KI{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return KI.className}}YI.className="HeNormal",u.registerClass(YI);class JI extends KI{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return KI.className}}JI.className="HeUniform",u.registerClass(JI);class QI extends KI{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return KI.className}}QI.className="LeCunNormal",u.registerClass(QI);class eN extends KI{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return KI.className}}eN.className="LeCunNormal",u.registerClass(eN);class tN extends BI{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Ck("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Dm(()=>{if(e.length<2)throw new Ck("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=EI(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Ub.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Ug(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}tN.className="Orthogonal",u.registerClass(tN);const nN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function rN(e,t={}){return Lk(e,u.SerializationMap.getMap().classNameMap,t,"initializer")}function sN(e){return Ok(e)}function aN(e){if("string"==typeof e){const t=e in nN?nN[e]:e;if("GlorotNormal"===t)return new ZI;if("GlorotUniform"===t)return new XI;if("HeNormal"===t)return new YI;if("HeUniform"===t)return new JI;if("LeCunNormal"===t)return new QI;if("LeCunUniform"===t)return new eN;{const e={};return e.className=t,e.config={},rN(e)}}return e instanceof BI?e:rN(e)}let iN=0;function oN(){return iN++}const lN={};function uN(e=""){return e in lN||(lN[e]=0),lN[e]+=1,e+lN[e].toString()}function cN(e){return Array.isArray(e)&&Array.isArray(e[0])}function hN(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function dN(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Nk(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function pN(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Nk(`Expected exactly 1 Shape; got ${e.length}`)}return e}function fN(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce((e,t)=>e*t);return t}class mN{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=oN(),this.originalName=pI(n=null==n?"Variable":n),this.name=fI(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return zp.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function gN(e){return e.map(e=>e.read())}function yN(e){e.forEach(e=>{e[0].write(e[1])})}class bN{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class xN{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=oN(),null!=a&&(this.originalName=pI(a),this.name=fI(this.originalName)),this.rank=t.length}}let vN=0;class wN{constructor(e,t){this.callArgs=t,this.id=vN++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let kN=0;class IN extends u.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=kN++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Rk(e)+"_"+uN(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ik(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Nk(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ek(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ek(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new kk(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new kk(`Layer ${this.name} is not connected, no input to return.`);return Ek(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new kk(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new kk(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ek(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Ak(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Ak(this.inputSpec);if(e.length!==t.length)throw new Nk(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Nk(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Nk(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Nk(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Nk(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Nk(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Nk(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ak(e);let r=!0;for(const a of n)if(!(a instanceof xN)){r=!1;break}let s=!0;for(const a of n)if(a instanceof xN){s=!1;break}if(r===s)throw new Nk("Arguments to apply() must be all SymbolicTensors or all Tensors");return dI(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ak(e))t.push(n.shape);this.build(Ek(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=Ak(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Ek(a),null!=this.activityRegularizer)throw new Ck("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Ak(e);const t=[];for(const n of e)t.push(n.shape);return Ek(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new xN(a,n,this,Ak(e),t,this.name,r)):new xN(a,r,this,Ak(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Ck("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new kk(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new kk(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ik(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fN(this.weights)}build(e){this.built=!0}getWeights(e=!1){return gN(e?this.trainableWeights:this.weights)}setWeights(e){Dm(()=>{const t=this.weights;if(t.length!==e.length)throw new Nk(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=gN(t);for(let a=0;a<s.length;++a){const i=s[a],o=t[a],l=e[a];if(!r.arraysEqual(i.shape,l.shape))throw new Nk(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}yN(n)})}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Nk(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=aN("zeros"));const o=r.apply(t,n),l=new mN(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ak(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=Ak(e);t=Ak(t),n=Ak(n),r=Ak(r),s=hN(s),a=hN(a);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new wN({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function NN(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=NN(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class CN extends IN{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:uN("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Nk("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Nk("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Nk("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new xN(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Nk(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function SN(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Om(r)}}function _N(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var TN;CN.className="InputLayer",u.registerClass(CN),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(TN||(TN={}));class $N{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class EN{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class AN extends $N{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=Dm(()=>Wm(this.totals[r],Ug(e,n)));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Dm(()=>{const e=Ug(Cg(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Mm(t[n])}))}}class RN extends $N{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)"number"!=typeof r[a]&&(e.push(r[a].data()),t.push(s),n.push(a))}const r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}class FN extends $N{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=r.now();return(...a)=>{const i=r.now();return i-s<t||(s=i,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await SN(n),r.push(this.yield(e,t,n))),r.push(ex()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await SN(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await SN(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(ex()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await SN(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await SN(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(ex()):r.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await SN(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await SN(e),await this.trainEnd(e))}}function DN(e,t){return null==e&&(e={}),e instanceof $N?[e]:Array.isArray(e)&&e[0]instanceof $N?e:Ak(e).map(e=>new FN(e,t))}class ON{constructor(){}static registerCallbackConstructor(e,t){r.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ON.checkForDuplicate(t),null==ON.constructors[e]&&(ON.constructors[e]=[]),ON.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ON.constructors)ON.constructors[+t].forEach(t=>{if(t===e)throw new Nk("Duplicate callback constructor.")})}static clear(){ON.constructors={}}static createCallbacks(e){const t=[];for(const n in ON.constructors){const r=+n;e>=r&&t.push(...ON.constructors[r])}return t.map(e=>new e)}}function MN(e,t,n,r,s,a,i,o,l){const u=new RN,c=[new AN,...ON.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new EN(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function LN(e,t={},n=!1){return Lk(e,u.SerializationMap.getMap().classNameMap,t,"layer",n)}function zN(e,t){return Dm(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Gg(FI(e),t,!0),r=Dg(n.shape,wk()),s=Ly(Zg(n,r));return Cg(e,s)})}function PN(e,t){return Dm(()=>Yg(FI(Hg(t,e)),-1))}function BN(e,t){return Dm(()=>Yg(Vm(Hg(t,e)),-1))}function VN(e,t){return Dm(()=>{const n=Hg(e,t),r=dg(Vm(e),wk(),Number.MAX_VALUE),s=Vm(Cg(n,r));return Ug(100,Yg(s,-1))})}function WN(e,t,n=!1){return Dm(()=>{if(n)t=Dy(t);else{const e=Gg(t,t.shape.length-1,!0);t=Cg(t,e)}return t=dg(t,wk(),1-wk()),cy(Gg(Ug(e.toFloat(),Bg(t)),t.shape.length-1))})}function UN(e,t,n=!1){return Dm(()=>{const r=Og(function(e){const t=[yI(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=dg(t,wk(),1-wk())).shape;return WN(dy(r,s[s.length-1]).reshape(s),t,n)})}function HN(e,t){return Dm(()=>{let n;return n=dg(t,wk(),1-wk()),n=Bg(Cg(n,Hg(1,n))),Yg(function(e,t){if(!r.arraysEqual(e.shape,t.shape))throw new Nk(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Dm(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}(e,n),-1)})}function GN(e,t){return Dm(()=>{const n=zN(e,-1),r=zN(t,-1),s=Ug(n,r);return cy(Gg(s,-1))})}ON.constructors={};const jN={meanSquaredError:PN,meanAbsoluteError:BN,meanAbsolutePercentageError:VN,meanSquaredLogarithmicError:function(e,t){return Dm(()=>{const n=dg(t,wk(),Number.MAX_VALUE),r=Bg(Wm(1,n)),s=dg(e,wk(),Number.MAX_VALUE),a=Bg(Wm(1,s));return Yg(FI(Hg(r,a)),-1)})},squaredHinge:function(e,t){return Dm(()=>{const n=Zg(0,Hg(1,Ug(e,t)));return Yg(FI(n),-1)})},hinge:function(e,t){return Dm(()=>{const n=Zg(0,Hg(1,Ug(e,t)));return Yg(n,-1)})},categoricalHinge:function(e,t){return Dm(()=>{const n=Gg(Ug(e,t),-1),r=Wg(Ug(Hg(1,e),t),-1);return Zg(0,Wm(1,Hg(r,n)))})},logcosh:function(e,t){return Dm(()=>{const n=Math.log(2),r=Hg(t,e),s=Hg(Wm(r,Oy(Ug(-2,r))),n);return Yg(s,-1)})},categoricalCrossentropy:WN,sparseCategoricalCrossentropy:UN,binaryCrossentropy:HN,kullbackLeiblerDivergence:function(e,t){return Dm(()=>{const n=dg(e,wk(),1),r=dg(t,wk(),1);return Gg(Ug(e,Bg(Cg(n,r))),-1)})},poisson:function(e,t){return Dm(()=>{const n=Bg(Wm(wk(),t));return Yg(Hg(t,Ug(e,n)),-1)})},cosineProximity:GN};function qN(e){if("string"==typeof e){if(e in jN)return jN[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Nk(t)}return e}function KN(e,t){return Dm(()=>{const n=Ug(.5,my(t)),r=kI(Lg(t,n),e.dtype);return Yg(Eg(e,r),-1)})}function XN(e,t){return Dm(()=>kI(Eg(Gm(e,-1),Gm(t,-1)),"float32"))}function ZN(e,t){return HN(e,t)}function YN(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Eg(e,t).asType("float32")}const JN=WN,QN=UN,eC={binaryAccuracy:KN,categoricalAccuracy:XN,precision:function(e,t){return Dm(()=>{const n=function(e,t){return Dm(()=>qg(e.equal(1),t.equal(1)).sum().cast("float32"))}(e,t),r=function(e,t){return Dm(()=>qg(e.equal(0),t.equal(1)).sum().cast("float32"))}(e,t),s=n.add(r);return jy(Lg(s,0),n.div(s),0).cast("float32")})},categoricalCrossentropy:JN,sparseCategoricalCrossentropy:QN,mse:PN,MSE:PN,mae:BN,MAE:BN,mape:VN,MAPE:VN,cosine:GN};function tC(e){if("string"==typeof e&&e in eC)return eC[e];if("string"!=typeof e&&null!=e)return e;throw new Nk(`Unknown metric ${e}`)}function nC(e){if(Tk(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(jN))if(jN[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(eC))if(eC[n]===e){t=n;break}return void 0!==t?t:e.name}}function rC(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!sC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function sC(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!sC(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!sC(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function aC(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function iC(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(TU){r="multiple"}aC([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function oC(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(TU){s="multiple"}const a=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e)a.push(`${u.inboundLayers[e].name}[${u.nodeIndices[e]}][${u.tensorIndices[e]}]`);const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];aC([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let u=1;u<a.length;++u)aC(["","","",a[u]],t,r)}function lC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function uC(e,t){if(null===e)return null;if("string"==typeof e)return Fk(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];lC(t,s,r)?n.push(r):n.push(uC(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Fk(n);t[e]=uC(r,e)}}return t}}function cC(e,t){if(null==e)return null;if("string"==typeof e)return Rk(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];lC(t,s,r)?n.push(r):n.push(cC(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Rk(n)]="name"!==n&&"className"!==n||"string"!=typeof r?cC(r,n):r}return t}}class hC{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof hC)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Nk(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Gf(t,e.dtype)}catch(TU){throw new Nk(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof xN){if(null==this.id2Value[e.id])throw new Nk(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Nk(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof xN){if(null==this.id2Value[e.id])throw new Nk(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Nk(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Om(this.id2Mask)}}const dC={},pC={};function fC(e,t,n,s){const a=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map(e=>e.name),u=[],c=t.names();for(const r of l)-1!==c.indexOf(r)?u.push(t.getValue(r)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().join(",");let d,p;if(null==dC[h]){const e=function(e,t){r.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(1===e.length){const r=gC(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=gC(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach(e=>s[t].add(e))}}return{sorted:n,recipientCounts:mC(s)}}(o,t);d=e.sorted,p=e.recipientCounts,dC[h]=d,pC[h]=p}d=dC[h],p={},a||Object.assign(p,pC[h]);const f=new hC(t);for(let r=0;r<d.length;++r){if(null!=s){const e=Fm().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=d[r],i=e.sourceLayer;if(i instanceof CN)continue;const o=[],c=[],h=[];let m=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);o.push(e),c.push(r),null!=r&&(m=!0),a||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==l.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||h.push(e))}m&&((n=n||{}).mask=c[0]);const g=Ak(i.apply(o,n));let y=null;i.supportsMasking&&(y=i.computeMask(o,c));const b=yC(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=l.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}a||Om(h)}return f.disposeMasks(),i?u:u[0]}function mC(e){const t={};for(const n in e)t[n]=e[n].size;return t}function gC(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function yC(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class bC extends IN{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=uN(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],Pk(this.inputs).length!==this.inputs.length)throw new Nk(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);Pk(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.nodeIndex,t=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Tk(0===t,"input layer has >1 nodes"),Tk(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof CN))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Ik(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(bC.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++)o(u.inputTensors[a],t,n,u.inboundLayers[a],u.nodeIndices[a],u.tensorIndices[a]);for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];e=Math.max(e,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r].inboundNodes[y.nodeIndices[r]];t[s.id]=Math.max(e+1,null==t[s.id]?0:t[s.id]),n[s.id]=s}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(s[y])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(zk);this.layers=[];for(const y of p){const e=d[y];e.sort((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof bC&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(zk);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ik(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const y of g){const e=g.filter(e=>e===y).length;if(1!==e)throw new Ik(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Nk("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new Nk(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new Nk(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Nk(`${e.length} of ${r} weights are not set: ${e}`)}yN(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.2.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=cC(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Dm(()=>{e=Ak(e);const n=new hC;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return fC(this.outputs,n,t)})}computeMask(e,t){return Dm(()=>{let n;return e=Ak(e),n=null==t?_k(null,e.length):Ak(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=hN(e);if(t.length!==this.inputLayers.length)throw new Nk(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(zk);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++)r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`]);const s=hN(e.computeOutputShape(Ek(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++)a.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<a.length;i++){const e=a[i];Tk(e in n),s.push(n[e])}return Ek(s)}runInternalGraph(e,t){null==t&&(t=_k(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(zk);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=Ak(e.call(t,u)),l=Ak(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map(e=>e[0]),i=a.map(e=>e[1]),null==u.mask&&(u.mask=i),o=Ak(e.call(r,u)),l=Ak(e.computeMask(r,i));if(e.activityRegularizer)throw new Ck("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e)n[s[e].id]=[o[e],l[e]]}}}const s=[],a=[],i=[];for(const o of this.outputs){Tk(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof bC?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=bC.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Nk(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Nk("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new Nk(`No such layer: ${e}`)}calculateLosses(){return Dm(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=bC.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=bC.nodeKey(a,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(TU){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.tensorIndices[r];let o=t[bC.nodeKey(s,e.nodeIndices[r])];null==o&&(o=0),n.push([s.name,o,a,i])}s.push(n)}}}const i={};i.name=a.name,i.className=e,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=bC.nodeKey(e,this.inputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let s=t[n];null==s&&(s=0),r.push([e.name,s,this.inputLayersTensorIndices[a]])}e.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=bC.nodeKey(e,this.outputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let r=t[n];null==r&&(r=0),s.push([e.name,r,this.outputLayersTensorIndices[a]])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);n.push(c.inboundNodes[l].outputTensors[u])}n.length>0&&e.apply(Ek(n),r)}function l(e){const n=e.name,a=LN(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new Nk(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)})}const u=t.name,c=t.layers;for(const m of c)l(m);for(;!Bk(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];Tk(e in s),h.push(s[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];Tk(e in s),d.push(s[e].inboundNodes[t].outputTensors[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Nk("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Dm(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function xC(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{n.push(t in e?e[t]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function vC(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Dm(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1)return e.argMax(1);if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Om(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),Vy(s,"float32")}return null}function wC(e,t){return Ug(e,t)}function kC(e,t){let n,s;n=t.xs,s=t.ys,r.assert(null!=n&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=IC("input",e.inputNames,n),i=IC("output",e.outputNames,s),o=a[0].shape[0];r.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),r.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)r.assert(a[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)r.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function IC(e,t,n){if(n instanceof bp)return[n];if(Array.isArray(n))return r.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new Nk(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function NC(e){return"function"==typeof e.iterator}function CC(e){r.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function SC(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>NI(e,t,n-t)):NI(e,t,n-t)}function _C(e,t){return Dm(()=>null==e?null:Array.isArray(e)?e.map(e=>_C(e,t)):RI(e,"int32"===t.dtype?t:t.toInt()))}function TC(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function $C(e){const t=[];e instanceof bp&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(II(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function EC(e,t){if(null==e)return;const n=[];if(t instanceof bp)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const s in t)n.push(t[s].id);const r=[];if(e instanceof bp)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function AC(e){return Array.isArray(e)}function RC(e){return!function(e){return e instanceof bp}(e)&&!AC(e)}function FC(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(AC(e)&&e.length>0)t=!0;else if(RC(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Nk(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let a;if(RC(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Nk(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(AC(e)){if((e=e).length!==t.length)throw new Nk(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Nk(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=$C(a),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new Nk(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=e.shape[a],l=n[i][a];if(null!=l&&l>=0&&o!==l)throw new Nk(`Error when checking ${s}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${e.shape}].`)}}return a}function DC(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Nk(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Nk(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new Nk(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=e.shape[a],l=n[i][a];if(null!=l&&l!==o)throw new Nk(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class OC extends bC{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Nk("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),aC(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?iC(o[c],n,r):oC(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=fN(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),u=fN(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Jb.adagrad(.01),Adadelta:()=>Jb.adadelta(1,.95,wk()),Adam:()=>Jb.adam(.001,.9,.999,wk()),Adamax:()=>Jb.adamax(.002,.9,.999,wk(),0),RMSProp:()=>Jb.rmsprop(.001,.9,0,wk()),SGD:()=>Jb.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Nk(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Bm))throw new Nk("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Nk(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>qN(e))}else{const n=qN(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Nk(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(qN(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a];this.feedOutputNames.push(this.outputNames[a]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],dI("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};dI("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===HN?-1!==["accuracy","acc"].indexOf(i)?r=KN:-1!==["crossentropy","ce"].indexOf(i)&&(r=ZN):this.lossFunctions[e]===UN?-1!==["accuracy","acc"].indexOf(i)?r=YN:-1!==["crossentropy","ce"].indexOf(i)&&(r=QN):-1!==["accuracy","acc"].indexOf(i)?r=XN:-1!==["crossentropy","ce"].indexOf(i)&&(r=JN),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=tC(i);a=e,n=""+nC(i)}let t;dI(n,()=>{t=a}),s(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;CC(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);return this.makeTestFunction(),Ek(this.testLoop(this.testFunction,a,r,n.verbose,n.steps))}finally{EC(s[0],e),EC(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new Ck("Verbose mode is not implemented yet.");r.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const o="function"==typeof t.next?t:await t.iterator();let l=0,u=0;for(;!s||u<n.batches;){const t=await o.next();if(i=Dm(()=>{if(t.value){const{xs:n,ys:r}=kC(e,t.value),s=n.concat(r),o=Dm(()=>a(s));if(Om(s),0===u)for(let e=0;e<o.length;++e)i.push(Pm(0));const c=s[0].shape[0];for(let e=0;e<o.length;++e){const t=o[e],n=i[e];i[e]=Dm(()=>Wm(i[e],Ug(c,t))),u>0&&Om(n)}Om(o),l+=c,++u}return i}),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let r=0;r<i.length;++r){const e=i[r];i[r]=Cg(i[r],l),Om(e)}return Ek(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Nk(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Nk(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Nk("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),s=new hC;if(e instanceof bp&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Nk(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Nk(`No value is provided for the model's input ${i.name}`);s.add(i,t)}const a=fC(r,s);return n?a:a[0]}retrieveSymbolicTensors(e){const t=_k(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(e=>e.name);for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new Nk(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Dm(()=>{const r=this.checkNumSamples(e);if(n)throw new Ck("Verbose predictLoop() is not implemented yet.");const s=TC(r,t),a=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)Dm(()=>{const n=SC(e,s[t][0],s[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const a=new hC(r);return fC(this.outputs,a)}).forEach((e,t)=>a[t].push(e));return Ek(a.map(e=>pg(e,0)))})}predict(e,t={}){const n=$C(e);DC(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return CC(r),this.predictLoop(n,r)}finally{EC(n,e)}}predictOnBatch(e){DC(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Ik("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];a.push(this.feedLossFns[r]===UN?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const s=Pk(e.map(e=>e.shape[0]));s.sort();const a=Pk(t.map(e=>e.shape[0]));if(a.sort(),s.length>1)throw new Nk(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new Nk(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(s.length>0&&a.length>0&&!r.arraysEqual(s,a))throw new Nk(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=FC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=FC(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[PN,HN,WN];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===WN&&1===a.shape[a.shape.length-1])throw new Nk(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Nk(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Nk(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=xC(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await vC(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Dm(()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Ck("Verbose mode is not implemented yet.");if(null!=s)throw new Ck("steps mode in testLoop() is not implemented yet");{const r=TC(a,n),s=Vy(wI(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=NI(s,a,o-a),u=_C(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Pm(0));for(let e=0;e<c.length;++e)i[e]=Wm(i[e],Ug(o-a,c[e]))}for(let e=0;e<i.length;++e)i[e]=Cg(i[e],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;$k(e,r)>1&&(s+=`_${$k(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new hC(e),o=fC(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=wC(e,s[n]));const a=Yg(e);t.push(a),l=0===n?e:Wm(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=Yg((0,this.metricsTensors[n][0])(r[t],o[t]))}Mm(e),a.push(e)}return l=Yg(l),this.calculateLosses().forEach(e=>{l=Wm(l,e)}),l},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Dm(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new hC(a),o=fC(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=Yg((0,this.lossFunctions[e])(s[e],o[e]));n=0===e?r:Wm(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=Yg((0,this.metricsTensors[e][0])(s[n],o[n]));t.push(r)}return t})}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,l,u,c,h;e.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;CC(d);const p=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);a=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Ck("validationData including sample weights is not supported yet."):new Nk(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);o=s.validationData[0],l=s.validationData[1];const t=!0,n=await e.standardizeUserData(o,l,null,null,t,d);u=n[0],c=n[1],m=u.concat(c)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-s.validationSplit)),t=a[0].shape[0];u=SC(a,e,t),a=SC(a,0,e),c=SC(i,e,t),i=SC(i,0,e),m=u.concat(c)}else null!=s.validationSteps&&(g=!0);const y=a.concat(i).concat(h);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;g?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map(e=>"val_"+e))):(v=null,m=[],w=x.slice());const k=DN(s.callbacks,s.yieldEvery);return await async function(e,t,n,s,a,i,o,l,u,c,h,d,p,f,m){null==a&&(a=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=u&&null!=c&&(g=!0);const y=e.checkNumSamples(n,a,null,"steps_per_epoch");let b;null!=y&&(b=wI(0,y)),null==o&&(o=1);const{callbackList:x,history:v}=MN(l,o,i,p,y,null,a,g,d);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<i;++w){await x.onEpochBegin(w);const i={};{if("batch"===h)throw new Ck("batch shuffling is not implemneted yet");h&&r.shuffle(b);const o=Vy(b),l=TC(y,a);for(let r=0;r<l.length;++r){const h={};if(await x.onBatchBegin(r,h),Dm(()=>{const d=l[r][0],p=l[r][1],f=NI(o,d,p-d);h.batch=r,h.size=p-d;const m=_C(n,f),y=t(m);for(let e=0;e<s.length;++e){const t=y[e];h[s[e]]=t,Mm(t)}if(r===l.length-1&&g){const t=e.testLoop(u,c,a);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];Mm(r),i["val_"+n]=r}}}),await x.onBatchEnd(r,h),_N(h),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(w,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,d,s.epochs,s.verbose,k,v,m,s.shuffle,w,s.initialEpoch)}finally{e.isTraining=!1,EC(a,t),EC(i,n),EC(u,o),EC(c,l),null!=h&&Om(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(r.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),r.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),r.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(NC(n.validationData))r.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new Ck("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const h=DN(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=MN(h,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const r={};await p.onEpochBegin(m);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=kC(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=xC(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await vC(s[e],null,t[e]))}const o=r.concat(s).concat(i),d=l(o);Om(o);for(let e=0;e<u.length;++e){const t=d[e];a[u[e]]=t,Mm(t)}await p.onBatchEnd(h,a),_N(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(a){let t;t=NC(n.validationData)?Ak(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ak(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)r[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,r),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return Om(a),Ek(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Fm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Fm().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Rk(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Rk(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Rk(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Rk(nC(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Rk(nC(e)));{const e={};for(const t in this.metrics)e[t]=Rk(nC(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=LN(uC(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Fk(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Fk(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Fk(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>Fk(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Fk(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=i.getSaveHandlers(e);if(0===t.length)throw new Nk(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Nk(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Nk("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.2.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=i.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(rC(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){rC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}OC.className="Model",u.registerClass(OC);class MC extends OC{}MC.className="Functional",u.registerClass(MC);class LC extends OC{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:uN("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new Nk(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof LC||e instanceof OC;let n;if(t){if(n=e,1!==n.outputs.length)throw new Nk("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Nk("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Nk("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Nk("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new CN({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Nk(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Nk("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=NN(this.outputs[0])}this.inboundNodes=[],new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:_k(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(pN(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new OC({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Ik("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ik("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Ik("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ik("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Nk("Legacy serialization format not supported yet.");a=t}else r.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof LC))throw new Ck(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const r of a){const e=LN(r,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new Nk("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Nk("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}LC.className="Sequential",u.registerClass(LC);class zC extends u.Serializable{getConfig(){return{}}}class PC extends zC{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Ck(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Sg(e)}(e,t)}}PC.className="elu",u.registerClass(PC);class BC extends zC{apply(e){return Sy(e)}}BC.className="selu",u.registerClass(BC);class VC extends zC{apply(e){return Ny(e)}}VC.className="relu",u.registerClass(VC);class WC extends zC{apply(e){return Dm(()=>Qg(6,Ny(e)))}}WC.className="relu6",u.registerClass(WC);class UC extends zC{apply(e){return e}}UC.className="linear",u.registerClass(UC);class HC extends zC{apply(e){return Ty(e)}}HC.className="sigmoid",u.registerClass(HC);class GC extends zC{apply(e){return function(e){return Dm(()=>{const t=Wm(.5,Ug(.2,e));return dg(t,0,1)})}(e)}}GC.className="hardSigmoid",u.registerClass(GC);class jC extends zC{apply(e){return Oy(e)}}jC.className="softplus",u.registerClass(jC);class qC extends zC{apply(e){return function(e){return Dm(()=>Cg(e,Vm(e).add(1)))}(e)}}qC.className="softsign",u.registerClass(qC);class KC extends zC{apply(e){return By(e)}}KC.className="tanh",u.registerClass(KC);class XC extends zC{apply(e,t=-1){return Dy(e,t)}}XC.className="softmax",u.registerClass(XC);class ZC extends zC{apply(e,t=-1){return jg(e,t)}}ZC.className="logSoftmax",u.registerClass(ZC);class YC extends zC{apply(e,t=1){return Dm(()=>Ty(e.mul(t)).mul(e))}}function JC(e){return e.getClassName()}function QC(e,t={}){return Lk(e,u.SerializationMap.getMap().classNameMap,t,"activation")}function eS(e){if(null==e)return QC({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},QC(t)}return e instanceof zC?e:QC(e)}YC.className="swish",u.registerClass(YC);class tS extends u.Serializable{}class nS extends tS{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Dm(()=>{let t=py([1]);return this.hasL1&&(t=Wm(t,Gg(Ug(this.l1,Vm(e))))),this.hasL2&&(t=Wm(t,Gg(Ug(this.l2,FI(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}nS.className="L1L2",u.registerClass(nS);const rS={l1l2:"L1L2"};function sS(e){return Ok(e)}function aS(e,t={}){return Lk(e,u.SerializationMap.getMap().classNameMap,t,"regularizer")}function iS(e){return null==e?null:"string"==typeof e?aS({className:e in rS?rS[e]:e,config:{}}):e instanceof tS?e:aS(e)}class oS extends IN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=dN(e);let n=Ny(e);return null!=this.maxValue&&(n=dg(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}oS.className="ReLU",u.registerClass(oS);class lS extends IN{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=dN(e);return Pg(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}lS.className="LeakyReLU",u.registerClass(lS);class uS extends IN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=aN(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=iS(e.alphaRegularizer),this.alphaConstraint=tI(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Nk(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=pN(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new bN({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=dN(e),by(e,this.alpha.read())}getConfig(){const e={alphaInitializer:sN(this.alphaInitializer),alphaRegularizer:sS(this.alphaRegularizer),alphaConstraint:Qk(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}uS.className="PReLU",u.registerClass(uS);class cS extends IN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ck(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=dN(e);return Sg(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}cS.className="ELU",u.registerClass(cS);class hS extends IN{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=dN(e);return n.mul(kI(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}hS.className="ThresholdedReLU",u.registerClass(hS);class dS extends IN{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new XC).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=dN(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function pS(e,t,n){if("number"==typeof e)return _k(e,t);if(e.length!==t)throw new Nk(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Nk(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function fS(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function mS(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+vI([n-t,0]);else{if("same"!==r)throw new Nk(`Unsupport padding mode: ${r}.`);e*=t}return e}function gS(e,t){return Dm(()=>(lI(t),"channelsFirst"===t?Ky(e,[0,2,3,1]):e))}function yS(e,t){return Dm(()=>(lI(t),"channelsFirst"===t?Ky(e,[0,2,3,4,1]):e))}function bS(e,t,n,r=[1,1],s="valid",a,i,o=null){return Dm(()=>{if(null==a&&(a="channelsLast"),lI(a),3!==e.rank&&4!==e.rank)throw new Nk(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Nk(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=gS(e,a);if("causal"===s)throw new Ck("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=c.conv2d({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Ky(l,[0,3,1,2])),l})}dS.className="Softmax",u.registerClass(dS);class xS extends IN{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",xS.verifyArgs(t),this.rank=e,Uk(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ck(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pS(t.kernelSize,e,"kernelSize"),this.strides=pS(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,uI(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,lI(this.dataFormat),this.activation=eS(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=aN(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=tI(t.biasConstraint),this.biasRegularizer=iS(t.biasRegularizer),this.activityRegularizer=iS(t.activityRegularizer),this.dilationRate=pS(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Nk(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Nk(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Nk(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Tk("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Wk(e.kernelSize,"number",1,3))throw new Nk(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:JC(this.activation),useBias:this.useBias,biasInitializer:sN(this.biasInitializer),biasRegularizer:sS(this.biasRegularizer),activityRegularizer:sS(this.activityRegularizer),biasConstraint:Qk(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class vS extends xS{constructor(e,t){super(e,t),this.kernel=null,vS.verifyArgs(t),this.filters=t.filters,Uk(this.filters,"filters"),this.kernelInitializer=aN(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=tI(t.kernelConstraint),this.kernelRegularizer=iS(t.kernelRegularizer)}build(e){e=pN(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Nk(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Dm(()=>{let t;e=dN(e);const n=null==this.bias?null:this.bias.read(),r=Gk(this.activation.getClassName());if(null!=r&&2===this.rank)t=bS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Dm(()=>{if(null==a&&(a="channelsLast"),lI(a),3!==e.shape.length)throw new Nk(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Nk(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Nk(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Ky(e,[0,2,1])),"causal"===s)throw new Ck("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=xg(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=OI(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=bS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ck("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Dm(()=>{if(null==a&&(a="channelsLast"),lI(a),4!==e.rank&&5!==e.rank)throw new Nk(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Nk(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=yS(e,a);if("causal"===s)throw new Ck("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=kg(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=OI(o,n)),"channelsFirst"===a&&(o=Ky(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=pN(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=fS(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:sN(this.kernelInitializer),kernelRegularizer:sS(this.kernelRegularizer),kernelConstraint:Qk(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Nk(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class wS extends vS{constructor(e){super(2,e),wS.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Wk(e.kernelSize,"number",1,2))throw new Nk(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}wS.className="Conv2D",u.registerClass(wS);class kS extends vS{constructor(e){super(3,e),kS.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Nk(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}kS.className="Conv3D",u.registerClass(kS);class IS extends wS{constructor(e){if(super(e),this.inputSpec=[new bN({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Nk(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=pN(e)).length)throw new Nk("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Nk("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new bN({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Dm(()=>{let t=dN(e);if(4!==t.shape.length)throw new Nk(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const a=n[s],i=this.kernelSize[1],o=this.strides[1],l=[n[0],mS(n[r],this.strides[0],this.kernelSize[0],this.padding),mS(a,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ky(t,[0,2,3,1]));let u=wg(t,this.kernel.read(),l,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(u=Ky(u,[0,3,1,2])),null!=this.bias&&(u=OI(u,this.bias.read(),this.dataFormat)),null!=this.activation&&(u=this.activation.apply(u)),u})}computeOutputShape(e){const t=(e=pN(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=mS(t[r],o,a,this.padding),t[s]=mS(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}IS.className="Conv2DTranspose",u.registerClass(IS);class NS extends vS{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Nk("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Nk("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Nk(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=aN(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=iS(t.depthwiseRegularizer),this.depthwiseConstraint=tI(t.depthwiseConstraint),this.pointwiseInitializer=aN(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=iS(t.pointwiseRegularizer),this.pointwiseConstraint=tI(t.pointwiseConstraint)}build(e){if((e=pN(e)).length<this.rank+2)throw new Nk(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Nk(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):null,this.inputSpec=[new bN({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Dm(()=>{let t;if(e=dN(e),1===this.rank)throw new Ck("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ky(e,[0,2,3,1])),t=_y(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=OI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ky(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=sN(this.depthwiseInitializer),e.pointwiseInitializer=sN(this.pointwiseInitializer),e.depthwiseRegularizer=sS(this.depthwiseRegularizer),e.pointwiseRegularizer=sS(this.pointwiseRegularizer),e.depthwiseConstraint=Qk(this.depthwiseConstraint),e.pointwiseConstraint=Qk(this.pointwiseConstraint),e}}NS.className="SeparableConv";class CS extends NS{constructor(e){super(2,e)}}CS.className="SeparableConv2D",u.registerClass(CS);class SS extends vS{constructor(e){super(1,e),SS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Wk(e.kernelSize,"number",1,1))throw new Nk(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}SS.className="Conv1D",u.registerClass(SS);class _S extends IN{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Dm(()=>{if(e=dN(e),"channelsLast"===this.dataFormat){const t=SI(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return SI(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=SI(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return SI(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}_S.className="Cropping2D",u.registerClass(_S);class TS extends IN{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lI(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,Vk(rI,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return Dm(()=>{let t=dN(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ky(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return Ky(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}TS.className="UpSampling2D",u.registerClass(TS);class $S extends xS{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=aN(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=tI(e.depthwiseConstraint),this.depthwiseRegularizer=iS(e.depthwiseRegularizer)}build(e){if((e=pN(e)).length<4)throw new Nk(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Nk(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Dm(()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Dm(()=>{null==s&&(s="channelsLast"),lI(s);let i=gS(e,s);if(4!==e.rank)throw new Nk(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Nk(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ig(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Ky(i,[0,3,1,2])),i})}(e=dN(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=OI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=pN(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=fS("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),s=fS(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,s]:[e[0],r,s,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=sN(this.depthwiseInitializer),e.depthwiseRegularizer=sS(this.depthwiseRegularizer),e.depthwiseConstraint=Qk(this.depthwiseRegularizer),e}}function ES(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Nk("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function AS(e,t,n,r=!1,s,a,i=!1,o=!1){return Dm(()=>{const l=t.shape.length;if(l<3)throw new Nk(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(wI(2,l));if(t=Ky(t,u),null!=a)throw new Ck("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Ag(s,-1)),s=Ky(s,u)),r&&(t=Cy(t,0),null!=s&&(s=Cy(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Hy(t);let m,g;null!=s&&(m=Hy(s));for(let t=0;t<p;++t){const n=f[t],r=Dm(()=>e(n,d));if(null==s)h=r[0],d=r[1];else{const e=Dm(()=>{const e=m[t],n=my(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map((t,s)=>r[1][s].mul(e).add(t.mul(n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Py(c,1)),[h,g,d]})}$S.className="DepthwiseConv2D",u.registerClass($S);class RS extends IN{constructor(e){let t;if(super(e),null==e.cell)throw new Nk("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new BS({cells:e.cell}):e.cell,null==t.stateSize)throw new Nk("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new bN({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?wI(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){cN(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Dm(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ck("Constants support is not implemented in RNN yet.");cN(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new bN({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new Nk(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(e=>new bN({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Dm(()=>{if(!this.stateful)throw new kk("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Nk("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>py([n,e])):[py([n,this.cell.stateSize])];else if(null==e)Om(this.states_),null!=this.keptStates&&(Om(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>py([n,e])):this.states_[0]=py([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Nk(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Om(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!r.arraysEqual(s.shape,i))throw new Nk(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map(e=>Mm(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=ES(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new bN({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof xN){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Dm(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=dN(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Nk(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=AS((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(e){return Dm(()=>{let t=py(e.shape);return t=Gg(t,[1,2]),t=II(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?$I(t,[1,e]):t):this.cell.stateSize>1?[$I(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===RS.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=LN(t.cell,n);return new e(Object.assign(t,{cell:r}))}}RS.className="RNN",u.registerClass(RS);class FS extends IN{}class DS extends FS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Uk(this.units,"units"),this.activation=eS(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=aN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=aN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=aN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=iS(e.kernelRegularizer),this.recurrentRegularizer=iS(e.recurrentRegularizer),this.biasRegularizer=iS(e.biasRegularizer),this.kernelConstraint=tI(e.kernelConstraint),this.recurrentConstraint=tI(e.recurrentConstraint),this.biasConstraint=tI(e.biasConstraint),this.dropout=xI([1,vI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=xI([1,vI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Dm(()=>{if(2!==(e=e).length)throw new Nk(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=VS({ones:()=>my(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=VS({ones:()=>my(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=AI(null!=a?Ug(e,a):e,this.kernel.read()),null!=this.bias&&(s=OI(s,this.bias.read())),null!=i&&(n=Ug(n,i));let o=Wm(s,AI(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:JC(this.activation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),recurrentInitializer:sN(this.recurrentInitializer),biasInitializer:sN(this.biasInitializer),kernelRegularizer:sS(this.kernelRegularizer),recurrentRegularizer:sS(this.recurrentRegularizer),biasRegularizer:sS(this.biasRegularizer),activityRegularizer:sS(this.activityRegularizer),kernelConstraint:Qk(this.kernelConstraint),recurrentConstraint:Qk(this.recurrentConstraint),biasConstraint:Qk(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}DS.className="SimpleRNNCell",u.registerClass(DS);class OS extends RS{constructor(e){e.cell=new DS(e),super(e)}call(e,t){return Dm(()=>(null!=this.cell.dropoutMask&&(Om(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Om(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}}OS.className="SimpleRNN",u.registerClass(OS);class MS extends FS{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Nk("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Uk(this.units,"units"),this.activation=eS(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=eS(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=aN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=aN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=aN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=iS(e.kernelRegularizer),this.recurrentRegularizer=iS(e.recurrentRegularizer),this.biasRegularizer=iS(e.biasRegularizer),this.kernelConstraint=tI(e.kernelConstraint),this.recurrentConstraint=tI(e.recurrentConstraint),this.biasConstraint=tI(e.biasConstraint),this.dropout=xI([1,vI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=xI([1,vI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Dm(()=>{if(2!==(e=e).length)throw new Nk(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=VS({ones:()=>my(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=VS({ones:()=>my(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.recurrentDropoutMask;let a,i,o;0<this.dropout&&this.dropout<1&&(e=Ug(e,this.dropoutMask[0]));let l=AI(e,this.kernel.read());this.useBias&&(l=OI(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ug(r,s[0]));const u=this.recurrentKernel.read(),[c,h]=My(u,[2*this.units,this.units],u.rank-1),d=AI(r,c),[p,f,m]=My(l,3,l.rank-1),[g,y]=My(d,2,d.rank-1);a=this.recurrentActivation.apply(Wm(p,g)),i=this.recurrentActivation.apply(Wm(f,y));const b=AI(Ug(i,r),h);o=this.activation.apply(Wm(m,b));const x=Wm(Ug(a,r),Ug(Wm(1,cy(a)),o));return[x,x]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:JC(this.activation),recurrentActivation:JC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),recurrentInitializer:sN(this.recurrentInitializer),biasInitializer:sN(this.biasInitializer),kernelRegularizer:sS(this.kernelRegularizer),recurrentRegularizer:sS(this.recurrentRegularizer),biasRegularizer:sS(this.biasRegularizer),activityRegularizer:sS(this.activityRegularizer),kernelConstraint:Qk(this.kernelConstraint),recurrentConstraint:Qk(this.recurrentConstraint),biasConstraint:Qk(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}MS.className="GRUCell",u.registerClass(MS);class LS extends RS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new MS(e),super(e)}call(e,t){return Dm(()=>(null!=this.cell.dropoutMask&&(Om(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Om(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}LS.className="GRU",u.registerClass(LS);class zS extends FS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Uk(this.units,"units"),this.activation=eS(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=eS(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=aN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=aN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=aN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=iS(e.kernelRegularizer),this.recurrentRegularizer=iS(e.recurrentRegularizer),this.biasRegularizer=iS(e.biasRegularizer),this.kernelConstraint=tI(e.kernelConstraint),this.recurrentConstraint=tI(e.recurrentConstraint),this.biasConstraint=tI(e.biasConstraint),this.dropout=xI([1,vI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=xI([1,vI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;if(e=pN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends BI{apply(t,n){const s=e.apply([r]),a=(new WI).apply([r]),i=e.apply([2*r]);return TI(TI(s,a),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Dm(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Nk(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=VS({ones:()=>my(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=VS({ones:()=>my(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.recurrentDropoutMask;let i,o,l,u;0<this.dropout&&this.dropout<1&&(e=Ug(e,this.dropoutMask[0]));let c=AI(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ug(r,a[0])),c=Wm(c,AI(r,this.recurrentKernel.read())),this.useBias&&(c=OI(c,this.bias.read()));const[h,d,p,f]=My(c,4,c.rank-1);i=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(d),l=Wm(Ug(o,s),Ug(i,this.activation.apply(p))),u=this.recurrentActivation.apply(f);const m=Ug(u,this.activation.apply(l));return[m,m,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:JC(this.activation),recurrentActivation:JC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),recurrentInitializer:sN(this.recurrentInitializer),biasInitializer:sN(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:sS(this.kernelRegularizer),recurrentRegularizer:sS(this.recurrentRegularizer),biasRegularizer:sS(this.biasRegularizer),activityRegularizer:sS(this.activityRegularizer),kernelConstraint:Qk(this.kernelConstraint),recurrentConstraint:Qk(this.recurrentConstraint),biasConstraint:Qk(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}zS.className="LSTMCell",u.registerClass(zS);class PS extends RS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new zS(e),super(e)}call(e,t){return Dm(()=>(null!=this.cell.dropoutMask&&(Om(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Om(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}PS.className="LSTM",u.registerClass(PS);class BS extends FS{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Dm(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;cN(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{dI(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const s of t.cells)r.push(LN(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return gN(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}yN(t)}}function VS(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>MI(t(),n),i=()=>LI(a,t,r);return!s||s<=1?Mm(i().clone()):Array(s).fill(void 0).map(i).map(e=>Mm(e.clone()))}var WS,US;BS.className="StackedRNNCells",u.registerClass(BS);class HS extends RS{constructor(e){if(e.unroll)throw new Ck("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ck("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new bN({ndim:5})]}call(e,t){return Dm(()=>{if(null!=this.cell.dropoutMask&&(Om(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Om(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Nk("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Dm(()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=py([n[0],...n.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){Dm(()=>{if(!this.stateful)throw new kk("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new Nk("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>py(a)):[py(a)];else if(null==e)Om(this.states_),null!=this.keptStates&&(Om(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>py(a)):this.states_[0]=py(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Nk(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Om(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.arraysEqual(n.shape,s))throw new Nk(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>Mm(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?4:3],u=fS(e[o?3:2],r[0],s,a[0],i[0]),c=fS(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,u,c]:[u,c,n]]}}HS.className="ConvRNN2D";class GS extends zS{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Uk(this.filters,"filters"),this.kernelSize=pS(n,2,"kernelSize"),this.kernelSize.forEach(e=>Uk(e,"kernelSize")),this.strides=pS(r||1,2,"strides"),this.strides.forEach(e=>Uk(e,"strides")),this.padding=s||"valid",uI(this.padding),this.dataFormat=a||"channelsLast",lI(this.dataFormat),this.dilationRate=pS(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Uk(e,"dilationRate"))}build(e){var t;e=pN(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Nk(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends BI{apply(e,t){return _I([n.apply([r]),fy([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Dm(()=>{if(3!==e.length)throw new Nk(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=VS({ones:()=>my(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ug(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=VS({ones:()=>my(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,v]=My(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?My(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,N,this.padding);const[C,S,_,T]=My(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,S),m=this.recurrentConv(m,_),g=this.recurrentConv(g,T);const $=this.recurrentActivation.apply(Wm(l,p)),E=this.recurrentActivation.apply(Wm(u,f)),A=Wm(Ug(E,a),Ug($,this.activation.apply(Wm(c,m)))),R=Ug(this.recurrentActivation.apply(Wm(h,g)),this.activation.apply(A));return[R,R,A]})}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(super.getConfig(),["units"]);return Object.assign({},e,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const s=bg(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?OI(s,n,this.dataFormat):s}recurrentConv(e,t){return bg(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}GS.className="ConvLSTM2DCell",u.registerClass(GS);class jS extends HS{constructor(e){const t=new GS(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}jS.className="ConvLSTM2D",u.registerClass(jS);class qS extends IN{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return LI(()=>MI(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}qS.className="Dropout",u.registerClass(qS);class KS extends qS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}KS.className="SpatialDropout1D",u.registerClass(KS);class XS extends IN{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Uk(this.units,"units"),this.activation=eS(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=aN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=aN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=tI(e.kernelConstraint),this.biasConstraint=tI(e.biasConstraint),this.kernelRegularizer=iS(e.kernelRegularizer),this.biasRegularizer=iS(e.biasRegularizer),this.activityRegularizer=iS(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=pN(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=pN(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e),r=Gk(this.activation.getClassName());let s;return null!=r?s=AI(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=AI(n,this.kernel.read()),null!=this.bias&&(s=OI(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:JC(this.activation),useBias:this.useBias,kernelInitializer:sN(this.kernelInitializer),biasInitializer:sN(this.biasInitializer),kernelRegularizer:sS(this.kernelRegularizer),biasRegularizer:sS(this.biasRegularizer),activityRegularizer:sS(this.activityRegularizer),kernelConstraint:Qk(this.kernelConstraint),biasConstraint:Qk(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}XS.className="Dense",u.registerClass(XS);class ZS extends IN{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=pN(e);for(const t of e.slice(1))if(null==t)throw new Nk(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],yI(e,1)]}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);let n=dN(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Nk(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],yI(e.shape,1)];return e.reshape(t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ZS.className="Flatten",u.registerClass(ZS);class YS extends IN{constructor(e){super(e),this.supportsMasking=!0,this.activation=eS(e.activation)}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e);return this.activation.apply(n)})}getConfig(){const e={activation:JC(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}YS.className="Activation",u.registerClass(YS);class JS extends IN{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Dm(()=>{return e=dN(e),t=e,n=this.n,Dm(()=>{if(2!==t.shape.length)throw new Nk(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return $I(II(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}JS.className="RepeatVector",u.registerClass(JS);class QS extends IN{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new Nk("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=yI(e);if(null!==a){if(0===s||i%s!=0)throw new Nk(n);r[a]=i/s}else if(i!==s)throw new Nk(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}QS.className="Reshape",u.registerClass(QS);class e_ extends IN{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=wI(1,e.dims.length+1);if(!r.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new bN({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=pN(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Ky(dN(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}e_.className="Permute",u.registerClass(e_);class t_ extends IN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=dN(e);return Hm(hy(n,this.maskValue),-1)}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e),r=Hm(hy(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}t_.className="Masking",u.registerClass(t_);class n_ extends IN{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(Ak(e.inputLength))}this.inputDim=e.inputDim,Uk(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Uk(this.outputDim,"outputDim"),this.embeddingsInitializer=aN(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=iS(e.embeddingsRegularizer),this.activityRegularizer=iS(e.activityRegularizer),this.embeddingsConstraint=tI(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Dm(()=>this.maskZero?(e=dN(e),hy(e,qy(e))):null)}computeOutputShape(e){if(e=pN(e),null==this.inputLength)return[...e,this.outputDim];const t=Ak(this.inputLength);if(t.length!==e.length-1)throw new Nk(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Nk(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);let n=dN(e);return"int32"!==n.dtype&&(n=kI(n,"int32")),RI(this.embeddings.read(),n.as1D()).reshape(pN(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:sN(this.embeddingsInitializer),embeddingsRegularizer:sS(this.embeddingsRegularizer),activityRegularizer:sS(this.activityRegularizer),embeddingsConstraint:Qk(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}n_.className="Embedding",u.registerClass(n_);class r_ extends IN{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ck}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Nk("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[pN(e)]),(e=e).length<2)throw new Nk(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=Pk(t),t.length>1)throw new Nk(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==Pk(r).length}call(e,t){return Dm(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=vI(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=II(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=a.reshape([r].concat(yI(e.slice(1))));i=Ky(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const r=wI(1,e).concat([0]);t.push(Ky(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Ky(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(wI(0,s-1));r=Ky(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=Pk(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Dm(()=>{if(null==t)return null;if(!Array.isArray(t))throw new Nk("`mask` should be an Array");if(!Array.isArray(e))throw new Nk("`inputs` should be an Array");if(t.length!==e.length)throw new Nk(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:Ag(e,0)))[0];for(let e=1;e<t.length-1;++e)n=qg(n,t[e]);return n})}}class s_ extends r_{constructor(e){super(e)}mergeFunction(e){return Dm(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wm(t,e[n]);return t})}}s_.className="Add",u.registerClass(s_);class a_ extends r_{constructor(e){super(e)}mergeFunction(e){return Dm(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ug(t,e[n]);return t})}}a_.className="Multiply",u.registerClass(a_);class i_ extends r_{constructor(e){super(e)}mergeFunction(e){return Dm(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Wm(t,e[n]);return Ug(1/e.length,t)})}}i_.className="Average",u.registerClass(i_);class o_ extends r_{constructor(e){super(e)}mergeFunction(e){return Dm(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zg(t,e[n]);return t})}}o_.className="Maximum",u.registerClass(o_);class l_ extends r_{constructor(e){super(e)}mergeFunction(e){return Dm(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qg(t,e[n]);return t})}}l_.className="Minimum",u.registerClass(l_);class u_ extends r_{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Nk("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(r.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new Nk("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Dm(()=>_I(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Nk("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Nk("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Nk("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Nk(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Dm(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let a=0;a<e.length;++a)r.push(null==t[a]?my(e[a]).asType("bool"):t[a].rank<e[a].rank?Ag(t[a],-1):t[a]);const s=pg(r,this.axis);return Um(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function c_(e,t){for(;e<0;)e+=t;return e}u_.className="Concatenate",u.registerClass(u_);class h_ extends r_{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ck("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Nk(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Nk(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>c_(t,e[n].shape.length)):[c_(this.axes,n.shape.length),c_(this.axes,s.shape.length)],this.normalize&&(n=zN(n,t[0]),s=zN(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ck("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),r.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Ck("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return Dm(()=>{let n,r;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(r=2===e.shape.length&&2===t.shape.length?i[0]===i[1]?e.mul(t).sum(i[0]):e.transpose([1,0]).mul(t).sum(i[1]):e.matMul(t,i[0]!==e.shape.length-1,i[1]===t.shape.length-1),n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);r=r.squeeze(t)}return 1===r.shape.length&&(r=r.expandDims(1)),r})}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[c_(this.axes,e.length),c_(this.axes,t.length)],n}computeOutputShape(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ck("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}h_.className="Dot",u.registerClass(h_);class d_ extends IN{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e);return LI(()=>EI(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}}d_.className="GaussianNoise",u.registerClass(d_);class p_ extends IN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Dm(()=>{this.invokeCallHook(e,t);const n=dN(e);return this.rate>0&&this.rate<1?LI(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(EI(n.shape,1,e))},()=>n,t.training||!1):n})}}p_.className="GaussianDropout",u.registerClass(p_);class f_ extends IN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||dN(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Dm(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return LI(()=>{const t=dN(e),r=-1.7580993408473766;let s=zg(Iy(n),this.rate);s=kI(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)},()=>dN(e),t.training||!1)}return e})}}function m_(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=ug(e,t,n,r,s,a);else if(3===e.rank)i=cg(e,t,n,r,s,a);else{if(4!==e.rank)throw new Ck(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=hg(e,t,n,r,s,a)}return i}f_.className="AlphaDropout",u.registerClass(f_);class g_ extends IN{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=aN(e.betaInitializer||"zeros"),this.gammaInitializer=aN(e.gammaInitializer||"ones"),this.movingMeanInitializer=aN(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=aN(e.movingVarianceInitializer||"ones"),this.betaConstraint=tI(e.betaConstraint),this.gammaConstraint=tI(e.gammaConstraint),this.betaRegularizer=iS(e.betaRegularizer),this.gammaRegularizer=iS(e.gammaRegularizer)}build(e){e=pN(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Nk(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new bN({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Dm(()=>{const n=null!=t.training&&t.training,s=dN(e),a=s.shape,i=a.length,o=wI(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=_k(1,i);u[l]=a[l];const c=o.slice();c.sort();const h=!r.arraysEqual(c,wI(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,r=this.scale?this.gamma.read().reshape(u):null;return m_(s,e,t,n,r,this.epsilon)}return m_(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,f]=function(e,t,n,s,a=.001){return r.arraysEqual(s.slice().sort(),wI(0,e.rank-1))?function(e,t,n,r,s=.001){return Dm(()=>{const a=uy(e,r),i=a.mean,o=a.variance;return[m_(e,i,o,n,t,s),i,o]})}(e,t,n,s,a):function(e,t,n,r,s=.001){return Dm(()=>{const a=uy(e,r),i=a.mean,o=a.variance,l=[];for(const t of wI(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[m_(e,u,c,d,h,s),i,o]})}(e,t,n,s,a)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{Dm(()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sN(this.betaInitializer),gammaInitializer:sN(this.gammaInitializer),movingMeanInitializer:sN(this.movingMeanInitializer),movingVarianceInitializer:sN(this.movingVarianceInitializer),betaRegularizer:sS(this.betaRegularizer),gammaRegularizer:sS(this.gammaRegularizer),betaConstraint:Qk(this.betaConstraint),gammaConstraint:Qk(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}g_.className="BatchNormalization",u.registerClass(g_);class y_ extends IN{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=aN(e.betaInitializer||"zeros"),this.gammaInitializer=aN(e.gammaInitializer||"ones"),this.betaRegularizer=iS(e.betaRegularizer),this.gammaRegularizer=iS(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=pN(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Pk(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const n=dN(e),r=n.shape,s=r.length;return Dm(()=>{let{mean:e,variance:t}=uy(n,this.axis,!0);const a=_k(1,s);for(const n of this.axis)a[n]=r[n];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),m_(n,e,t,l,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sN(this.betaInitializer),gammaInitializer:sN(this.gammaInitializer),betaRegularizer:sS(this.betaRegularizer),gammaRegularizer:sS(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}y_.className="LayerNormalization",u.registerClass(y_);class b_ extends IN{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Nk(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Nk(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Nk(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new bN({ndim:4})]}computeOutputShape(e){let t,n;return e=pN(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Dm(()=>{return t=dN(e),n=this.padding,r=this.dataFormat,Dm(()=>{if(4!==t.rank)throw new Nk(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Nk("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Nk(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],gy(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function x_(e,t,n,r,s,a){return Dm(()=>{let i;lI(s),cI(a),uI(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=gS(e,s);const o="same"===r?"same":"valid";return i="max"===a?Kg(e,t,n,o):ig(e,t,n,o),"channelsFirst"===s&&(i=Ky(i,[0,3,1,2])),i})}function v_(e,t,n,r,s,a){return Dm(()=>{let i;lI(s),cI(a),uI(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=yS(e,s);const o="same"===r?"same":"valid";return i="max"===a?Xg(e,t,n,o):og(e,t,n,o),"channelsFirst"===s&&(i=Ky(i,[0,4,1,2,3])),i})}b_.className="ZeroPadding2D",u.registerClass(b_);class w_ extends IN{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Nk(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Uk(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Nk(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Uk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,uI(this.padding),this.inputSpec=[new bN({ndim:3})]}computeOutputShape(e){const t=fS((e=pN(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Dm(()=>{this.invokeCallHook(e,t),e=II(dN(e),2);const n=this.poolingFunction(dN(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return zy(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class k_ extends w_{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lI(s),uI(r),x_(e,t,n,r,s,"max")}}k_.className="MaxPooling1D",u.registerClass(k_);class I_ extends w_{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lI(s),uI(r),x_(e,t,n,r,s,"avg")}}I_.className="AveragePooling1D",u.registerClass(I_);class N_ extends IN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Nk(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Uk(this.poolSize,"poolSize"),Uk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lI(this.dataFormat),uI(this.padding),this.inputSpec=[new bN({ndim:4})]}computeOutputShape(e){e=pN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=fS(t,this.poolSize[0],this.padding,this.strides[0]),n=fS(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Dm(()=>(this.invokeCallHook(e,t),this.poolingFunction(dN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class C_ extends N_{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lI(s),uI(r),x_(e,t,n,r,s,"max")}}C_.className="MaxPooling2D",u.registerClass(C_);class S_ extends N_{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lI(s),uI(r),x_(e,t,n,r,s,"avg")}}S_.className="AveragePooling2D",u.registerClass(S_);class __ extends IN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Nk(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Uk(this.poolSize,"poolSize"),Uk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lI(this.dataFormat),uI(this.padding),this.inputSpec=[new bN({ndim:5})]}computeOutputShape(e){e=pN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=fS(t,this.poolSize[0],this.padding,this.strides[0]),n=fS(n,this.poolSize[1],this.padding,this.strides[1]),r=fS(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Dm(()=>(this.invokeCallHook(e,t),this.poolingFunction(dN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class T_ extends __{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lI(s),uI(r),v_(e,t,n,r,s,"max")}}T_.className="MaxPooling3D",u.registerClass(T_);class $_ extends __{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lI(s),uI(r),v_(e,t,n,r,s,"avg")}}$_.className="AveragePooling3D",u.registerClass($_);class E_ extends IN{constructor(e){super(e),this.inputSpec=[new bN({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ck}}class A_ extends E_{constructor(e){super(e||{})}call(e,t){return Dm(()=>{const t=dN(e);return Yg(t,1)})}}A_.className="GlobalAveragePooling1D",u.registerClass(A_);class R_ extends E_{constructor(e){super(e||{})}call(e,t){return Dm(()=>{const t=dN(e);return Wg(t,1)})}}R_.className="GlobalMaxPooling1D",u.registerClass(R_);class F_ extends IN{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lI(this.dataFormat),this.inputSpec=[new bN({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ck}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class D_ extends F_{call(e,t){return Dm(()=>{const t=dN(e);return Yg(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}D_.className="GlobalAveragePooling2D",u.registerClass(D_);class O_ extends F_{call(e,t){return Dm(()=>{const t=dN(e);return Wg(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}O_.className="GlobalMaxPooling2D",u.registerClass(O_);class M_ extends IN{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=LN(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class L_ extends M_{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=pN(e)).length<3)throw new Nk(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=pN(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return Dm(()=>AS((e,n)=>[dN(this.layer.call(e,t)),[]],e=dN(e),[],!1,null,null,!1,!0)[1])}}L_.className="TimeDistributed",u.registerClass(L_);class z_ extends M_{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=LN(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=LN(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,Vk(iI,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new Ck("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Ek(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=ES(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Nk("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map(e=>new bN({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Ck("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof xN;for(const l of a)if(l instanceof xN!==o)throw new Nk("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Dm(()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Cy(s,1)),"concat"===this.mergeMode?i=_I([r,s]):"sum"===this.mergeMode?i=Wm(r,s):"ave"===this.mergeMode?i=Ug(.5,Wm(r,s)):"mul"===this.mergeMode?i=Ug(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){dI(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),dI(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=LN(t.layer);if(delete t.layer,null!=t.numConstants)throw new Ck("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}z_.className="Bidirectional",u.registerClass(z_),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(WS||(WS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(US||(US={}));const P_=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B_=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V_=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],W_=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],U_=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],H_=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G_=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],j_=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q_=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],K_=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],X_=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Z_=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Y_=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],J_=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q_=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],eT=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],tT=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];Kp({addN_:function(e){lu(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),lu(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>jp(e,`tensors${t}`,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!fu(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),zp.runKernel(sc,t)}}),Kp({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a=jp(e,"x","maxPoolWithArgmax"),i=zp.runKernel(Fh,{x:a},{filterSize:t,strides:n,pad:r,includeBatchInIndex:s});return{result:i[0],indexes:i[1]}}}),Kp({multinomial_:function(e,t,n,r=!1){const s=jp(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?ag(s,[1,-1]):s,l=zp.runKernel(Ph,{logits:o},{numSamples:t,seed:n,normalized:r});return 1===i?ag(l,[l.size]):l}}),Kp({sparseToDense_:function(e,t,n,r=0){const s=jp(e,"sparseIndices","sparseToDense","int32"),a=jp(t,"sparseValues","sparseToDense"),i=jp(r,"defaultValue","sparseToDense",a.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);if(0!==t.rank&&(1!==t.rank||t.size!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i),zp.runKernel($d,{sparseIndices:s,sparseValues:a,defaultValue:i},{outputShape:n})}}),Kp({bincount_:function(e,t,n){const r=jp(e,"x","bincount"),s=jp(t,"weights","bincount");return lu("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),lu(n>=0,()=>`size must be non-negative, but got ${n}.`),lu(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`),zp.runKernel(vc,{x:r,weights:s},{size:n})}}),Kp({denseBincount_:function(e,t,n,r=!1){const s=jp(e,"x","denseBincount"),a=jp(t,"weights","denseBincount");return lu("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),lu(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),lu(n>=0,()=>`size must be non-negative, but got ${n}.`),lu(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`),zp.runKernel(Lc,{x:s,weights:a},{size:n,binaryOutput:r})}}),Kp({scatterND_:function(e,t,n){const r=jp(e,"indices","scatterND","int32"),s=jp(t,"updates","scatterND");return px(s,r,n),zp.runKernel(dd,{indices:r,updates:s},{shape:n})}}),Kp({gatherND_:function(e,t){const n=jp(t,"indices","gatherND","int32"),r=jp(e,"x","gatherND");return zp.runKernel(oh,{params:r,indices:n})}});var nT,rT=n("YSVl");function sT(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(lT(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=sT(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function aT(e,t=oT){return iT(e,t)}function iT(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(lT(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=iT(e.map(e=>e[a]),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function oT(e){return null===e?null:lT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function lT(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof bp))}function uT(e){return sT(e,cT)}function cT(e){return e instanceof bp?{value:e.clone(),recurse:!1}:lT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class hT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class dT extends hT{constructor(){super(dT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}dT.INITIAL_CAPACITY=32;class pT{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new kT(this,e)}filter(e){return new vT(this,e)}map(e){return new wT(this,e)}mapAsync(e){return new IT(this,e)}serialMapAsync(e){return new IT(this,e).serial()}flatmap(e){return new CT(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new xT(this,e,t)}columnMajorBatch(e,t=!0,n=oT){return this.rowMajorBatch(e,t).map(e=>aT(e,n))}concatenate(e,t){return new ST(new fT([this,e]),t)}take(e){return e<0||null==e?this:new bT(this,e)}skip(e){return e<0||null==e?this:new yT(this,e)}prefetch(e){return new _T(this,e)}shuffle(e,t){return new TT(this,e,t)}serial(){return new gT(this)}}class fT extends pT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:uT(e),done:!1}}}class mT extends pT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class gT extends pT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class yT extends pT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Om(e.value)}return this.upstream.next()}}class bT extends pT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class xT extends pT{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class vT extends pT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Om(e.value)}}}class wT extends pT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.getTensorsInContainer(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class kT extends pT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class IT extends pT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.getTensorsInContainer(e.value),n=await this.transform(e.value),r=s.getTensorsInContainer(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class NT extends pT{constructor(){super(),this.outputQueue=new dT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class CT extends NT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=s.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return!0}}class ST extends pT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(nT||(nT={}));class _T extends pT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new hT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class TT extends _T{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=rT.alea(n||r.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class $T{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.assert(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ET(async()=>(await n.iterator()).columnMajorBatch(e,t,AT),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ET(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ET(async()=>(await t.iterator()).filter(t=>Dm(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ET(async()=>(await t.iterator()).map(t=>Dm(()=>e(t))),this.size)}mapAsync(e){const t=this;return ET(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ET(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ET(async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new mT(r)).take(e),new ST(n,undefined);var n,r},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ET(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=rT.alea(t||r.now().toString());return ET(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ET(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ET(e,t=null){return new class extends $T{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function AT(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof bp||r.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof bp?Py(e):Yp(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function RT(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}$T.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const FT=p.whereImpl;class DT extends Ql{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Jl(this,Rm())}nextDataId(){return DT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Xu().get("IS_NODE")&&d.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const a=n.map(e=>r.encodeString(e));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return d.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Hf(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Rm().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.now();return e(),{kernelMs:r.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){RT([e],"where");const t=this.readSync(e.dataId);return FT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function OT(e,t,n){return({inputs:s,attrs:a,backend:i})=>{const{x:o}=s;if(RT(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=r.sizeFromShape(o.shape),h=n||o.dtype,d=r.getArrayFromDType(h,c);for(let e=0;e<c;++e)d[e]=t(u[e],a);return l.makeTensorInfo(o.shape,h,d)}}function MT(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(RT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}DT.nextDataId=0,Lm("cpu",()=>new DT,1);const LT=OT(qc,e=>e>=0?e:Math.exp(e)-1),zT={kernelName:qc,backendName:"cpu",kernelFunc:LT};function PT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const BT={kernelName:ch,backendName:"cpu",kernelFunc:PT};function VT(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s;RT([a],"leakyRelu");const o=r.sizeFromShape(a.shape),l=n.data.get(a.dataId).values,u=r.getTypedArrayFromDType("float32",o);for(let r=0;r<l.length;r++)u[r]=l[r]<0?i*l[r]:l[r];return n.makeTensorInfo(a.shape,"float32",u)}const WT={kernelName:gh,backendName:"cpu",kernelFunc:VT};function UT(e){return(t,n,s,a,i)=>{const o=d.assertAndGetBroadcastShape(t,n),l=o.length,u=r.computeStrides(o),c=r.sizeFromShape(o),h=r.getTypedArrayFromDType(i,c),p=t.length,f=n.length,m=r.computeStrides(t),g=r.computeStrides(n),y=d.getBroadcastDims(t,o),b=d.getBroadcastDims(n,o);if(y.length+b.length===0)for(let r=0;r<h.length;++r)h[r]=e(s[r%s.length],a[r%a.length]);else for(let d=0;d<h.length;++d){const t=r.indexToLoc(d,l,u),n=t.slice(-p);y.forEach(e=>n[e]=0);const i=r.locToIndex(n,p,m),o=t.slice(-f);b.forEach(e=>o[e]=0);const c=r.locToIndex(o,f,g);h[d]=e(s[i],a[c])}return[h,o]}}const HT=UT((e,t)=>e<0?t*e:e);function GT(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;RT([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=HT(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const jT={kernelName:Yh,backendName:"cpu",kernelFunc:GT},qT=OT(nd,e=>Math.max(0,e)),KT={kernelName:nd,backendName:"cpu",kernelFunc:qT},XT=OT(ld,e=>Math.min(Math.max(0,e),6)),ZT={kernelName:ld,backendName:"cpu",kernelFunc:XT};function YT(e,t,n,r,s){if("linear"===n)return PT({inputs:{x:t},backend:e});if("relu"===n)return qT({inputs:{x:t},backend:e});if("elu"===n)return LT({inputs:{x:t},backend:e});if("relu6"===n)return XT({inputs:{x:t},backend:e});if("prelu"===n)return GT({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return VT({inputs:{x:t},backend:e,attrs:{alpha:s}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function JT(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const QT={kernelName:Nc,backendName:"cpu",kernelFunc:JT};function e$(e,t,n="float32"){if("complex64"===n)return JT({inputs:{real:e$(e,t,"float32"),imag:e$(e,t,"float32")},backend:e});const s=r.makeZerosTypedArray(r.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function t$(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const n$={kernelName:ed,backendName:"cpu",kernelFunc:t$};function r$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return PT({inputs:{x:a},backend:n});const e=e$(n,a.shape,a.dtype),t=r$({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=JT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=t$({inputs:{input:a},backend:n}),t=r$({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!r.hasEncodingLoss(a.dtype,i)){const e=PT({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===i){const e=n.data.get(a.dataId).values,t=r.toTypedArray([0],a.dtype),[s,i]=UT((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}const s$={kernelName:wc,backendName:"cpu",kernelFunc:r$};function a$(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;RT([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a:a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=r$({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.imag,s=o.data.get(t.complexTensorInfos.real.dataId).values,l=o.data.get(r.dataId).values,u=r$({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(u.dataId),h=c.complexTensorInfos.imag,d=o.data.get(c.complexTensorInfos.real.dataId).values,p=o.data.get(h.dataId).values,[f,m,g]=n(a.shape,i.shape,s,l,d,p),y=o.makeTensorInfo(g,"float32",f),b=o.makeTensorInfo(g,"float32",m),x=JT({inputs:{real:y,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(u),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(b),x}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function i$(e){return(t,n,s,a,i,o)=>{const l=d.assertAndGetBroadcastShape(t,n),u=r.sizeFromShape(l),c=l.length,h=r.computeStrides(l),p=r.getTypedArrayFromDType("float32",u),f=r.getTypedArrayFromDType("float32",u),m=d.getBroadcastDims(t,l),g=d.getBroadcastDims(n,l),y=d.mergeRealAndImagArrays(s,a),b=d.mergeRealAndImagArrays(i,o),x=t.length,v=r.computeStrides(t),w=n.length,k=r.computeStrides(n);if(m.length+g.length===0)for(let r=0;r<p.length;r++){const t=r%y.length,n=r%b.length,s=e(y[2*t],y[2*t+1],b[2*n],b[2*n+1]);p[r]=s.real,f[r]=s.imag}else for(let d=0;d<p.length;d++){const t=r.indexToLoc(d,c,h),n=t.slice(-x);m.forEach(e=>n[e]=0);const s=r.locToIndex(n,x,v),a=t.slice(-w);g.forEach(e=>a[e]=0);const i=r.locToIndex(a,w,k),o=e(y[2*s],y[2*s+1],b[2*i],b[2*i+1]);p[d]=o.real,f[d]=o.imag}return[p,f,l]}}const o$=UT((e,t)=>e+t),l$=i$((e,t,n,r)=>({real:e+n,imag:t+r})),u$=a$(rc,o$,l$),c$={kernelName:rc,backendName:"cpu",kernelFunc:u$};function h$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=r.sizeFromShape(a.shape),l=r.inferFromImplicitShape(i,o),u=r.sizeFromShape(l);r.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=l,e.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const d$={kernelName:rd,backendName:"cpu",kernelFunc:h$};function p$(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:i}=t,{transposeA:o,transposeB:l}=s;RT([a,i],"matMul");const u=a.shape.length,c=i.shape.length,h=o?a.shape[u-2]:a.shape[u-1],d=l?i.shape[c-1]:i.shape[c-2],p=o?a.shape[u-1]:a.shape[u-2],f=l?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),y=r.sizeFromShape(m),b=r.sizeFromShape(g);r.assert(u>=2&&c>=2&&(y===b||1===y||1===b),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const x=(y>b?a.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);r.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`);const v=l?[b,f,d]:[b,d,f],w=h$({inputs:{x:a},backend:n,attrs:{shape:o?[y,h,p]:[y,p,h]}}),k=h$({inputs:{x:i},backend:n,attrs:{shape:v}}),I=o?w.shape[1]:w.shape[2],N=o?w.shape[2]:w.shape[1],C=l?k.shape[1]:k.shape[2],S=Math.max(y,b),_=n.data.get(w.dataId).values,T=n.data.get(k.dataId).values,$=r.computeStrides(w.shape),E=r.computeStrides(k.shape),[A,R,F]=o?[$[0],1,$[1]]:[$[0],$[1],1],[D,O,M]=l?[1,E[1],E[0]]:[E[1],1,E[0]],L=N*C,z=Hf([S,N,C],w.dtype),P=z.values,B=n.blockSize;for(let r=0;r<S;r++)for(let e=0;e<N;e+=B)for(let t=0;t<C;t+=B)for(let n=0;n<I;n+=B){const s=Math.min(e+B,N),a=Math.min(t+B,C),i=Math.min(n+B,I);for(let o=e;o<s;o++)for(let e=t;e<a;e++){let t=0;for(let s=n;s<i;s++){const n=Math.min(r,y-1)*A,a=Math.min(r,b-1)*M;t+=_[n+o*R+s*F]*T[s*D+e*O+a]}P[r*L+(o*C+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}const f$={kernelName:bc,backendName:"cpu",kernelFunc:p$},m$={kernelName:Ud,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=p$({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=u$({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=YT(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function g$(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const y$={kernelName:ec,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;RT(t,"abs");let s=new Float32Array(r.sizeFromShape(t.shape));return s=g$(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,"float32")}},b$=OT(tc,e=>Math.acos(e)),x$={kernelName:tc,backendName:"cpu",kernelFunc:b$},v$=OT(nc,e=>Math.acosh(e)),w$={kernelName:nc,backendName:"cpu",kernelFunc:v$},k$={kernelName:sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;RT(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),a=Hf(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function I$(e,t,n,s,a){const i=t.length,o=r.sizeFromShape(t),l=r.computeStrides(t),u=r.computeStrides(a),c=r.getTypedArrayFromDType(n,r.sizeFromShape(a));for(let h=0;h<o;++h){const t=r.indexToLoc(h,i,l),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];c[r.locToIndex(n,i,u)]=e[h]}return c}function N$(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;RT(s,"transpose");const i=new Array(s.shape.length);for(let l=0;l<i.length;l++)i[l]=s.shape[a[l]];const o=I$(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(o,i,s.dtype),shape:i,dtype:s.dtype}}const C$={kernelName:Od,backendName:"cpu",kernelFunc:N$},S$={kernelName:ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;RT(a,"all");const l=r.parseAxisParam(i,a.shape);let u=l;const c=d.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=N$({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.getInnerMostAxes(u.length,a.shape.length)),d.assertAxesAreInnerMostDims("all",u,h.shape.length);const[p,f]=d.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(p),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t&&r}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(p,h.dtype,g);if(o){const e=h$({inputs:{x:b},backend:n,attrs:{shape:d.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},_$={kernelName:ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;RT(a,"any");const l=r.parseAxisParam(i,a.shape);let u=l;const c=d.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=N$({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.getInnerMostAxes(u.length,a.shape.length)),d.assertAxesAreInnerMostDims("any",u,h.shape.length);const[p,f]=d.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(p),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t||r}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(p,h.dtype,g);if(o){const e=h$({inputs:{x:b},backend:n,attrs:{shape:d.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},T$={kernelName:oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;RT(a,"argMax");let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=N$({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],d.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[h,p]=d.computeOutAndReduceShapes(u.shape,o),f=r.sizeFromShape(h),m=r.makeZerosTypedArray(f,"int32"),g=r.sizeFromShape(p),y=n.data.get(u.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const s=y[e+r];s>t&&(t=s,n=r)}m[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},$$={kernelName:lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;RT(a,"argMin");let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=N$({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],d.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[h,p]=d.computeOutAndReduceShapes(u.shape,o),f=r.sizeFromShape(h),m=r.makeZerosTypedArray(f,"int32"),g=r.sizeFromShape(p),y=n.data.get(u.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const s=y[e+r];s<t&&(t=s,n=r)}m[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},E$=OT(uc,e=>Math.asin(e)),A$={kernelName:uc,backendName:"cpu",kernelFunc:E$},R$=OT(cc,e=>Math.asinh(e)),F$={kernelName:cc,backendName:"cpu",kernelFunc:R$},D$=OT(hc,e=>Math.atan(e)),O$={kernelName:hc,backendName:"cpu",kernelFunc:D$},M$=UT((e,t)=>Math.atan2(e,t)),L$=a$(pc,M$),z$={kernelName:pc,backendName:"cpu",kernelFunc:L$},P$=OT(dc,e=>Math.atanh(e)),B$={kernelName:dc,backendName:"cpu",kernelFunc:P$};function V$(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Hf(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*y,n=v*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const v=y*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=t+y*b;for(let t=0;t<s.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,v=0;for(let t=w;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,v++)}if(isNaN(y))break}g[I+t*x+m]="avg"===a?b/v:y}}}return m}function W$(e,t,n,r,s=!1,a=!1){const i=Hf(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Hf(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=p;n<x;n+=c){const o=n-h,l=m.get(g,t,n,e);l>v&&(v=l,w=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(w,g,t,o,e)}}return i}function U$(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Hf(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let C=0;C<s.batchSize;++C){const t=C*w,n=C*r[0];for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outDepth;++w){const C=w*i-m;let S=C;for(;S<0;)S+=u;const _=Math.min(s.inDepth,d+C),T=t+w*k;for(let t=0;t<s.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=T+t*I;for(let t=0;t<s.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+t*N;let k=b,I=0,C=0;for(let t=S;t<_;t+=u){const s=n+t*r[1];for(let t=d;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===a?I/C:k}}}}return x}const H$={kernelName:fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;RT(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))h=PT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.computeStrides(a.shape),s=V$(e,0,a.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},G$={kernelName:gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s;RT(a,"avgPool3d");const h=d.computePool3DInfo(a.shape,i,o,1,l,u,c),p=U$(n.data.get(a.dataId).values,0,a.dtype,r.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},j$={kernelName:yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;RT([s,a],"avgPool3DGrad");const c=d.computePool3DInfo(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,y=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,v=c.dilationWidth,w=c.effectiveFilterDepth,k=c.effectiveFilterHeight,I=c.effectiveFilterWidth,N=w-1-c.padInfo.front,C=I-1-c.padInfo.left,S=k-1-c.padInfo.top,_=Hf(a.shape,"float32"),T=1/(m*g*y),$=n.bufferSync(s);for(let d=0;d<c.batchSize;++d)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-N,a=n-S,i=r-C;let o=0;for(let t=0;t<w;t+=b){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=x){const r=(a+t)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<I;t+=v){const s=(i+t)/f;s<0||s>=c.outWidth||Math.floor(s)!==s||(o+=$.get(d,n,r,s,e))}}}_.set(o*T,d,t,n,r,e)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},q$={kernelName:mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;RT([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=d.computePool2DInfo(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,f=c.filterHeight,m=c.filterWidth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=x-1-c.padInfo.left,w=b-1-c.padInfo.top,k=Hf(i.shape,"float32"),I=1/(f*m),N=n.data.get(s.dataId).values,C=Hf(s.shape,"float32",N);for(let d=0;d<c.batchSize;++d)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-w,s=n-v;let a=0;for(let t=0;t<b;t+=g){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=y){const r=(s+t)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=C.get(d,n,r,e))}}k.set(a*I,d,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},K$={kernelName:ah,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:i,offset:o,mean:l,variance:u}=t;r.assert(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||l.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==i||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),RT([a,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(a.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=p.length,v=d.length;let w=0,k=0,I=0,N=0;for(let r=0;r<h.length;++r)g[r]=m[w++]+(h[r]-d[k++])*f[I++]/Math.sqrt(p[N++]+c),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),N>=x&&(N=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function X$(e,t,n,s,a){const i=l.isSliceContinous(s,t,n),o=r.sizeFromShape(n),u=r.computeStrides(s);if(i){const n=l.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const c=Hf(s,a,"string"===a?d.fromUint8ToStringArray(e):e),h=Hf(n,a);for(let r=0;r<h.size;++r){const e=h.indexToLoc(r),n=e.map((e,n)=>e+t[n]);h.set(c.get(...n),...e)}return"string"===a?d.fromStringArrayToUint8(h.values):h.values}function Z$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;RT(s,"slice");const[o,u]=l.parseSliceParams(s,a,i);l.assertParamsValid(s,o,u);const c=X$(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const Y$={kernelName:md,backendName:"cpu",kernelFunc:Z$},J$={kernelName:xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;RT([s],"batchToSpaceND");const o=a.reduce((e,t)=>e*t),l=d.getReshaped(s.shape,a,o),u=d.getPermuted(l.length,a.length),c=d.getReshapedPermuted(s.shape,a,o),h=d.getSliceBeginCoords(i,a.length),p=d.getSliceSize(c,i,a.length),f=h$({inputs:{x:s},backend:n,attrs:{shape:l}}),m=N$({inputs:{x:f},backend:n,attrs:{perm:u}}),g=h$({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Z$({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function Q$(e,t,n,s,a){const i=r.sizeFromShape(s),o=r.makeZerosTypedArray(a,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=i>0?t[r]:1)}return o}function eE(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=Hf([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||i.set(r?1:t.size>0?i.get(o,a)+t.get(o,s):i.get(o,a)+1,o,a)}return i}const tE={kernelName:vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=Q$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function nE(e){return(t,n,s)=>{const a=r.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}const rE=nE(e=>Math.ceil(e)),sE=MT(kc,rE),aE={kernelName:kc,backendName:"cpu",kernelFunc:sE},iE=OT(Ic,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),oE={kernelName:Ic,backendName:"cpu",kernelFunc:iE},lE={kernelName:Cc,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(r.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.imag,o=n.data.get(a.complexTensorInfos.real.dataId).values,l=n.data.get(i.dataId).values;for(let r=0;r<o.length;r++)s[r]=Math.hypot(o[r],l[r]);return n.makeOutput(s,t.shape,"float32")}};function uE(e,t,n,s){const a=r.getArrayFromDType(n,r.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach(e=>{const n=r.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?d.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}function cE(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const hE={kernelName:dh,backendName:"cpu",kernelFunc:cE};function dE(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.parseAxisParam(a,t[0].shape)[0];let o=d.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===l.length)return PT({inputs:{x:l[0]},backend:n});const u=l.map(e=>e.shape);if(d.assertParamsConsistent(u,i),"complex64"===l[0].dtype){const e=l.map(e=>t$({inputs:{input:e},backend:n})),t=l.map(e=>cE({inputs:{input:e},backend:n})),r=dE({inputs:e,backend:n,attrs:{axis:i}}),s=dE({inputs:t,backend:n,attrs:{axis:i}}),a=JT({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const c=l.map(e=>{const t=r.sizeFromShape(e.shape.slice(i));return h$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),h=c.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=d.computeOutShape(c.map(e=>e.shape),1);const p=uE(h,o,t[0].dtype,1===c[0].shape[0]),f=d.computeOutShape(l.map(e=>e.shape),i),m=n.makeTensorInfo(f,t[0].dtype,p);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const pE={kernelName:Sc,backendName:"cpu",kernelFunc:dE};function fE(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:h}=s;RT([a,i],"conv2d");const p=d.convertConv2DDataFormat(u),f=d.computeConv2DInfo(a.shape,i.shape,o,c,l,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,b=f.dilationWidth,x=f.padInfo.left,v=f.padInfo.top,w="channelsLast"===f.dataFormat,k=new fp(f.outShape,a.dtype),I=r.computeStrides(a.shape),N=r.computeStrides(i.shape),C=I[0],S=w?I[1]:I[2],_=w?I[2]:1,T=w?1:I[1],$=k.strides[0],E=w?k.strides[1]:k.strides[2],A=w?k.strides[2]:1,R=w?1:k.strides[1],F=n.data.get(a.dataId).values,D=n.data.get(i.dataId).values,O=k.values;for(let r=0;r<f.batchSize;++r){const e=r*C,t=r*$;for(let n=0;n<f.outHeight;++n){const r=t+n*E,s=n*f.strideHeight-v;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*N[0],i=e+n*S;for(let e=0;e<f.outWidth;++e){const t=r+e*A,n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const s=i+r*_;let o=a+e*N[1];for(let e=0;e<f.inChannels;++e){const n=F[s+e*T];for(let e=0;e<f.outChannels;++e)O[t+e*R]+=n*D[o+e];o+=f.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,O)}const mE={kernelName:_c,backendName:"cpu",kernelFunc:fE},gE={kernelName:Tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;RT([s,a],"conv2dBackpropFilter");const h=d.convertConv2DDataFormat(l),p=d.computeConv2DInfo(s.shape,c,i,1,o,u,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,x=new fp(p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,k=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,N=new fp(s.shape,s.dtype,k),C=new fp(a.shape,a.dtype,I);for(let d=0;d<g;++d){const e=Math.max(0,Math.ceil((w-d)/f)),t=Math.min(p.outHeight,(p.inHeight+w-d)/f);for(let n=0;n<y;++n){const r=Math.max(0,Math.ceil((v-n)/m)),s=Math.min(p.outWidth,(p.inWidth+v-n)/m);for(let a=0;a<p.inChannels;++a)for(let i=0;i<p.outChannels;++i){let o=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=d+u*f-w;for(let t=r;t<s;++t){const r=n+t*m-v;o+=b?N.get(l,e,r,a)*C.get(l,u,t,i):N.get(l,a,e,r)*C.get(l,i,u,t)}}x.set(o,d,n,a,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},yE={kernelName:$c,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=s;RT([a,i],"conv2dBackpropInput");const p=r.computeStrides(i.shape),f=r.computeStrides(a.shape);let m=d.convertConv2DDataFormat(c);const g=d.computeConv2DInfo(o,i.shape,l,1,u,h,!1,m),y=new fp(g.inShape,"float32"),b=y.values,x=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,[w,k,I]=p,{batchSize:N,filterHeight:C,filterWidth:S,inChannels:_,inHeight:T,inWidth:$,outChannels:E,outHeight:A,outWidth:R,strideHeight:F,strideWidth:D}=g;m=g.dataFormat;const O=C-1-g.padInfo.top,M=S-1-g.padInfo.left,L="channelsLast"===m,z=y.strides[0],P=L?y.strides[1]:y.strides[2],B=L?y.strides[2]:1,V=L?1:y.strides[1],W=f[0],U=L?f[1]:f[2],H=L?f[2]:1,G=L?1:f[1];for(let r=0;r<N;++r)for(let e=0;e<_;++e)for(let t=0;t<T;++t){const n=t-O,s=Math.max(0,Math.ceil(n/F)),a=Math.min(A,(C+n)/F);for(let i=0;i<$;++i){const o=i-M,l=Math.max(0,Math.ceil(o/D)),u=Math.min(R,(S+o)/D);let c=0;for(let t=s;t<a;++t){const s=t*F-n;for(let n=l;n<u;++n){const a=W*r+U*t+H*n,i=w*(C-1-s)+k*(S-1-(n*D-o))+I*e;for(let e=0;e<E;++e)c+=x[a+G*e]*v[i+e]}}b[z*r+P*t+B*i+V*e]=c}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},bE={kernelName:Ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=s;RT([a,i],"conv3d");const c=d.computeConv3DInfo(a.shape,i.shape,o,u,l),{filterDepth:h,filterHeight:p,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.front,v=b.left,w=b.top,k=new fp(c.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(i.dataId).values,C=k.values,S=r.computeStrides(a.shape),_=r.computeStrides(i.shape);for(let r=0;r<c.batchSize;++r){const e=r*S[0],t=r*k.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*k.strides[1],s=n*c.strideDepth-x;for(let t=0;t<h;++t){const n=s+t*m;if(n<0||n>=c.inDepth)continue;const a=t*_[0],i=e+n*S[1];for(let e=0;e<c.outHeight;++e){const t=r+e*k.strides[2],n=e*c.strideHeight-w;for(let e=0;e<p;++e){const r=n+e*g;if(r<0||r>=c.inHeight)continue;const s=a+e*_[1],o=i+r*S[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-v;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=c.inWidth)continue;const a=o+t*c.inChannels;let i=s+e*_[2];for(let e=0;e<c.inChannels;++e){const t=I[a+e];for(let e=0;e<c.outChannels;++e)C[n+e]+=t*N[i+e];i+=c.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},xE={kernelName:Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=s;RT([a,i],"conv3dBackpropFilterV2");const c=r.computeStrides(a.shape),h=r.computeStrides(i.shape),p=d.computeConv3DInfo(a.shape,u,o,1,l),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.filterDepth,b=p.filterHeight,x=p.filterWidth,v=new fp(p.filterShape,"float32"),w=v.values,[k,I,N,C]=v.strides,S=n.data.get(i.dataId).values,[_,T,$,E]=h,A=n.data.get(a.dataId).values,[R,F,D,O]=c,M=p.padInfo.front,L=p.padInfo.left,z=p.padInfo.top;for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((M-r)/f)),t=Math.min(p.outDepth,(p.inDepth+M-r)/f),n=r*k;for(let s=0;s<b;++s){const a=Math.max(0,Math.ceil((z-s)/m)),i=Math.min(p.outHeight,(p.inHeight+z-s)/m),o=s*I+n;for(let n=0;n<x;++n){const l=Math.max(0,Math.ceil((L-n)/g)),u=Math.min(p.outWidth,(p.inWidth+L-n)/g),c=n*N+o;for(let o=0;o<p.inChannels;++o){const h=o*C+c;for(let c=0;c<p.outChannels;++c){let d=0;for(let h=0;h<p.batchSize;++h){const p=h*R,y=h*_;for(let h=e;h<t;++h){const e=(r+h*f-M)*F+p,t=h*T+y;for(let r=a;r<i;++r){const a=(s+r*m-z)*D+e,i=r*$+t;for(let e=l;e<u;++e)d+=A[(n+e*g-L)*O+a+o]*S[e*E+i+c]}}}w[h+c]=d}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},vE={kernelName:Rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=s;RT([a],"conv3dBackpropInputV2");const c=r.computeStrides(a.shape),h=r.computeStrides(i.shape),p=d.computeConv3DInfo(u,i.shape,l,1,o),f=new fp(p.inShape,"float32"),m=f.values,[g,y,b,x]=f.strides,v=n.data.get(a.dataId).values,[w,k,I,N]=c,C=n.data.get(i.dataId).values,[S,_,T,$]=h,{batchSize:E,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:L,outChannels:z,outDepth:P,outHeight:B,outWidth:V,strideDepth:W,strideHeight:U,strideWidth:H}=p,G=A-1-p.padInfo.front,j=R-1-p.padInfo.top,q=F-1-p.padInfo.left;for(let r=0;r<E;++r)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-G,s=Math.max(0,Math.ceil(n/W)),a=Math.min(P,(A+n)/W);for(let i=0;i<M;++i){const o=i-j,l=Math.max(0,Math.ceil(o/U)),u=Math.min(B,(R+o)/U);for(let c=0;c<L;++c){const h=c-q,d=Math.max(0,Math.ceil(h/H)),p=Math.min(V,(F+h)/H);let f=0;for(let t=s;t<a;++t){const s=t*W-n;for(let n=l;n<u;++n){const a=n*U-o;for(let i=d;i<p;++i){const o=w*r+k*t+I*n+N*i,l=S*(A-1-s)+_*(R-1-a)+T*(F-1-(i*H-h))+$*e;for(let e=0;e<z;++e)f+=v[o+e]*C[l+e]}}}m[g*r+y*t+b*i+x*c+e]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},wE=OT(Fc,e=>Math.cos(e)),kE={kernelName:Fc,backendName:"cpu",kernelFunc:wE},IE=OT(Dc,e=>Math.cosh(e)),NE={kernelName:Dc,backendName:"cpu",kernelFunc:IE},CE={kernelName:Mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=s,[h,d,p,f]=a.shape,m=i.shape[0],[g,y]=l,b=Hf([m,g,y,f],"float32"),x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,w=n.data.get(a.dataId).values,k=r.computeStrides(a.shape),I=r.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],s=x[e+2],a=x[e+3],i=v[r];if(i>=h)continue;const o=g>1?(s-t)*(d-1)/(g-1):0,l=y>1?(a-n)*(p-1)/(y-1):0;for(let h=0;h<g;h++){const e=g>1?t*(d-1)+h*o:.5*(t+s)*(d-1);if(e<0||e>d-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++)b.values[e+t*I[2]+h*I[1]+r*I[0]]=c;else if("bilinear"===u){const t=Math.floor(e),s=Math.ceil(e),o=e-t;for(let e=0;e<y;e++){const u=y>1?n*(p-1)+e*l:.5*(n+a)*(p-1);if(u<0||u>p-1){for(let t=0;t<f;t++)b.values[t+e*I[2]+h*I[1]+r*I[0]]=c;continue}const d=Math.floor(u),m=Math.ceil(u),g=u-d;for(let n=0;n<f;n++){let a=n+d*k[2]+t*k[1]+i*k[0];const l=w[a];a=n+m*k[2]+t*k[1]+i*k[0];const u=w[a];a=n+d*k[2]+s*k[1]+i*k[0];const c=w[a];a=n+m*k[2]+s*k[1]+i*k[0];const p=w[a],f=l+(u-l)*g;a=n+e*I[2]+h*I[1]+r*I[0],b.values[a]=f+(c+(p-c)*g-f)*o}}}else for(let t=0;t<y;++t){const s=y>1?n*(p-1)+t*l:.5*(n+a)*(p-1);if(s<0||s>p-1){for(let e=0;e<f;e++)b.values[e+t*I[2]+h*I[1]+r*I[0]]=c;continue}const o=Math.round(s),u=Math.round(e);for(let e=0;e<f;e++)b.values[e+t*I[2]+h*I[1]+r*I[0]]=w[e+o*k[2]+u*k[1]+i*k[0]]}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},SE={kernelName:Oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=s;RT(a,"cumsum");const u=d.getAxesPermutation([i],a.shape.length);let c=a;null!=u&&(c=N$({inputs:{x:a},backend:n,attrs:{perm:u}}));const h=d.getInnerMostAxes(1,a.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const p=_p(c.dtype,"int32"),f=r.makeZerosTypedArray(r.sizeFromShape(c.shape),p),m=n.data.get(c.dataId).values,g=c.shape[c.shape.length-1],y=l?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=g)for(let e=0;e<g;e++){const t=y(r,e);if(0===e)f[t]=o?0:m[t];else{const n=y(r,e-1);f[t]=o?m[n]+f[n]:m[t]+f[n]}}const b=n.makeTensorInfo(c.shape,p,f);if(null!=u){const e=N$({inputs:{x:b},backend:n,attrs:{perm:d.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},_E={kernelName:Lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=Q$(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=eE(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},TE={kernelName:zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.assert("NHWC"===o,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`),r.assert(i>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`);const l=a.shape[0],u=a.shape[1],c=a.shape[2],h=a.shape[3],d=u*i,p=c*i,f=h/(i*i),m=n.data.get(a.dataId).values,g=new Float32Array(l*d*p*f);let y=0;for(let r=0;r<l;++r)for(let e=0;e<d;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const s=Math.floor(e/i),a=(n*i+e%i)*f;for(let e=0;e<f;++e)g[y++]=m[e+a+h*(s+c*(t+u*r))]}}return n.makeTensorInfo([l,d,p,f],a.dtype,g)}};function $E(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;RT([a,i],"depthwiseConv2DNative");const h=r.computeStrides(a.shape),p=r.computeStrides(i.shape);let f=u;null==f&&(f=[1,1]),r.assert(d.eitherStridesOrDilationsAreOne(o,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${f}'`);const m=d.computeConv2DInfo(a.shape,i.shape,o,f,l,c,!0),{filterHeight:g,filterWidth:y,dilationHeight:b,dilationWidth:x,padInfo:v}=m,w=v.left,k=v.top,I=m.outChannels/m.inChannels,N=new fp(m.outShape,a.dtype),C=n.data.get(a.dataId).values,S=n.data.get(i.dataId).values,_=N.values;for(let r=0;r<m.batchSize;++r){const e=r*h[0],t=r*N.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*N.strides[1],s=n*m.strideHeight-w;for(let t=0;t<g;++t){const n=s+t*b;if(n<0||n>=m.inHeight)continue;const a=t*p[0],i=e+n*h[1];for(let e=0;e<m.outWidth;++e){const t=r+e*N.strides[2],n=e*m.strideWidth-k;for(let e=0;e<y;++e){const r=n+e*x;if(r<0||r>=m.inWidth)continue;const s=i+r*m.inChannels;let o=t,l=a+e*p[1];for(let e=0;e<m.inChannels;++e){const t=C[s+e];for(let e=0;e<I;++e)_[o+e]+=t*S[l+e];o+=I,l+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const EE={kernelName:Pc,backendName:"cpu",kernelFunc:$E},AE={kernelName:Bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;RT([s,a],"depthwiseConv2dNativeBackpropFilter");const h=d.computeConv2DInfo(s.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new fp(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,k=new fp(s.shape,s.dtype,w),I=n.data.get(a.dataId).values,N=new fp(a.shape,a.dtype,I);for(let d=0;d<m;++d){const e=Math.max(0,Math.ceil((x-d)/p)),t=Math.min(h.outHeight,(h.inHeight+x-d)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((b-n)/f)),s=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/v),o=a%v;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=d+o*p-x;for(let t=r;t<s;++t)l+=k.get(u,e,n+t*f-b,i)*N.get(u,o,t,a)}y.set(l,d,n,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},RE={kernelName:Vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:h}=s;RT([a,i],"depthwiseConv2DNativeBackpropInput");const p=r.computeStrides(a.shape),f=r.computeStrides(i.shape),m=d.computeConv2DInfo(h,i.shape,o,l,u,c,!0),g=new fp(m.inShape,"float32"),y=g.values,[b,x,v]=g.strides,w=n.data.get(a.dataId).values,[k,I,N]=p,C=n.data.get(i.dataId).values,[S,_,T]=f,{batchSize:$,filterHeight:E,filterWidth:A,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:L,strideHeight:z,strideWidth:P}=m,B=E-1-m.padInfo.top,V=A-1-m.padInfo.left,W=O/R;for(let r=0;r<$;++r)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-B,s=Math.max(0,Math.ceil(n/z)),a=Math.min(M,(E+n)/z);for(let i=0;i<D;++i){const o=i-V,l=Math.max(0,Math.ceil(o/P)),u=Math.min(L,(A+o)/P);let c=0;for(let t=s;t<a;++t){const s=t*z-n;for(let n=l;n<u;++n){const a=k*r+I*t+N*n,i=S*(E-1-s)+_*(A-1-(n*P-o))+T*e;for(let t=0;t<W;++t)c+=w[a+(e*W+t)]*C[i+t]}}y[b*r+x*t+v*i+e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},FE={kernelName:Wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=r.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,o=Hf([a,a],s.dtype),l=o.values;for(let r=0;r<i.length;r++)l[r*a+r]=i[r];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},DE={kernelName:Uc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=u.data.get(s.dataId).values,h=s.shape.length,p=u.data.get(a.dataId).values,f=a.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:x,outWidth:v,padInfo:w,strideHeight:k,strideWidth:I,filterHeight:N,filterWidth:C,dilationHeight:S,dilationWidth:_,outShape:T}=d.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l),$=r.sizeFromShape(T),E=T.length,A=r.getArrayFromDType(s.dtype,$);for(let d=0;d<m;++d)for(let e=0;e<x;++e){const t=e*k-w.top;for(let n=0;n<v;++n){const i=n*I-w.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*S;if(n>=0&&n<g)for(let t=0;t<C;++t){const u=i+t*_;if(u>=0&&u<y){const i=r.locToIndex([d,n,u,o],h,r.computeStrides(s.shape)),m=r.locToIndex([e,t,o],f,r.computeStrides(a.shape)),g=c[i]+p[m];g>l&&(l=g)}}}A[r.locToIndex([d,e,n,o],E,r.computeStrides(T))]=l}}}return{dataId:u.write(r.toTypedArray(A,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},OE={kernelName:Gc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),p=r.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:S,outShape:_}=d.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.assert(i.rank===_.length,()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${_.length}, but got ${i.rank}`);const T=r.toNestedArray(_,c.data.get(i.dataId).values),$=r.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const s=n*k-v.left;for(let a=0;a<y;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<N;++t){const u=s+t*S;if(u>=0&&u<g){const s=h[r][n][u][a]+p[e][t][a];s>i&&(i=s,o=e,l=t)}}}$[o][l][a]+=T[r][e][n][a]}}}return{dataId:c.write(r.toTypedArray($,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ME={kernelName:Hc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),p=r.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:C,dilationWidth:S,outShape:_}=d.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.assert(i.rank===_.length,()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${_.length}, but got ${i.rank}`);const T=r.toNestedArray(_,c.data.get(i.dataId).values),$=r.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const s=n*k-v.left;for(let a=0;a<y;++a){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,l=s<0?0:s;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<N;++t){const u=s+t*S;if(u>=0&&u<g){const s=h[r][n][u][a]+p[e][t][a];s>i&&(i=s,o=n,l=u)}}}$[r][o][l][a]+=T[r][e][n][a]}}}return{dataId:c.write(r.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},LE={kernelName:Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;RT([s,a],"eluGrad");const i=new Float32Array(r.sizeFromShape(a.shape)),o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values;for(let r=0;r<o.length;++r){const e=o[r];i[r]=e>=1?l[r]:l[r]*(e+1)}return n.makeTensorInfo(a.shape,"float32",i)}},zE=UT((e,t)=>e===t?1:0),PE=a$(Zc,zE,null,"bool"),BE={kernelName:Zc,backendName:"cpu",kernelFunc:PE},VE=d.ERF_P,WE=d.ERF_A1,UE=d.ERF_A2,HE=d.ERF_A3,GE=d.ERF_A4,jE=d.ERF_A5,qE=OT(Xc,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+VE*n);return t*(1-((((jE*r+GE)*r+HE)*r+UE)*r+WE)*r*Math.exp(-n*n))}),KE={kernelName:Xc,backendName:"cpu",kernelFunc:qE},XE=nE(e=>Math.exp(e)),ZE=MT(Yc,XE),YE={kernelName:Yc,backendName:"cpu",kernelFunc:ZE};function JE(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:i}=s,o=a.shape.length,l=a.shape.slice();let u=i;return i<0&&(r.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),l.splice(u,0,1),h$({inputs:{x:a},backend:n,attrs:{shape:l}})}const QE={kernelName:Jc,backendName:"cpu",kernelFunc:JE},eA=nE(e=>Math.expm1(e)),tA=MT(Qc,eA),nA={kernelName:Qc,backendName:"cpu",kernelFunc:tA},rA=UT((e,t)=>e*t),sA=i$((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),aA=a$(Bh,rA,sA),iA={kernelName:Bh,backendName:"cpu",kernelFunc:aA},oA=UT((e,t)=>e/t),lA=a$(jc,oA),uA={kernelName:jc,backendName:"cpu",kernelFunc:lA},cA=UT((e,t)=>e-t),hA=i$((e,t,n,r)=>({real:e-n,imag:t-r})),dA=a$(Td,cA,hA),pA={kernelName:Td,backendName:"cpu",kernelFunc:dA};function fA(e,t,n){const s=e.shape,a=s[0],i=s[1],o=n.data.get(e.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[a,i],h=r.sizeFromShape(c),p=r.getTypedArrayFromDType("float32",h),f=r.getTypedArrayFromDType("float32",h);for(let r=0;r<a;r++){const e=Z$({inputs:{x:l},backend:n,attrs:{begin:[r,0],size:[1,i]}}),s=Z$({inputs:{x:u},backend:n,attrs:{begin:[r,0],size:[1,i]}}),a=JT({inputs:{real:e,imag:s},backend:n}),{real:o,imag:c}=mA(a,t,n),h=d.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=d.getComplexWithIndex(h,t);p[r*i+t]=e.real,f[r*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const m=n.makeTensorInfo(c,"float32",p),g=n.makeTensorInfo(c,"float32",f),y=JT({inputs:{real:m,imag:g},backend:n});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}function mA(e,t,n){const s=r.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((l=s)&l-1)){const a=gA(i,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",a.real),t=n.makeTensorInfo(l,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.createScalarValue(s,"float32")),o=PT({inputs:{x:i},backend:n}),u=uA.kernelFunc({inputs:{a:e,b:i},backend:n}),c=uA.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=d.exponent(s*r,t,n),l=d.getComplexWithIndex(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),d.assignToTypedArray(r,a,i,s)}return r}(d.mergeRealAndImagArrays(i,o),s,t);return d.splitRealAndImagArrays(e)}var l}function gA(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=d.mergeRealAndImagArrays(e,t),i=n/2,o=d.complexWithEvenIndex(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),p=s.makeTensorInfo(c,"float32",u),f=JT({inputs:{real:h,imag:p},backend:s}),m=d.complexWithOddIndex(a),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),w=JT({inputs:{real:x,imag:v},backend:s}),k=gA(l,u,i,r,s),I=k.real,N=k.imag,C=[I.length],S=s.makeTensorInfo(C,"float32",I),_=s.makeTensorInfo(C,"float32",N),T=JT({inputs:{real:S,imag:_},backend:s}),$=gA(g,y,i,r,s),E=$.real,A=$.imag,R=[E.length],F=s.makeTensorInfo(R,"float32",E),D=s.makeTensorInfo(R,"float32",A),O=JT({inputs:{real:F,imag:D},backend:s}),M=d.exponents(n,r),L=[M.real.length],z=s.makeTensorInfo(L,"float32",M.real),P=s.makeTensorInfo(L,"float32",M.imag),B=JT({inputs:{real:z,imag:P},backend:s}),V=aA({inputs:{a:B,b:O},backend:s}),W=u$({inputs:{a:T,b:V},backend:s}),U=dA({inputs:{a:T,b:V},backend:s}),H=t$({inputs:{input:W},backend:s}),G=t$({inputs:{input:U},backend:s}),j=cE({inputs:{input:W},backend:s}),q=cE({inputs:{input:U},backend:s}),K=dE({inputs:[H,G],backend:s,attrs:{axis:0}}),X=dE({inputs:[j,q],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Y=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Z,imag:Y}}const yA={kernelName:eh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=h$({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=fA(o,!1,n),u=h$({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function bA(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:i}=n,o=i||r.inferDtype(a),l=r.getArrayFromDType(o,r.sizeFromShape(s));return function(e,t,n){e.fill(t)}(l,a),t.makeTensorInfo(s,o,l)}const xA={kernelName:th,backendName:"cpu",kernelFunc:bA},vA={kernelName:nh,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,a=r.getTypedArrayFromDType(n.dtype,r.sizeFromShape(n.shape)),[i,o,l,u]=n.shape,c=s.data.get(n.dataId).values;for(let r=0;r<i;r++){const e=r*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=Math.round(l-[i,t,r,o][2]),d=e+n+s+o;let p=c[d];h>=0&&h<l&&(p=c[e+n+h*u+o]),a[d]=p}}}}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},wA=nE(e=>Math.floor(e)),kA=MT(rh,wA),IA={kernelName:rh,backendName:"cpu",kernelFunc:kA},NA=UT((e,t)=>Math.floor(e/t)),CA=a$(sh,NA,null,"int32"),SA={kernelName:sh,backendName:"cpu",kernelFunc:CA},_A={kernelName:Hd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=fE({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=u$({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=YT(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},TA={kernelName:Gd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=$E({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=u$({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=YT(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},$A={kernelName:oh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=r.sizeFromShape(s.shape),o=a.shape,l=o[o.length-1],[u,c,h,p]=d.prepareAndValidate(s,a);if(0===c)return n.makeTensorInfo(u,s.dtype,[]);const f=Hf([c,h],s.dtype),m=n.data.get(a.dataId).values,g=n.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=[];let t=0;for(let n=0;n<l;n++){const s=m[r*l+n];t+=s*p[n],e.push(s)}if(t<0||t>=i/h)throw new Error(`Invalid indices: ${e} does not index into ${s.shape}`);for(let n=0;n<h;n++)f.values[r*h+n]=g[t*h+n]}return n.makeTensorInfo(u,f.dtype,f.values)}};function EA(e,t,n){const r=Hf(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=t.locToIndex([n[0],n[2]]);n[2]=t.values[a];const i=e.locToIndex(n);r.values[s]=e.values[i]}return r}const AA={kernelName:ih,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s;RT([a,i],"gatherV2");let u=l;null==l&&(u=0);const c=r.sizeFromShape(i.shape),h=r.parseAxisParam(o,a.shape)[0],p=d.segment_util.collectGatherOpShapeInfo(a,i,h,u),f=h$({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=h$({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),g=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=EA(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},RA=UT((e,t)=>e>t?1:0),FA=a$(lh,RA,null,"bool"),DA={kernelName:lh,backendName:"cpu",kernelFunc:FA},OA=UT((e,t)=>e>=t?1:0),MA=a$(uh,OA,null,"bool"),LA={kernelName:uh,backendName:"cpu",kernelFunc:MA},zA={kernelName:hh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=h$({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=fA(o,!0,n),u=h$({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},PA=OT(ph,e=>Number.isFinite(e)?1:0,"bool"),BA={kernelName:ph,backendName:"cpu",kernelFunc:PA},VA=OT(fh,e=>Math.abs(e)===1/0?1:0,"bool"),WA={kernelName:fh,backendName:"cpu",kernelFunc:VA},UA=OT(mh,e=>Number.isNaN(e)?1:0,"bool"),HA={kernelName:mh,backendName:"cpu",kernelFunc:UA},GA=UT((e,t)=>e<t?1:0),jA=a$(yh,GA,null,"bool"),qA={kernelName:yh,backendName:"cpu",kernelFunc:jA},KA=UT((e,t)=>e<=t?1:0),XA=a$(bh,KA,null,"bool"),ZA={kernelName:bh,backendName:"cpu",kernelFunc:XA};function YA(e,t,n){const s=(t-e)/(n-1),a=r.makeZerosTypedArray(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}const JA={kernelName:xh,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=YA(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},QA=nE(e=>Math.log(e)),eR=MT(vh,QA),tR={kernelName:vh,backendName:"cpu",kernelFunc:eR},nR=OT(wh,e=>Math.log1p(e)),rR={kernelName:wh,backendName:"cpu",kernelFunc:nR},sR=UT((e,t)=>e&&t),aR=a$(kh,sR,null,"bool"),iR={kernelName:kh,backendName:"cpu",kernelFunc:aR},oR=OT(Ih,e=>e?0:1,"bool"),lR={kernelName:Ih,backendName:"cpu",kernelFunc:oR},uR=UT((e,t)=>e||t),cR=a$(Nh,uR,null,"bool"),hR={kernelName:Nh,backendName:"cpu",kernelFunc:cR},dR={kernelName:Ch,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=s;RT(a,"LRN");const c=a.shape[3],h=c-1,d=n.data.get(a.dataId).values,p=r.sizeFromShape(a.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,h);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let r=0;r<p;r++){const e=m(r),t=d[r]*Math.pow(o+l*e,-u);f[r]=t}return n.makeTensorInfo(a.shape,a.dtype,f)}},pR={kernelName:Sh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:i,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:h}=s;RT(o,"LRNGrad");const d=r.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(d),b=d;for(let r=0;r<b;r++){const e=r%p,t=r-e+Math.max(0,e-l),n=r-e+Math.min(p,e+l+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(m[r],2);s=c*s+u;for(let a=t;a<n;a++){let e=-2*c*h*m[a]*g[r]/s;r===a&&(e+=Math.pow(s,-h)),e*=f[r],y[a]+=e}}return n.makeTensorInfo(o.shape,a.dtype,y)}};function fR(e,t,n,s){const a=r.getTypedArrayFromDType(s,r.sizeFromShape(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];t>s&&(s=t)}a[r]=s}return a}function mR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=n;let u=a.shape;const c=u.length,h=r.parseAxisParam(i,u);let p=h;const f=d.getAxesPermutation(p,c);let m=l.data.get(a.dataId).values;if(null!=f){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[f[t]];m=I$(m,u,a.dtype,f,e),p=d.getInnerMostAxes(p.length,c),u=e}RT(a,"max"),d.assertAxesAreInnerMostDims("max",p,c);const[g,y]=d.computeOutAndReduceShapes(u,p),b=fR(m,r.sizeFromShape(y),g,a.dtype),x=l.write(b,g,a.dtype);let v=g;return o&&(v=d.expandShapeToKeepDim(g,h)),{dataId:x,shape:v,dtype:a.dtype}}const gR={kernelName:_h,backendName:"cpu",kernelFunc:mR},yR=UT((e,t)=>Math.max(e,t)),bR=a$(Th,yR),xR={kernelName:Th,backendName:"cpu",kernelFunc:bR},vR={kernelName:$h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;RT(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))h=PT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.computeStrides(a.shape),s=V$(e,0,a.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},wR={kernelName:Ah,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s;RT(a,"maxPool3d");const h=d.computePool3DInfo(a.shape,i,o,1,l,u,c),p=U$(n.data.get(a.dataId).values,0,a.dtype,r.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},kR={kernelName:Rh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;RT([s,a],"maxPool3DGrad");const c=d.computePool3DInfo(a.shape,i,o,1,l,u),h=function(e,t){const n=Hf(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=N&&(N=o,C=n*c*h+s*c+i)}}}n.set(C,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=x-1-c.padInfo.front,I=w-1-c.padInfo.left,N=v-1-c.padInfo.top,C=Hf(a.shape,"float32"),S=n.bufferSync(s);for(let d=0;d<c.batchSize;++d)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-k,a=n-N,i=r-I;let o=0;for(let t=0;t<x;t+=g){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=y){const s=(a+r)/f;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=b){const l=(i+a)/m;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=x*v*w-1-h.get(d,n,s,l,e)===t*v*w+r*w+a?1:0;0!==u&&(o+=S.get(d,n,s,l,e)*u)}}}C.set(o,d,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},IR={kernelName:Eh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;RT([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=d.computePool2DInfo(o.shape,l,u,1,c,h),f=n.data.get(o.dataId).values,m=Hf(p.outShape,o.dtype,W$(f,o.shape,o.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,I=v-1-p.padInfo.top,N=Hf(o.shape,"float32"),C=n.data.get(s.dataId).values,S=Hf(s.shape,"float32",C);for(let d=0;d<p.batchSize;++d)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-I,s=n-k;let a=0;for(let t=0;t<v;t+=b){const n=(r+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=x){const i=(s+r)/y;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=v*w-1-m.get(d,n,i,e)===t*w+r?1:0;0!==o&&(a+=S.get(d,n,i,e)*o)}}N.set(a,d,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},NR={kernelName:Fh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;RT(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=d.computePool2DInfo(s.shape,a,i,[1,1],o),[p,f]=function(e,t,n,s,a){const i=V$(e,0,n,r.computeStrides(t),a,"max"),o=W$(e,t,n,a,!0,s);return[i.values,o.values]}(c,s.shape,s.dtype,l,h),m=u.write(p,h.outShape,s.dtype),g=u.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};function CR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;let l;RT(a,"sum"),l="bool"===a.dtype?r$({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):PT({inputs:{x:a},backend:n});const u=l.shape.length,c=r.parseAxisParam(i,l.shape),h=d.getAxesPermutation(c,u);let p=c,f=l;null!=h&&(f=N$({inputs:{x:l},backend:n,attrs:{perm:h}}),p=d.getInnerMostAxes(p.length,u)),d.assertAxesAreInnerMostDims("sum",p,f.shape.length);const[m,g]=d.computeOutAndReduceShapes(f.shape,p);let y=e$(n,m,d.upcastType(f.dtype,"int32"));const b=r.sizeFromShape(g),x=n.data.get(y.dataId).values,v=n.data.get(f.dataId).values;for(let r=0;r<x.length;++r){const e=r*b;let t=0;for(let n=0;n<b;++n)t+=v[e+n];x[r]=t}if(o){const e=y;y=h$({inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(y.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=h&&n.disposeIntermediateTensorInfo(f),y}const SR={kernelName:kd,backendName:"cpu",kernelFunc:CR},_R={kernelName:Dh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=r.parseAxisParam(i,a.shape),u=d.computeOutAndReduceShapes(a.shape,l),c=r.sizeFromShape(u[1]),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(p);const f=r$({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(f);const m=lA({inputs:{a:f,b:p},backend:n});h.push(m);const g=CR({inputs:{x:m},backend:n,attrs:{axis:i,keepDims:o}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},TR={kernelName:Oh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;RT(a,"min");const l=r.parseAxisParam(i,a.shape);let u=l;const c=d.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=N$({inputs:{x:a},backend:n,attrs:{perm:c}}),u=d.getInnerMostAxes(u.length,a.shape.length)),d.assertAxesAreInnerMostDims("min",u,h.shape.length);const[p,f]=d.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(p),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];r<t&&(t=r)}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(p,h.dtype,g);if(o){const e=h$({inputs:{x:b},backend:n,attrs:{shape:d.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},$R=UT((e,t)=>Math.min(e,t)),ER=a$(Mh,$R),AR={kernelName:Mh,backendName:"cpu",kernelFunc:ER},RR={kernelName:Lh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,mode:o}=s;RT(a,"mirrorPad");const l=i.map((e,t)=>e[0]+a.shape[t]+e[1]),u=i.map(e=>e[0]),c=i.map((e,t)=>e[0]+a.shape[t]),h="reflect"===o?0:1,d=n.data.get(a.dataId).values,p=a.shape.length,f=r.computeStrides(a.shape),m=r.sizeFromShape(l),g=l.length,y=r.computeStrides(l),b=r.getTypedArrayFromDType(a.dtype,m);for(let x=0;x<m;x++){let e=r.indexToLoc(x,g,y);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-h:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+h);e=e.map((e,t)=>e-u[t]);const t=r.locToIndex(e,p,f);b[x]=d[t]}return{dataId:n.write(b,l,a.dtype),shape:l,dtype:a.dtype}}},FR=UT((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),DR=a$(zh,FR),OR={kernelName:zh,backendName:"cpu",kernelFunc:DR};function MR(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=a.shape.length;let l=i;if(-1===l&&(l=o-1),l!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${l}`);const u=r.parseAxisParam([l],a.shape),c=mR({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),h=d.expandShapeToKeepDim(c.shape,u),p=h$({inputs:{x:c},backend:n,attrs:{shape:h}}),f=dA({inputs:{a:a,b:p},backend:n}),m=ZE({inputs:{x:f},backend:n}),g=CR({inputs:{x:m},backend:n,attrs:{axis:u,keepDims:!1}}),y=h$({inputs:{x:g},backend:n,attrs:{shape:h}}),b=lA({inputs:{a:m,b:y},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}const LR={kernelName:Cd,backendName:"cpu",kernelFunc:MR},zR={kernelName:Ph,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:i,seed:o,normalized:l}=s;RT(a,"multinomial");const u=l?a:MR({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],h=u.shape[1],d=n.data.get(u.dataId).values,p=[c,i],f=r.makeZerosTypedArray(r.sizeFromShape(p),"int32");for(let r=0;r<c;++r){const e=r*h,t=new Float32Array(h-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=xy.alea(o.toString()),s=r*i;for(let r=0;r<i;++r){const e=n();f[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[s+r]=n;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function PR(e,t,n){const s=r.createScalarValue(-1,n);return rA([],t,s,e,n)}const BR={kernelName:Vh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;RT(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=PR(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},VR=p.nonMaxSuppressionV3Impl,WR={kernelName:Uh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;RT(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=VR(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},UR=p.nonMaxSuppressionV4Impl,HR={kernelName:Hh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;RT(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=UR(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},GR=p.nonMaxSuppressionV5Impl,jR={kernelName:Gh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;RT(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=GR(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},qR=UT((e,t)=>e!==t?1:0),KR=a$(Wh,qR,null,"bool"),XR={kernelName:Wh,backendName:"cpu",kernelFunc:KR},ZR={kernelName:qh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s;RT(a,"oneHot");const u=r.sizeFromShape(a.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(a.dataId).values;for(let r=0;r<u;++r)h[r]>=0&&h[r]<i&&(c[r*i+h[r]]=o);return n.makeTensorInfo([...a.shape,i],"int32",c)}};function YR(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=t$({inputs:{input:r},backend:n}),t=YR({inputs:{x:e},backend:n}),s=cE({inputs:{input:r},backend:n}),a=YR({inputs:{x:s},backend:n}),i=JT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return bA({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const JR={kernelName:Pd,backendName:"cpu",kernelFunc:YR},QR={kernelName:jh,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=t$({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=cE({inputs:{input:s},backend:r}),i=YR({inputs:{x:a},backend:r}),o=JT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return bA({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function eF(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return JE({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=dE({inputs:t.map(e=>{const t=JE({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t}),backend:n,attrs:{axis:a}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const tF={kernelName:Kh,backendName:"cpu",kernelFunc:eF},nF={kernelName:Xh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;RT(a,"pad");const l=i.map((e,t)=>e[0]+a.shape[t]+e[1]),u=i.map(e=>e[0]),c=n.data.get(a.dataId).values,h=r.sizeFromShape(a.shape),d=a.shape.length,p=r.computeStrides(a.shape),f=r.sizeFromShape(l),m=l.length,g=r.computeStrides(l),y=r.getTypedArrayFromDType(a.dtype,f);0!==o&&y.fill(o);for(let b=0;b<h;b++){const e=r.indexToLoc(b,d,p).map((e,t)=>e+u[t]);y[r.locToIndex(e,m,g)]=c[b]}return{dataId:n.write(y,l,a.dtype),shape:l,dtype:a.dtype}}},rF=UT((e,t)=>Math.pow(e,t)),sF=a$(Zh,rF),aF={kernelName:Zh,backendName:"cpu",kernelFunc:sF};function iF(e,t,n,s){const[a,i]=d.computeOutAndReduceShapes(e,s),o=_p(t,"int32"),l=r.makeZerosTypedArray(r.sizeFromShape(a),o),u=r.sizeFromShape(i);for(let r=0;r<l.length;++r){const e=r*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];l[r]=t}return{outVals:l,outShape:a,outDtype:o}}const oF={kernelName:Jh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;RT(a,"prod");const l=a.shape.length,u=r.parseAxisParam(i,a.shape),c=d.getAxesPermutation(u,l);let h=u,p=a;const f=[];null!=c&&(p=N$({inputs:{x:a},backend:n,attrs:{perm:c}}),f.push(p),h=d.getInnerMostAxes(h.length,l));const m=n.data.get(p.dataId).values,{outVals:g,outShape:y,outDtype:b}=iF(p.shape,p.dtype,m,h);let x=y;return o&&(x=d.expandShapeToKeepDim(y,u)),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(x,b,g)}};function lF(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),i=r.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}const uF={kernelName:Qh,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=lF(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},cF=OT(td,e=>1/e),hF={kernelName:td,backendName:"cpu",kernelFunc:cF},dF={kernelName:id,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s;RT(a,"resizeBilinear");const u=r.computeStrides(a.shape),[c,h]=l,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(r.sizeFromShape([d,c,h,m])),b=[i&&c>1?p-1:p,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let r=0;r<d;r++)for(let e=0;e<c;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),i=r*u[0]+n*u[1],l=r*u[0]+a*u[1];for(let e=0;e<h;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(f-1,Math.ceil(t)),c=i+n*u[2],h=l+n*u[2],d=i+a*u[2],p=l+a*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r;y[v++]=a+(n+(g[p+e]-n)*r-a)*s}}}return n.makeTensorInfo([d,c,h,m],"float32",y)}},pF={kernelName:od,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;RT([i,a],"resizeBilinearGrad");const l=r.computeStrides(a.shape),[u,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=[o&&p>1?c-1:c,o&&f>1?h-1:h],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(i.dataId).values;let w=0;for(let r=0;r<u;r++){const e=r*l[0];for(let t=0;t<p;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),a=e+r*l[1],i=e+s*l[1],o=n-r,u=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),s=t-n,c=1-s,p=a+n*l[2],f=a+r*l[2],g=i+n*l[2],y=i+r*l[2],b=u*c,k=u*s,I=o*c,N=o*s;for(let e=0;e<d;e++){const t=v[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*N}}}}return n.makeTensorInfo([u,h,c,d],"float32",m)}},fF={kernelName:sd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s;RT(a,"resizeNearestNeighbor");const u=r.computeStrides(a.shape),[c,h]=l,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(d*c*h*m),b=[i&&c>1?p-1:p,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let r=0;r<d;r++){const e=r*u[0];for(let t=0;t<c;t++){const n=o?v*(t+.5):v*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<h;e++){const t=o?w*(e+.5):w*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<m;e++)y[k++]=g[r+e]}}}return n.makeTensorInfo([d,c,h,m],a.dtype,y)}},mF={kernelName:ad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;RT([i,a],"resizeNearestNeighborGrad");const l=r.computeStrides(a.shape),u=r.computeStrides(i.shape),[c,h,d,p]=a.shape,[,f,m]=i.shape,g=new Float32Array(c*h*d*p),y=n.data.get(i.dataId).values,b=[o&&f>1?h-1:h,o&&m>1?d-1:d],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,I=1/w,N=2*Math.ceil(k)+2,C=2*Math.ceil(I)+2;for(let r=0;r<c;r++){const e=r*l[0];for(let t=0;t<h;t++){const n=e+t*l[1],r=Math.floor(t*k),s=Math.floor(r-N/2);for(let a=0;a<d;a++){const r=n+a*l[2],i=Math.floor(a*I),c=Math.floor(i-C/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<N;r++){const l=r+s;if(l<0||l>=f)continue;const p=e+l*u[1],g=l*v;if(t===Math.min(h-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+c;if(t<0||t>=m)continue;const r=p+t*u[2],s=t*w;a===Math.min(d-1,o?Math.round(s):Math.floor(s))&&(i+=y[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}},gF={kernelName:ud,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s;RT(a,"reverse");const o=a.shape.length,l=r.parseAxisParam(i,a.shape);if(0===o)return PT({inputs:{x:a},backend:n});const u=new fp(a.shape,a.dtype),c=n.bufferSync(a);for(let r=0;r<u.size;r++){const e=u.indexToLoc(r),t=e.slice();l.forEach(e=>t[e]=a.shape[e]-1-t[e]),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},yF={kernelName:Wd,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,l=n,u=r.getTypedArrayFromDType(s.dtype,r.sizeFromShape(s.shape)),[c,h,p,f]=s.shape,[m,g]=d.getImageCenter(o,h,p),y=Math.sin(a),b=Math.cos(a),x=l.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=r*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let r=0;r<p;r++){const s=r*f;for(let a=0;a<f;a++){const o=[c,t,r,a],l=o[2],d=o[1];let v=(l-m)*b-(d-g)*y,w=(l-m)*y+(d-g)*b;v=Math.round(v+m),w=Math.round(w+g);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),v>=0&&v<p&&w>=0&&w<h&&(k=x[e+w*(p*f)+v*f+a]),u[e+n+s+a]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},bF=OT(cd,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),xF={kernelName:cd,backendName:"cpu",kernelFunc:bF},vF=nE(e=>1/Math.sqrt(e)),wF=MT(hd,vF),kF={kernelName:hd,backendName:"cpu",kernelFunc:wF};function IF(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Hf(n,t.dtype);const p=Hf(c,t.dtype);p.values.fill(l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[a*s+n]+=d[f*s+n]:p.values[a*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}const NF={kernelName:dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=d.calculateShapes(a,s,i),p=IF(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},CF={kernelName:pd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t;RT([s,a,i],"select");const o=s.shape.length,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=_p(a.dtype,i.dtype),d=r.makeZerosTypedArray(r.sizeFromShape(a.shape),h);let p=0;const f=0===o||o>1||1===a.shape.length?1:r.sizeFromShape(a.shape.slice(1));for(let r=0;r<l.length;r++)for(let e=0;e<f;e++)d[p++]=1===l[r]?u[r]:c[r];return n.makeTensorInfo(a.shape,h,d)}},SF=d.SELU_SCALEALPHA,_F=d.SELU_SCALE,TF=OT(fd,e=>e>=0?_F*e:SF*(Math.exp(e)-1)),$F={kernelName:fd,backendName:"cpu",kernelFunc:TF},EF=OT(xd,e=>1/(1+Math.exp(-e))),AF={kernelName:xd,backendName:"cpu",kernelFunc:EF},RF=OT(bd,e=>e<0?-1:e>0?1:0),FF={kernelName:bd,backendName:"cpu",kernelFunc:RF},DF=OT(gd,e=>Math.sin(e)),OF={kernelName:gd,backendName:"cpu",kernelFunc:DF},MF=OT(yd,e=>Math.sinh(e)),LF={kernelName:yd,backendName:"cpu",kernelFunc:MF},zF=Math.log(1.1920928955078125e-7)+2,PF=OT(vd,e=>{const t=e>-zF,n=e<zF,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}),BF={kernelName:vd,backendName:"cpu",kernelFunc:PF},VF={kernelName:Id,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;RT([a],"spaceToBatchND");const l=r.sizeFromShape(i),u=[[0,0]];u.push(...o);for(let r=1+i.length;r<a.shape.length;++r)u.push([0,0]);const c=nF.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=d.getReshaped(c.shape,i,l,!1),p=d.getPermuted(h.length,i.length,!1),f=d.getReshapedPermuted(c.shape,i,l,!1),m=h$({inputs:{x:c},backend:n,attrs:{shape:h}}),g=N$({inputs:{x:m},backend:n,attrs:{perm:p}}),y=h$({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}},WF={kernelName:$d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=d.calculateShapes(a,s,o),f=IF(n.bufferSync(s),n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,f.dtype,f.values)}},UF={kernelName:Nd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.parseAxisParam(o,a.shape)[0],u=d.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[l]=e;const r=Z$({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r})}},HF=OT(wd,e=>Math.sqrt(e)),GF={kernelName:wd,backendName:"cpu",kernelFunc:HF},jF={kernelName:_d,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;RT(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];a[i]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},qF=UT((e,t)=>{const n=e-t;return n*n}),KF=a$(Sd,qF),XF={kernelName:Sd,backendName:"cpu",kernelFunc:KF},ZF=OT(Bd,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),YF={kernelName:Bd,backendName:"cpu",kernelFunc:ZF};function JF(e,t,n,r){const s=Hf(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];s.set(t.get(...i),...e)}return s}const QF={kernelName:Ed,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r;RT(s,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=l.sliceInfo(s.shape,a,i,o,u,c,h,d,p),v=h$({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(f){const e=Z$({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=h$({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,s.dtype,[]);else{const e=JF(x,n.bufferSync(v),g,m);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const k=h$({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},eD=OT(Ad,e=>Math.tan(e)),tD={kernelName:Ad,backendName:"cpu",kernelFunc:eD},nD=OT(Rd,e=>Math.tanh(e));function rD(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=Hf(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}function sD(e,t,n,s,a){const i=t[t.length-1],[o,l]=[e.length/i,i],u=r.getTypedArrayFromDType(n,o*s),c=r.getTypedArrayFromDType("int32",o*s);for(let r=0;r<o;r++){const t=r*l,n=e.subarray(t,t+l),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort((e,t)=>t.value-e.value);const i=r*s,o=u.subarray(i,i+s),h=c.subarray(i,i+s);for(let e=0;e<s;e++)o[e]=a[e].value,h[e]=a[e].index}const h=t.slice();return h[h.length-1]=s,[Hf(h,n,u),Hf(h,"int32",c)]}function aD(e,t,n,s){const a=r.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<a;r++)i[0]*=n[r];i[1]=n[a];for(let r=a+1;r<n.length;r++)i[2]*=n[r];const o={},l=new Int32Array(n[a]),u=new fp(i,s,e),c=[],h=1===i[0]&&1===i[2];for(let r=0;r<n[a];r++){let t;if(h)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(u.get(t,r,n));t=e.join(",")}if(void 0!==o[t])l[r]=o[t];else{const e=Object.keys(o).length;o[t]=e,l[r]=e,c.push(r)}}const d=i.slice();d[1]=Object.keys(o).length;const p=new fp(d,s);c.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(u.get(n,e,r),n,t,r)});const f=n.slice();return f[a]=d[1],{outputValues:p.values,outputShape:f,indices:l}}const iD=[m$,y$,x$,w$,c$,k$,S$,_$,T$,$$,A$,F$,O$,z$,B$,H$,G$,j$,q$,f$,K$,J$,tE,s$,aE,oE,QT,lE,pE,gE,yE,mE,xE,vE,bE,kE,NE,CE,SE,_E,TE,EE,AE,RE,FE,DE,ME,OE,uA,zT,LE,BE,KE,YE,QE,nA,yA,xA,vA,IA,SA,_A,TA,$A,AA,DA,LA,BT,zA,hE,BA,WA,HA,WT,qA,ZA,JA,tR,rR,iR,lR,hR,dR,pR,xR,vR,wR,kR,IR,NR,gR,_R,TR,AR,RR,OR,zR,iA,BR,WR,HR,jR,XR,ZR,QR,tF,nF,aF,jT,oF,uF,n$,hF,KT,ZT,d$,dF,pF,fF,mF,gF,yF,xF,kF,NF,CF,$F,AF,FF,OF,LF,Y$,LR,BF,VF,WF,UF,GF,jF,XF,YF,QF,pA,SR,tD,{kernelName:Rd,backendName:"cpu",kernelFunc:nD},{kernelName:Fd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;RT(s,"tile");const i=rD(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a}=r;RT(s,"topk");const i=n.data.get(s.dataId).values,[o,l]=sD(i,s.shape,s.dtype,a);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},C$,{kernelName:Md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;RT(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=aD(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Ld,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=s.shape[p]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=Z$({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=h$({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},{kernelName:zd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s;RT(a,"unsortedSegmentSum");const l=[],u=[],c=a.shape.length-i.shape.length;let h=i;for(let r=0;r<c;++r){const e=JE({inputs:{input:h},backend:n,attrs:{dim:r+1}});h=e,u.push(e)}for(let p=0;p<o;++p){const e=r.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),s=PE({inputs:{a:t,b:h},backend:n}),i=r$({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=aA({inputs:{a:i,b:a},backend:n}),c=CR({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});l.push(c),u.push(t),u.push(s),u.push(i),u.push(o),u.push(c)}const d=eF({inputs:l,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},JR];for(const $U of iD)Yd($U);const oD={},lD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function uD(e){if(!(e in oD)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete oD[e]},!1),1===e?t.getContext("webgl",lD)||t.getContext("experimental-webgl",lD):t.getContext("webgl2",lD)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;oD[e]=t}const t=oD[e];return t.isContextLost()?(delete oD[e],uD(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),oD[e])}var cD,hD,dD;function pD(e,t){return[t,e]}function fD(e){const t=r.sizeFromShape(e),n=Math.ceil(t/4);return r.sizeToSquarishShape(n)}function mD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function gD(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===Xu().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function yD(e,t){const n=t();return Xu().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function bD(e){return!!(Xu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function xD(e,t){return SD(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(cD||(cD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(hD||(hD={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(dD||(dD={}));const vD=/ERROR: [0-9]+:([0-9]+):/g;function wD(e,t){if(yD(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function kD(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(yD(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),yD(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i)),yD(e,()=>e.enableVertexAttribArray(o)),!0)}function ID(e,t,n){yD(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),yD(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function ND(e,t){yD(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),yD(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function CD(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function SD(e,t,n){const r=yD(e,()=>t());if(null==r)throw new Error(n);return r}function _D(e,t=2){return r.sizeFromShape(e.slice(0,e.length-t))}function TD(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $D(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[_D(e),...TD(e)]),t}function ED(e){return e%2==0}function AD(e,t){if(e=e.slice(-2),t=t.slice(-2),r.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(ED(n)&&ED(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&ED(e[0])&&ED(t[0])}let RD,FD;function DD(e,t){return null!=e.getExtension(t)}function OD(e){try{if(null!=uD(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function MD(e){const t=gD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function LD(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const zD=Xu();function PD(){let e,t,n,r,s,a,i,o,l,u;return 2===Xu().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function BD(e,t,n="index"){const s=r.computeStrides(t);return s.map((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function VD(e){const t=r.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}zD.registerFlag("HAS_WEBGL",()=>zD.getNumber("WEBGL_VERSION")>0),zD.registerFlag("WEBGL_VERSION",()=>OD(2)?2:OD(1)?1:0),zD.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),zD.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===zD.get("WEBGL_VERSION")),zD.registerFlag("WEBGL_CPU_FORWARD",()=>!0),zD.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),zD.registerFlag("WEBGL_PACK",()=>zD.getBool("HAS_WEBGL")),zD.registerFlag("WEBGL_PACK_NORMALIZATION",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_PACK_CLIP",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),zD.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_PACK_REDUCE",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_LAZILY_UNPACK",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_CONV_IM2COL",()=>zD.getBool("WEBGL_PACK")),zD.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==RD){const t=uD(e);RD=t.getParameter(t.MAX_TEXTURE_SIZE)}return RD}(zD.getNumber("WEBGL_VERSION"))),zD.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==FD){const t=uD(e);FD=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,FD)}(zD.getNumber("WEBGL_VERSION"))),zD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=zD.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=uD(e);return t=DD(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:DD(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),zD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>zD.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.isMobile()),zD.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=uD(e);if(1===e){if(!DD(t,"OES_texture_float"))return!1}else if(!DD(t,"EXT_color_buffer_float"))return!1;return MD(t)}(zD.getNumber("WEBGL_VERSION"))),zD.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!zD.getBool("WEBGL_FORCE_F16_TEXTURES")&&zD.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),zD.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=uD(e);if(1!==e){if(DD(t,"EXT_color_buffer_float"))return MD(t);const e="EXT_color_buffer_half_float";if(DD(t,e)){const n=t.getExtension(e);return function(e,t){const n=gD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!DD(t,"OES_texture_float")&&!!DD(t,"WEBGL_color_buffer_float")&&MD(t)}(zD.getNumber("WEBGL_VERSION"))),zD.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=zD.getNumber("WEBGL_VERSION"))&&null!=uD(e).fenceSync;var e}),zD.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>zD.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),zD.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),zD.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});const WD="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class UD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=cD.DENSE;const t=fD(e),n=PD();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${BD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class HD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=cD.DENSE;const t=fD(e),n=PD();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${BD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class GD{constructor(e){this.variableNames=["A"],this.outTexUsage=hD.DOWNLOAD;const t=PD();this.outputShape=e,this.userCode=`\n      ${WD}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class jD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=hD.DOWNLOAD;const t=PD();this.outputShape=e,this.userCode=`\n      ${WD}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class qD{constructor(e,t,n=!1){this.variableNames=["A"];const r=PD(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${VD(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class KD{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=PD(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let t=0;t<=1;t++){const n=2*l+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${l} < ${e[1]}) {\n              localCoords[1] += ${l};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${VD(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function XD(e,t,n,r,s,a){!function(e,t){const n=Xu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return SD(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return yD(e,()=>e.bindTexture(o,i)),yD(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),yD(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),yD(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),yD(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),yD(e,()=>e.texImage2D(o,0,r,t,n,0,s,a,null)),yD(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function ZD(e){return e.internalFormatFloat}function YD(e){return e.internalFormatHalfFloat}function JD(e){return e.downloadTextureFormat}function QD(e){return e.internalFormatPackedFloat}function eO(e){return e.internalFormatPackedHalfFloat}class tO{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Xu().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){oD[e]=t}(t,e)):this.gl=uD(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Xu().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=xD(this.gl,"OES_texture_float"),DD(this.gl,e))this.textureHalfFloatExtension=xD(this.gl,e);else if(Xu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),DD(this.gl,r))this.colorBufferHalfFloatExtension=xD(this.gl,r);else if(Xu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",DD(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!DD(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=SD(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return yD(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),yD(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=SD(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return yD(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),yD(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return SD(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=gD(this.gl,this.textureHalfFloatExtension)}get debug(){return Xu().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;yD(e,()=>e.finish()),yD(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),yD(e,()=>e.deleteFramebuffer(this.framebuffer)),yD(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),yD(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),yD(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=pD(t,n);return XD(e,s,a,ZD(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=pD(t,n);return XD(e,s,a,YD(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=pD(t,n);return XD(e,s,a,JD(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){yD(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?yD(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):yD(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),yD(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;yD(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),yD(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),yD(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=mD(t,n);return XD(e,s,a,eO(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=mD(t,n);return XD(e,s,a,QD(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ND(this.gl,this.framebuffer),this.outputTexture=null),yD(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[s,a]=pD(t,n),i=new Uint8Array(t*n*4);return yD(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=mD(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();yD(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));const a=16*t*n;return yD(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),yD(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),yD(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Xu().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return yD(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=SD(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(yD(e,()=>e.shaderSource(n,t)),yD(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=vD.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map((e,t)=>r.rightPad((t+1).toString(),i)+e);let l=0;for(let r=0;r<o.length;r++)l=Math.max(o[r].length,l);const u=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),s=function(e){const t=PD();return function(e,t){const n=SD(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(yD(e,()=>e.shaderSource(n,t)),yD(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),a=function(e){return SD(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return yD(t,()=>t.attachShader(a,s)),yD(t,()=>t.attachShader(a,n)),function(e,t){if(yD(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&wD(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return yD(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),kD(e,t,"clipSpacePos",n,3,20,0)&&kD(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&yD(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&wD(this.gl,this.program),yD(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return SD(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),yD(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){yD(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),yD(e,()=>e.activeTexture(e.TEXTURE0+n)),yD(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),yD(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=mD(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&wD(this.gl,this.program),CD(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),yD(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),yD(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=xD(this.gl,2===Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ID(this.gl,e,this.framebuffer),this.debug&&CD(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ID(this.gl,this.outputTexture,this.framebuffer),this.debug&&CD(this.gl)):ND(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;ID(r,e,this.framebuffer),this.debug&&CD(r),this.outputTexture=e,yD(r,()=>r.viewport(0,0,t,n)),yD(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),yD(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:nO}=d;function rO(e,t,n,s){const a=[];e.forEach(e=>{const t=r.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))});const i=a.join("\n"),o=e.map(e=>function(e,t,n=!1){let s="";return s+=n?aO(e):sO(e),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(s+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=nO(e.shapeInfo.logicalShape,t.logicalShape),u=dO(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+c]}`).join(", ");let f="return outputValue;";const m=1===r.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===o&&null==e.shapeInfo.flatOffset&&r.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=dO(o),u=nO(e.shapeInfo.logicalShape,t.logicalShape),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";return p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+c]}`).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${s}(${p});\n    }\n  `}(e,t)),s}(e,t,s)).join("\n"),l=t.texShape,u=PD(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let h,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${iO}\n    ${oO}\n    ${lO}\n  `}(u);return t.isPacked?(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let l=2;l<e.length-1;l++)a*=e[e.length-l-1],i=`\n      int b${l} = index / ${a};\n      index -= b${l} * ${a};\n    `+i,o=`b${l}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,l),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return r.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=BD(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=BD(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=BD(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=BD(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,l),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),s&&(p+=uO),[p,c,d,i,h,o,n].join("\n")}function sO(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${cO(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${hO(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=cO(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&r.arraysEqual(t,a))return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${a[0]}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const{newShape:i,keptDims:o}=r.squeezeShape(t);if(i.length<t.length){const t=["row","col"];return`\n      ${sO(pO(e,i))}\n      float ${s}(int row, int col) {\n        return ${s}(${fO(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${hO(e)}\n      }\n    `;const l=a[0],u=a[1],c=cO(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],{newShape:o,keptDims:l}=r.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth"];return`\n        ${sO(pO(e,o))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${fO(t,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${hO(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;return h===a&&null==d?`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `:h===i&&null==d?`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${cO(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=r.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${sO(pO(e,l))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${fO(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${hO(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===o&&null==c?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===a&&null==c?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${cO(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=r.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${sO(pO(e,u))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${fO(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${hO(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===l&&null==h?`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===a&&null==h?`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${cO(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=r.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${sO(pO(e,a))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${fO(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${hO(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===h&&null==d?`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:m===o&&null==d?`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${cO(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function aO(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${PD().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=PD();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=PD();if(null!=a&&r.arraysEqual(t,a))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${aO(pO(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${fO(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${PD().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let p=2;p<n-1;p++)h=`int b${p}, `+h,c*=t[n-p-1],d=`b${p} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${PD().texture2D}(${r}, uv);\n    }\n  `}(e)}}const iO="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oO="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",lO="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",uO="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function cO(e){return`offset${e}`}function hO(e){const t=e.name,n=r.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function dO(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function pO(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function fO(e,t){return t.map(t=>e[t]).join(", ")}function mO(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!r.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}const{addImpl:gO,bincountImpl:yO,bincountReduceImpl:bO,ceilImpl:xO,concatImpl:vO,expImpl:wO,expm1Impl:kO,floorImpl:IO,gatherV2Impl:NO,greaterImpl:CO,lessImpl:SO,linSpaceImpl:_O,logImpl:TO,maxImpl:$O,maximumImpl:EO,minimumImpl:AO,multiplyImpl:RO,negImpl:FO,prodImpl:DO,rangeImpl:OO,rsqrtImpl:MO,simpleAbsImpl:LO,sliceImpl:zO,stridedSliceImpl:PO,subImpl:BO,tileImpl:VO,topKImpl:WO,transposeImpl:UO,uniqueImpl:HO}=A;function GO(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function jO(e,t){return 1===t?[e]:GO(e,t)}class qO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=jO("rc",t),r=dO(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class KO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2==1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${BD(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${VD(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class XO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=YO(t,n),s=JO(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=ZO(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===dD.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===dD.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===dD.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===dD.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===dD.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=YO(n,r),a=JO(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=ZO(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Xu().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ZO(e,t,n,r,s){const a=function(e,t){switch(e){case dD.PACKED_2X2_FLOAT32:return QD(t);case dD.PACKED_2X2_FLOAT16:return eO(t);case dD.UNPACKED_FLOAT32:return ZD(t);case dD.UNPACKED_FLOAT16:return YD(t);case dD.PACKED_4X1_UNSIGNED_BYTE:return JD(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=mD(e[0],e[1]);i=t*n}else{const[t,n]=pD(e[0],e[1]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function YO(e,t){if(e===hD.UPLOAD)return dD.PACKED_2X2_FLOAT32;if(e===hD.RENDER||null==e)return function(e){return Xu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?dD.PACKED_2X2_FLOAT32:dD.UNPACKED_FLOAT32:e?dD.PACKED_2X2_FLOAT16:dD.UNPACKED_FLOAT16}(t);if(e===hD.DOWNLOAD||e===hD.PIXELS)return dD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function JO(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class QO{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const eM="return abs(x);",tM="return x;";class nM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class rM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=jO("rc",t),r=dO(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const sM=p.whereImpl,aM={};class iM extends Ql{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Xu().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=uD(Xu().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Xu().getNumber("WEBGL_VERSION"))in aM||(aM[t]={}),aM[t]),this.gpgpu=new tO(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new XO(this.gpgpu),this.numMBBeforeWarning=null==Xu().global.screen?1024:Xu().global.screen.height*Xu().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Jl(this,Rm())}nextDataId(){return iM.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Xu().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Xu().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:hD.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Xu().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:hD.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new nM(o,tM):new QO(o,tM);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=r.now()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=d.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=r.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=a){let t;t=l?new nM(s,tM):new QO(s,tM);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Xu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Xu().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==i&&Xu().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...fD(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=d.mergeRealAndImagArrays(e[0],e[1])}else if(null==h)c=this.getValuesFromTexture(e);else{const e=r.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Rm().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Hf(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!bD(n)){if(Xu().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=r.sizeFromShape(t);if(Xu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...fD(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const i=Xu().getBool("WEBGL_PACK")&&!0===s,o=i?$D(t):t,l=i?new jD(o):new GD(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=r.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=r.sum(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.now(),endMs:null}}endTimer(e){return Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.now(),e)}async getQueryTime(e){return Xu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Xu().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Rm().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Xu().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){d.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return sM(e.shape,t)}packedUnaryOp(e,t,n){const r=new nM(e.shape,t),s=this.compileAndRun(r,[e],n);return Rm().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=LO(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Xu().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,eM,e.dtype);const t=new QO(e.shape,eM),n=this.compileAndRun(t,[e]);return Rm().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const a=n.map(e=>r.encodeString(e));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Rm().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new rM(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new qO(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[_D(e.shape),...TD(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[_D(t),...TD(t)],a=new KO(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=$D(r);let i;return i=n?new HD(a):new UD(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,s,a=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===cD.DENSE){const t=fD(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===r.sizeFromShape(i.shape))return o.values=r.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.sizeFromShape(t.shape)<=Xu().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!AD(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach(e=>{r+=`${e.shape}_${e.isUniform?"uniform":e.texData.texShape}_${null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0}`});let s=e.constructor.name;return s+="_"+r+"_"+e.userCode,s}(e,u,c),d=this.getAndSaveBinary(h,()=>function(e,t,n,r){const s=t.userCode,a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=a.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=rO(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===Xu().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let p=0;p<t.variableNames.length;p++){const n=t.variableNames[p],r=!1;d[n]=e.getUniformLocation(u,n,r),d[`offset${n}`]=e.getUniformLocation(u,`offset${n}`,r)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,s,a){mO(t.inShapeInfos,n),mO([t.outShapeInfo],[s]);const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===Xu().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,s)=>{const a=t.program.variableNames[s],i=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`];if(null!=i)if(n.isUniform)if(r.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,s)}),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Xu().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=r.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Xu().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Xu().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Dm(()=>{if(!Xu().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Xu().getBool("DEBUG");Xu().set("DEBUG",!1);const t=this.abs(Pm(1e-8)).dataSync()[0];if(Xu().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=r.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=Xu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.squeezeShape(e);e=t.newShape}let s=r.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=_D(e);let n=2,a=2;return e.length&&([n,a]=TD(e)),s=t*(n/2)*(a/2),r.sizeToSquarishShape(s).map(e=>2*e)}return r.sizeToSquarishShape(s)}(n,l),t.texShape=h),null!=a){const e=$D(n);let i,o=h[1],d=h[0];const p=a instanceof Uint8Array;l?([o,d]=mD(h[0],h[1]),i=new KD(e,[d,o],p)):i=new qD(e,[d,o],p);const f=this.makeTensorInfo([d,o],s);this.texData.get(f.dataId).usage=p?hD.PIXELS:hD.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,a);const m=this.runWebGLProgram(i,[f],s,null,!0),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=r.now()-c)}else{const e=this.acquireTexture(h,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.bytesPerElement(t)}}iM.nextDataId=0,a.isBrowser()&&Lm("webgl",()=>new iM,2);class oM{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=d.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class lM{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=d.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let i="";if(s)if(0===a||1===r.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${dO(a)} coords = getOutputCoords();\n        `,1===a)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=jO("coords",a);i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function uM(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const cM={kernelName:ch,backendName:"webgl",kernelFunc:uM};function hM(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=uM({inputs:{x:r},backend:n}),l=uM({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const dM={kernelName:Nc,backendName:"webgl",kernelFunc:hM},pM="return (a < 0.) ? b * a : a;",fM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",mM={kernelName:gh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.createScalarValue(i,"float32")),l=Xu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lM(fM,a.shape,o.shape):new oM(pM,a.shape,o.shape),u=n.runWebGLProgram(l,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),u}},gM="return (a < 0.) ? b * a : a;",yM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",bM={kernelName:Yh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Xu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lM(yM,r.shape,s.shape):new oM(gM,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function xM({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Xu().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new nM(i.shape,t):new QO(i.shape,e),o.runWebGLProgram(u,[i],l)}}function vM({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new oM(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],_p(n.dtype,r.dtype))}),a=hM({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||_p(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let d;return d=Xu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new lM(t,l.shape,u.shape,n):new oM(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function wM(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?yM:gM;if("leakyrelu"===e)return t?fM:pM;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class kM{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class IM{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=d.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const NM="return a * b;";function CM(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=d.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new IM("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new IM("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=hM({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=RO(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Xu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lM(NM,r.shape,s.shape):new oM(NM,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const SM={kernelName:Bh,backendName:"webgl",kernelFunc:CM};function _M(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,l=r.sizeFromShape(a.shape),u=r.inferFromImplicitShape(i,l),c=r.sizeFromShape(u);r.assert(l===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const h=o.texData.get(a.dataId);return!h.isPacked||AD(a.shape,u)||null!==h.texture&&AD(h.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[_D(e.shape),...TD(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[_D(t),...TD(t)],i=new KO(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,o)}const TM={kernelName:rd,backendName:"webgl",kernelFunc:_M};class $M{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${r.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class EM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function AM(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=d.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new $M({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new $M({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new EM({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class RM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=dO(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class FM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=dO(this.rank),s=GO("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function DM(e,t,n){const r=Xu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FM(e.shape,t):new RM(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function OM(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=e.shape.length,i=r.parseAxisParam(t,e.shape);let o=i;const l=d.getAxesPermutation(o,a),u=null!=l;let c=e;u&&(c=DM(e,l,s),o=d.getInnerMostAxes(o.length,a)),d.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=d.computeOutAndReduceShapes(c.shape,o);let f=h;n&&(f=d.expandShapeToKeepDim(h,i));const m=r.sizeFromShape(p),g=_M({inputs:{x:c},attrs:{shape:[r.sizeFromShape(e.shape)/m,m]},backend:s}),y=AM(g,Tp(e.dtype),"sum",s),b=_M({inputs:{x:y},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(c),b}(a,i,o,n)}const MM={kernelName:kd,backendName:"webgl",kernelFunc:OM};function LM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=new Array(s.shape.length);for(let u=0;u<o.length;u++)o[u]=s.shape[a[u]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId),t=UO(e.values,s.shape,s.dtype,a,o);l=i.makeTensorInfo(o,s.dtype),i.texData.get(l.dataId).values=t}else l=DM(s,a,i);return l}const zM={kernelName:Od,backendName:"webgl",kernelFunc:LM};function PM({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}){const c=e.shape.length,h=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=r.sizeFromShape(g),x=r.sizeFromShape(y);r.assert(c>=2&&h>=2&&(b===x||1===b||1===x),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`);const v=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);const w=n?[b,d,f]:[b,f,d],k=s?[x,m,p]:[x,p,m],I=_M({inputs:{x:e},backend:a,attrs:{shape:w}}),N=_M({inputs:{x:t},backend:a,attrs:{shape:k}}),C=[I,N],S=Math.max(b,x),_=n?I.shape[1]:I.shape[2],T=null!=i,$=null!=o,E="leakyrelu"===u,A=null!=u?wM(u,!0):null;let R;if((1===f||1===m)&&_>1e3&&!1===(T||$||E||null!=A)){let e=I,t=N;n&&(e=LM({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),s&&(t=LM({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));const r=1===m;let i=e;1!==m&&(i=_M({inputs:{x:e},backend:a,attrs:{shape:[S,_,1]}}),C.push(i));const o=1===m?2:1;let l=t;r&&(l=_M({inputs:{x:t},backend:a,attrs:{shape:[S,1,_]}}),C.push(l));const u=CM({inputs:{a:i,b:l},backend:a});R=OM({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(u)}else{const u=_p(e.dtype,t.dtype),c=new kM(w,k,[S,f,m],n,s,T,A,$,E),h=[I,N];if(null!=i&&h.push(i),$&&h.push(o),E){const e=a.makeTensorInfo([],"float32",r.createScalarValue(l,"float32"));h.push(e),C.push(e)}R=a.runWebGLProgram(c,h,u)}const F=_M({inputs:{x:R},backend:a,attrs:{shape:v}});C.push(R);for(const r of C)a.disposeIntermediateTensorInfo(r);return F}const BM={kernelName:Ud,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return PM({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},VM="return abs(x);",WM={kernelName:ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=LO(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Xu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new nM(r.shape,VM):new QO(r.shape,VM),n.runWebGLProgram(s,[r],r.dtype)}},UM=xM({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),HM={kernelName:tc,backendName:"webgl",kernelFunc:UM},GM=xM({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),jM={kernelName:nc,backendName:"webgl",kernelFunc:GM},qM="return a + b;",KM=vM({opSnippet:qM,packedOpSnippet:qM,supportsComplex:!0,cpuKernelImpl:gO}),XM={kernelName:rc,backendName:"webgl",kernelFunc:KM};class ZM{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class YM{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const JM={kernelName:sc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return uM({inputs:{x:s[0]},backend:r});if(s.length>Xu().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map(e=>e.dtype).reduce((e,t)=>_p(e,t)),i=s.map(e=>e.shape),o=Xu().getBool("WEBGL_PACK")?new YM(s[0].shape,i):new ZM(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},QM={kernelName:ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l);let p=a;null!=h&&(p=LM({inputs:{x:a},backend:n,attrs:{perm:h}}),c=d.getInnerMostAxes(c.length,l)),d.assertAxesAreInnerMostDims("all",c,l);const[f,m]=d.computeOutAndReduceShapes(p.shape,c),g=_M({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=AM(g,g.dtype,"all",n);let b;return b=_M(o?{inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),b}},eL={kernelName:ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l);let p=a;null!=h&&(p=LM({inputs:{x:a},backend:n,attrs:{perm:h}}),c=d.getInnerMostAxes(c.length,l)),d.assertAxesAreInnerMostDims("any",c,l);const[f,m]=d.computeOutAndReduceShapes(p.shape,c),g=_M({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=AM(g,g.dtype,"any",n);let b;return b=_M(o?{inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),b}};class tL{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class nL{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=dO(o),u=jO("coords",o);let c,h;if(1===a){h=o+1;const e=dO(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(e=>"int "+e),m=jO("sourceLocR",h-1).concat("inIdx.r"),g=jO("sourceLocG",h-1).concat("inIdx.g"),y=jO("sourceLocB",h-1).concat("inIdx.b"),b=jO("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function rL(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=d.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new tL(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=rL(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function sL(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=d.computeOptimalWindowSize(s[s.length-1]),i=new nL(s,a,n,null==r),o=e.runWebGLProgram(i,null==r?[t]:[t,r],"int32");if(o.shape.length===t.shape.length){const r=sL(e,t,n,o);return e.disposeIntermediateTensorInfo(o),r}return o}function aL(e,t,n,s){const a=[n];if(d.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!Xu().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,o]=d.computeOutAndReduceShapes(t.shape,a),l=r.sizeFromShape(o),u=_M({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});n.push(u);const c=rL(e,u,s);n.push(c);const h=_M({inputs:{x:c},backend:e,attrs:{shape:i}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return sL(e,t,s)}const iL={kernelName:oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=LM({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),d.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const h=aL(n,u,o[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},oL={kernelName:lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.parseAxisParam(i,a.shape);const l=d.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=LM({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=d.getInnerMostAxes(o.length,u.shape.length)),d.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const h=aL(n,u,o[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},lL=xM({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),uL={kernelName:uc,backendName:"webgl",kernelFunc:lL},cL=xM({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),hL={kernelName:cc,backendName:"webgl",kernelFunc:cL},dL=xM({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),pL={kernelName:hc,backendName:"webgl",kernelFunc:dL},fL=vM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),mL={kernelName:pc,backendName:"webgl",kernelFunc:fL},gL=xM({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),yL={kernelName:dc,backendName:"webgl",kernelFunc:gL};class bL{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / count");const y=4*Math.floor(a/4),b=a%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class xL{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const vL={kernelName:fc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;LD(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return uM({inputs:{x:a},backend:n});const h=new bL(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},wL={kernelName:gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=d.computePool3DInfo(s.shape,a,i,[1,1,1],o,l,u),h=new xL(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class kL{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IL{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const NL={kernelName:yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=d.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new IL(h);return n.runWebGLProgram(p,[s],i.dtype)}},CL={kernelName:mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;LD([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=d.computePool2DInfo(i.shape,o,l,1,u),h=new kL(c);return n.runWebGLProgram(h,[s],i.dtype)}},SL={kernelName:bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return PM({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class _L{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],d.assertAndGetBroadcastShape(e,t),d.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(d.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(d.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class TL{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],d.assertAndGetBroadcastShape(e,t),d.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(d.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(d.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const $L={kernelName:ah,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:l}=e;r.assert(a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==l||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=Xu().getBool("WEBGL_PACK_NORMALIZATION")?new TL(s.shape,a.shape,i.shape,h,d,u):new _L(s.shape,a.shape,i.shape,h,d,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class EL{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=dO(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return AL.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${AL[t]} = start[${t}] + coords.${AL[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const AL=["x","y","z","w","u","v"];class RL{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=dO(this.rank),n=jO("coords",this.rank),r=jO("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function FL(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[u,c]=l.parseSliceParams(a,i,o);if(l.assertParamsValid(a,u,c),0===r.sizeFromShape(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=zO(e.values,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,t)}const{isPacked:h}=n.texData.get(a.dataId),d=l.isSliceContinous(a.shape,u,c);if(h||!d){const e=Xu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RL(c):new EL(c),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=l.computeFlatOffset(t,r.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const c=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,c+1),i}(a,u,c,n)}const DL={kernelName:md,backendName:"webgl",kernelFunc:FL},OL={kernelName:xc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=i.reduce((e,t)=>e*t),u=d.getReshaped(a.shape,i,l),c=d.getPermuted(u.length,i.length),h=d.getReshapedPermuted(a.shape,i,l),p=d.getSliceBeginCoords(o,i.length),f=d.getSliceSize(h,o,i.length),m=[],g=_M({inputs:{x:a},backend:n,attrs:{shape:u}}),y=LM({inputs:{x:g},backend:n,attrs:{perm:c}}),b=_M({inputs:{x:y},backend:n,attrs:{shape:h}}),x=FL({inputs:{x:b},backend:n,attrs:{begin:p,size:f}});return m.push(g),m.push(y),m.push(b),m.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},ML={kernelName:vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=yO(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},LL=vM({opSnippet:"return float(a != b);",dtype:"bool"}),zL={kernelName:Wh,backendName:"webgl",kernelFunc:LL};function PL(e){const{inputs:t,backend:n}=e,{input:r}=t;return uM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const BL={kernelName:ed,backendName:"webgl",kernelFunc:PL},VL={kernelName:wc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return uM({inputs:{x:i},backend:s});const t=py(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),r=hM({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const t=PL({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.hasEncodingLoss(i.dtype,o)){const e=uM({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new QO(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.getTypedArrayFromDType("bool",1)),t=LL({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},WL="return ceil(x);",UL=xM({opSnippet:WL,packedOpSnippet:WL,cpuKernelImpl:xO}),HL={kernelName:kc,backendName:"webgl",kernelFunc:UL};class GL{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class jL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const qL={kernelName:Ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Xu().getBool("WEBGL_PACK_CLIP")?new jL(s.shape):new GL(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class KL{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function XL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const ZL={kernelName:Cc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new KL(r.shape),i=[XL(r,s.complexTensorInfos.real),XL(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class YL{constructor(e){this.outputShape=[],this.outputShape=d.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class JL{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=d.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=dO(r),a=jO("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let d=1;d<o.length;d++)o[d]=o[d-1]+e[d][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let d=1;d<o.length;d++){const e=o[d-1];h+=`\n        if (${l} < ${o[d]}  && ${l} >= ${o[d-1]}) {\n          return getChannel(\n            getT${d}(${QL(i,l,e)}),\n            vec2(${QL(u,l,e)}));\n        }`}const p=o[o.length-1];h+=`\n        return getChannel(\n          getT${o.length}(${QL(i,l,p)}),\n          vec2(${QL(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function QL(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function ez(e){const{inputs:t,backend:n}=e,{input:r}=t;return uM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const tz={kernelName:dh,backendName:"webgl",kernelFunc:ez};function nz(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>PL({inputs:{input:e},backend:n})),s=e.map(e=>ez({inputs:{input:e},backend:n})),a=nz(r,t,n),i=nz(s,t,n),o=hM({inputs:{real:a,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:s,outShape:a}=rz(e,t,n),i=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),o=vO(i,a,r,1===s[0].shape[0]),l=d.computeOutShape(e.map(e=>e.shape),t),u=n.makeTensorInfo(l,r,o);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}if(e.length>Xu().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=nz(e.slice(0,r),t,n),a=nz(e.slice(r),t,n),i=nz([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(Xu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new JL(e.map(e=>e.shape),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:s,outShape:a}=rz(e,t,n),i=new YL(s.map(e=>e.shape)),o=n.runWebGLProgram(i,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=_M({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function rz(e,t,n){const s=d.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>_M({inputs:{x:e},attrs:{shape:[-1,r.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:s}}function sz(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.parseAxisParam(a,t[0].shape)[0],o=d.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===l.length)return uM({inputs:{x:l[0]},backend:n});const u=l.map(e=>e.shape);return d.assertParamsConsistent(u,i),nz(l,i,n)}const az={kernelName:Sc,backendName:"webgl",kernelFunc:sz};class iz{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class oz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lz{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=PD(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function uz({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape,c=s.texData.get(e.dataId),h="channelsLast"===n.dataFormat;let d;const p=[],f=u[2]%2!=0&&!!c.isPacked;if((1!=u[0]*u[1]*u[2]&&1!==n.outChannels||!(n.inChannels>1e3))&&Xu().getBool("WEBGL_LAZILY_UNPACK")&&Xu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&f){const f={dataId:e.dataId,shape:[1,h?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),n.inChannels],dtype:e.dtype},m=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.assert(AD(c.shape,f.shape),()=>`packed reshape ${c.shape} to ${f.shape} isn't free`);const g=_M({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});p.push(g);const y=PM({a:f,b:g,backend:s,transposeA:!1,transposeB:!1,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),b=s.texData.get(y.dataId);r.assert(b.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=m,b.shape=n.outShape,d=uM({inputs:{x:y},backend:s}),d.shape=n.outShape,p.push(y)}else{const r=_M({inputs:{x:e},backend:s,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=_M({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=PM({a:r,b:c,transposeA:!1,transposeB:!1,backend:s,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});d=_M({inputs:{x:f},backend:s,attrs:{shape:n.outShape}}),p.push(r),p.push(c),p.push(f)}for(const r of p)s.disposeIntermediateTensorInfo(r);return d}function cz({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=u*c*h,y=p*d,b=[g,y],x=[],v=_M({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),w=_M({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const k=new lz(b,v.shape,n),I=s.runWebGLProgram(k,[v],"float32"),N=_M({inputs:{x:I},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(N);const C=null!=a,S=null!=i,_="leakyrelu"===l,T=l?wM(l,!0):null,$=new kM(N.shape,w.shape,[1,y,n.outChannels],!0,!1,C,T,S,_),E=[N,w];if(a&&E.push(a),S&&E.push(i),_){const e=s.makeTensorInfo([],"float32",r.createScalarValue(o,"float32"));E.push(e),x.push(e)}const A=s.runWebGLProgram($,E,"float32"),R=_M({inputs:{x:A},backend:s,attrs:{shape:m?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});x.push(A);for(const r of x)s.disposeIntermediateTensorInfo(r);return R}const hz={kernelName:_c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=d.convertConv2DDataFormat(l),p=d.computeConv2DInfo(s.shape,a.shape,i,u,o,c,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Xu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=cz({x:s,filter:a,convInfo:p,backend:n});else{const e=new iz(p);f=n.runWebGLProgram(e,[s,a],"float32")}else f=uz({x:s,filter:a,convInfo:p,backend:n});const m=_M({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class dz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gz={kernelName:Tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=d.convertConv2DDataFormat(l),p=d.computeConv2DInfo(s.shape,c,i,1,o,u,!1,h),f=new dz(p);return n.runWebGLProgram(f,[s,a],"float32")}},yz={kernelName:$c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=d.convertConv2DDataFormat(u),p=d.computeConv2DInfo(i,a.shape,o,1,l,c,!1,h),f=new pz(p);return n.runWebGLProgram(f,[s,a],"float32")}},bz={kernelName:Ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=d.computeConv3DInfo(s.shape,a.shape,i,l,o),c=new oz(u);return n.runWebGLProgram(c,[s,a],"float32")}},xz={kernelName:Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=d.computeConv3DInfo(s.shape,l,i,1,o),c=new fz(u);return n.runWebGLProgram(c,[s,a],"float32")}},vz={kernelName:Rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=d.computeConv3DInfo(l,a.shape,o,1,i),c=new mz(u);return n.runWebGLProgram(c,[s,a],"float32")}},wz=xM({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),kz={kernelName:Fc,backendName:"webgl",kernelFunc:wz},Iz=xM({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Nz={kernelName:Dc,backendName:"webgl",kernelFunc:Iz};class Cz{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Sz={kernelName:Mc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Cz(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class _z{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${Tz(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${dO(r)} coords = getOutputCoords();\n        int end = ${$z(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${$z(r,"coords")} = idx;\n          val += getX(${Tz(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function Tz(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function $z(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Ez={kernelName:Oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=d.getAxesPermutation([a],l);let c=s;null!=u&&(c=LM({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=d.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const p=c.shape[h];let f=uM({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(p))-1;d++){const e=new _z(c.shape,!1,o),t=e.getCustomSetupFunc(d),r=f;f=n.runWebGLProgram(e,[f],f.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new _z(c.shape,i,o),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=LM({inputs:{x:f},backend:n,attrs:{perm:d.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(c),e}return f}},Az={kernelName:Lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=yO(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=bO(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class Rz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Fz={kernelName:zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.assert(i>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`);const l=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*i,c=("NHWC"===o?a.shape[2]:a.shape[3])*i,h=("NHWC"===o?a.shape[3]:a.shape[1])/(i*i),d=new Rz("NHWC"===o?[l,u,c,h]:[l,h,u,c],i,o);return n.runWebGLProgram(d,[a],a.dtype)}};class Dz{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Oz{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.inHeight,o=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let r=0;r<f;r++)for(let e=0;e<m;e++)y+=`\n          vec4 xTexelR${r}C${2*e} = vec4(0.);\n          vec4 wR${r}C${e} = vec4(0.);\n          vec4 xR${r}C${e} = vec4(0.);`;for(let w=0;w<f;w++)for(let e=0;e<g;e++){const t=2*e;if(y+=`\n          xR = xRCorner + ${w*d};\n          xC = xCCorner + ${t*p};\n        `,1===h){if(t<m&&(y+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${w}C${t}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${w}C${t} = vec4(previous.zw, xTexelR${w}C${t}.xy);\n                } else {\n                  xR${w}C${t} = vec4(0, 0, xTexelR${w}C${t}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xR${w}C${t} = xTexelR${w}C${t};\n              `,t+1<m)){const e=u%2==0?r.nearestLargerEven(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(y+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${i} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${w}C${t} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${w}C${t+1} = xTexelR${w}C${t+2};\n                `}}else t<m&&(y+=`\n              if(xR >= 0 && xR < ${i}) {\n            `,u%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n              `,t+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${w}C${t+1} = vec4(xTexelR${w}C${t+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${w}C${t} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${t} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${w}C${t+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${t+2} = vec4(0.);\n                }\n\n                xR${w}C${t} = vec4(\n                  xTexelR${w}C${t}.xy, xTexelR${w}C${t+2}.xy);\n              `,t+1<m&&(y+=`\n                  xR${w}C${t+1} = vec4(\n                    xTexelR${w}C${t}.zw, xTexelR${w}C${t+2}.zw);\n                `)),y+="}");t<m&&(y+=`\n            vec4 wTexelR${w}C${t} = getW(${w}, ${t}, d1, q);\n            wR${w}C${t} = vec4(wTexelR${w}C${t}.xz, wTexelR${w}C${t}.xz);\n          `,t+1<m&&(y+=`\n              vec4 wTexelR${w}C${t+1} = getW(${w}, ${t+1}, d1, q);\n              wR${w}C${t+1} =\n                vec4(wTexelR${w}C${t+1}.xz, wTexelR${w}C${t+1}.xz);`))}for(let r=0;r<f;r++)for(let e=0;e<m;e++)y+=`dotProd += xR${r}C${e} * wR${r}C${e};`;let b="",x="";n&&(b=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const Mz={kernelName:Pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;let h=u;null==h&&(h=[1,1]),r.assert(d.eitherStridesOrDilationsAreOne(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);const p=d.computeConv2DInfo(a.shape,i.shape,o,h,l,c,!0);let f;return f=Xu().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Oz(p):new Dz(p),n.runWebGLProgram(f,[a,i],"float32")}};class Lz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Pz={kernelName:Bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=d.computeConv2DInfo(s.shape,c,i,o,l,u,!0),p=new Lz(h);return n.runWebGLProgram(p,[s,a],"float32")}},Bz={kernelName:Vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=d.computeConv2DInfo(c,a.shape,i,o,l,u,!0),p=new zz(h);return n.runWebGLProgram(p,[s,a],"float32")}};class Vz{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Wz={kernelName:Wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.sizeFromShape(s.shape),o=_M({inputs:{x:s},backend:n,attrs:{shape:[i]}}),l=new Vz(i),u=n.runWebGLProgram(l,[o],o.dtype),c=_M({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class Uz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Hz={kernelName:Uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=d.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new Uz(u);c=n.runWebGLProgram(h,[s,a],"float32");const p=_M({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},Gz=xM({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),jz={kernelName:qc,backendName:"webgl",kernelFunc:Gz},qz={kernelName:Kc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Xu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lM("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new oM("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},Kz=vM({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Xz={kernelName:Zc,backendName:"webgl",kernelFunc:Kz},Zz=xM({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${d.ERF_P};\n  float a1 = ${d.ERF_A1};\n  float a2 = ${d.ERF_A2};\n  float a3 = ${d.ERF_A3};\n  float a4 = ${d.ERF_A4};\n  float a5 = ${d.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Yz={kernelName:Xc,backendName:"webgl",kernelFunc:Zz},Jz="return exp(x);",Qz=xM({opSnippet:Jz,packedOpSnippet:Jz,cpuKernelImpl:wO}),eP={kernelName:Yc,backendName:"webgl",kernelFunc:Qz};function tP(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=a;return a<0&&(r.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),l.splice(u,0,1),_M({inputs:{x:i},backend:s,attrs:{shape:l}})}const nP={kernelName:Jc,backendName:"webgl",kernelFunc:tP},rP="return exp(x) - 1.0;",sP=xM({opSnippet:rP,packedOpSnippet:rP,cpuKernelImpl:kO}),aP={kernelName:Qc,backendName:"webgl",kernelFunc:sP};class iP{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function oP(e,t,n){const s=n.texData.get(e.dataId),a=r.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=_M({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),l=o.shape,u=new iP("real",l,t),c=new iP("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=hM({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=_M({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const lP={kernelName:eh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return oP(r,!1,n)}};class uP{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function cP(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.inferDtype(a),"string"===i){const e=r.getArrayFromDType(i,r.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new uP(s,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],i,n)}}const hP={kernelName:th,backendName:"webgl",kernelFunc:cP};class dP{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const pP={kernelName:nh,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new dP(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},fP="return floor(x);",mP=xM({opSnippet:fP,packedOpSnippet:fP,cpuKernelImpl:IO}),gP={kernelName:rh,backendName:"webgl",kernelFunc:mP},yP=vM({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),bP={kernelName:sh,backendName:"webgl",kernelFunc:yP};class xP{constructor(e){this.variableNames=["A"];const t=PD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class vP{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=PD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const wP={kernelName:Vd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&s instanceof ImageBitmap,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,a];(o||i||l)&&(null==kP&&(kP=document.createElement("canvas").getContext("2d")),kP.canvas.width=u,kP.canvas.height=c,kP.drawImage(s,0,0,u,c),s=kP.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=hD.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=Xu().getBool("WEBGL_PACK")?new vP(d):new xP(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let kP;const IP={kernelName:Hd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=s,y=d.convertConv2DDataFormat(h),b=d.computeConv2DInfo(a.shape,i.shape,u,p,c,f,!1,y);let x;const v=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(Xu().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])x=cz({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:m,preluActivationWeights:l,leakyreluAlpha:g});else{const e=null!=o,t=null!=l,s="leakyrelu"===m,u=m?wM(m,!1):null,c=new iz(b,e,u,t,s),h=[a,i];if(o&&h.push(o),l&&h.push(l),s){const e=n.makeTensorInfo([],"float32",r.createScalarValue(g,"float32"));h.push(e),v.push(e)}x=n.runWebGLProgram(c,h,"float32")}else x=uz({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:m,preluActivationWeights:l,leakyreluAlpha:g});const w=_M({inputs:{x:x},backend:n,attrs:{shape:b.outShape}});return v.push(x),v.forEach(e=>n.disposeIntermediateTensorInfo(e)),w}},NP={kernelName:Gd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=s,g=[];let y=h;null==y&&(y=[1,1]),r.assert(d.eitherStridesOrDilationsAreOne(u,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${y}'`);const b=d.computeConv2DInfo(a.shape,i.shape,u,y,c,p,!0),x=Xu().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,v=f?wM(f,x):null,w=[a,i],k=null!=o,I=null!=l,N="leakyrelu"===f;if(k&&w.push(o),I&&w.push(l),N){const e=n.makeTensorInfo([],"float32",r.createScalarValue(m,"float32"));w.push(e),g.push(e)}let C;C=x?new Oz(b,k,v,I,N):new Dz(b,k,v,I,N);const S=n.runWebGLProgram(C,w,"float32");return g.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}};class CP{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=dO(t.length),s=dO(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const SP={kernelName:oh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],[l,u,c,h]=d.prepareAndValidate(s,a),p=_M({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=_M({inputs:{x:s},backend:n,attrs:{shape:[r.sizeFromShape(s.shape)/c,c]}}),m=new CP(o,h,[u,c]),g=n.runWebGLProgram(m,[f,p],f.dtype),y=_M({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class _P{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=dO(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)r.push(2===s?"int(getIndices(resRC.x, resRC.z))":`${n[s]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const TP={kernelName:ih,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s,u=r.parseAxisParam(o,a.shape)[0],c=d.segment_util.collectGatherOpShapeInfo(a,i,u,l),h=r.sizeFromShape(i.shape),p=[],f=_M({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=_M({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(f),p.push(m);const g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),r=NO(t,e,g);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const y=new _P(f.shape,g),b=n.runWebGLProgram(y,[f,m],f.dtype);p.push(b);const x=_M({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},$P=vM({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:CO,dtype:"bool"}),EP={kernelName:lh,backendName:"webgl",kernelFunc:$P},AP=vM({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),RP={kernelName:uh,backendName:"webgl",kernelFunc:AP},FP={kernelName:hh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return oP(r,!0,n)}},DP=xM({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),OP={kernelName:ph,backendName:"webgl",kernelFunc:DP},MP=xM({opSnippet:"return float(isinf(x));",dtype:"bool"}),LP={kernelName:fh,backendName:"webgl",kernelFunc:MP},zP=xM({opSnippet:"return float(isnan(x));",dtype:"bool"}),PP={kernelName:mh,backendName:"webgl",kernelFunc:zP},BP=vM({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:SO,dtype:"bool"}),VP={kernelName:yh,backendName:"webgl",kernelFunc:BP},WP=vM({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),UP={kernelName:bh,backendName:"webgl",kernelFunc:WP},HP={kernelName:xh,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=_O(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},GP=xM({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:TO}),jP={kernelName:vh,backendName:"webgl",kernelFunc:GP},qP=xM({opSnippet:"return log(1.0 + x);"}),KP={kernelName:wh,backendName:"webgl",kernelFunc:qP},XP=vM({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ZP={kernelName:kh,backendName:"webgl",kernelFunc:XP},YP=xM({opSnippet:"return float(!(x >= 1.0));"}),JP={kernelName:Ih,backendName:"webgl",kernelFunc:YP},QP=vM({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),eB={kernelName:Nh,backendName:"webgl",kernelFunc:QP};class tB{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class nB{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const rB={kernelName:Ch,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=Xu().getBool("WEBGL_PACK_NORMALIZATION")?new nB(s.shape,a,i,o,l):new tB(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class sB{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const aB={kernelName:Sh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new sB(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function iB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l),p=null!=h,f=n.shouldExecuteOnCPU([a]);let m=a;if(p){if(f){const e=n.texData.get(m.dataId).values,t=new Array(l);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];const r=UO(e,a.shape,a.dtype,h,t);m=n.makeTensorInfo(t,a.dtype),n.texData.get(m.dataId).values=r}else m=DM(a,h,n);c=d.getInnerMostAxes(c.length,l)}d.assertAxesAreInnerMostDims("max",c,l);const[g,y]=d.computeOutAndReduceShapes(m.shape,c);let b,x=g;if(o&&(x=d.expandShapeToKeepDim(g,u)),f){const e=n.texData.get(m.dataId),t=$O(e.values,r.sizeFromShape(y),x,a.dtype);b=n.makeTensorInfo(x,a.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,s){const a=r.sizeFromShape(t),i=_M({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/a,a]},backend:s}),o=AM(i,e.dtype,"max",s),l=_M({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(m,y,x,n);return p&&n.disposeIntermediateTensorInfo(m),b}const oB={kernelName:_h,backendName:"webgl",kernelFunc:iB},lB=vM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:EO}),uB={kernelName:Th,backendName:"webgl",kernelFunc:lB},cB={kernelName:$h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;LD(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(d.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=d.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return uM({inputs:{x:a},backend:n});const h=new bL(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},hB={kernelName:Ah,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=d.computePool3DInfo(s.shape,a,i,[1,1,1],o,u,l),h=new xL(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class dB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fB={kernelName:Rh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=d.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new xL(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new pB(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},mB={kernelName:Eh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;LD([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=d.computePool2DInfo(o.shape,l,u,1,c,h),f=new bL(p,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),g=new dB(p),y=n.runWebGLProgram(g,[s,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}},gB={kernelName:Fh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;r.assert(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];r.assert(d.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=d.computePool2DInfo(s.shape,a,i,c,o),[p,f]=function(e,t,n,r){let s=new bL(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new bL(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,l,h,u);return[p,f]}},yB={kernelName:Dh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,l=s.shape.length,u=r.parseAxisParam(i,s.shape);let c=u;const h=d.getAxesPermutation(c,l),p=null!=h,f=o.shouldExecuteOnCPU([s]),m=[];let g=s;if(p){if(f){const e=o.texData.get(g.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=UO(e,s.shape,s.dtype,h,t);g=o.makeTensorInfo(t,s.dtype),o.texData.get(g.dataId).values=n}else g=DM(s,h,o);m.push(g),c=d.getInnerMostAxes(c.length,l)}d.assertAxesAreInnerMostDims("sum",c,l);const[y,b]=d.computeOutAndReduceShapes(g.shape,c);let x=y;a&&(x=d.expandShapeToKeepDim(y,u));const v=function(e,t,n,s){const a=r.sizeFromShape(t),i=_M({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/a,a]},backend:s}),o=AM(i,"float32","mean",s),l=_M({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(g,b,x,o);for(const r of m)o.disposeIntermediateTensorInfo(r);return v}},bB={kernelName:Oh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=d.getAxesPermutation(c,l);let p=a;null!=h&&(p=LM({inputs:{x:a},backend:n,attrs:{perm:h}}),c=d.getInnerMostAxes(c.length,a.shape.length)),d.assertAxesAreInnerMostDims("min",c,l);const[f,m]=d.computeOutAndReduceShapes(p.shape,c),g=_M({inputs:{x:p},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=AM(g,g.dtype,"min",n);let b;return b=_M(o?{inputs:{x:y},backend:n,attrs:{shape:d.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(p),b}},xB=vM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:AO}),vB={kernelName:Mh,backendName:"webgl",kernelFunc:xB};class wB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=dO(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class kB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=dO(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=jO("rc",r),l=jO("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const IB={kernelName:Lh,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Xu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kB(r.shape,s,a):new wB(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},NB=vM({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),CB={kernelName:zh,backendName:"webgl",kernelFunc:NB};class SB{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const _B=vM({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),TB={kernelName:jc,backendName:"webgl",kernelFunc:_B},$B="return a - b;",EB=vM({opSnippet:$B,packedOpSnippet:$B,supportsComplex:!0,cpuKernelImpl:BO}),AB={kernelName:Td,backendName:"webgl",kernelFunc:EB};function RB(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.parseAxisParam([i],a.shape),l=iB({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=d.expandShapeToKeepDim(l.shape,o),c=_M({inputs:{x:l},backend:n,attrs:{shape:u}}),h=EB({inputs:{a:a,b:c},backend:n}),p=Qz({inputs:{x:h},backend:n}),f=OM({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),m=_M({inputs:{x:f},backend:n,attrs:{shape:u}}),g=_B({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const FB={kernelName:Cd,backendName:"webgl",kernelFunc:RB},DB={kernelName:Ph,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:RB({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=new SB(l.shape[0],l.shape[1],a),c=u.getCustomSetupFunc(i),h=n.runWebGLProgram(u,[l],"int32",c);return o||n.disposeIntermediateTensorInfo(l),h}},OB="return -x;",MB={kernelName:Vh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=FO(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Xu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new nM(r.shape,OB):new QO(r.shape,OB),n.runWebGLProgram(s,[r],r.dtype)}},LB=p.nonMaxSuppressionV3Impl,zB={kernelName:Uh,backendName:"webgl",kernelFunc:function(e){d.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=LB(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},PB=p.nonMaxSuppressionV4Impl,BB={kernelName:Hh,backendName:"webgl",kernelFunc:function(e){d.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=PB(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},VB=p.nonMaxSuppressionV5Impl,WB={kernelName:Gh,backendName:"webgl",kernelFunc:function(e){d.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,f=o,m=l,g=u,{selectedIndices:y,selectedScores:b}=VB(c,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class UB{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const HB={kernelName:qh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s,u=r.sizeFromShape(a.shape),c=new UB(u,i,o,l),h=_M({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const p=_M({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function GB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=PL({inputs:{input:r},backend:n}),t=GB({inputs:{x:e},backend:n}),s=ez({inputs:{input:r},backend:n}),a=GB({inputs:{x:s},backend:n}),i=hM({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return cP({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const jB={kernelName:Pd,backendName:"webgl",kernelFunc:GB},qB={kernelName:jh,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=PL({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ez({inputs:{input:s},backend:r}),i=GB({inputs:{x:a},backend:r}),o=hM({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return cP({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},KB={kernelName:Kh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return tP({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=sz({inputs:t.map(e=>{const t=tP({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t}),backend:n,attrs:{axis:a}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class XB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=dO(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ZB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=dO(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=jO("rc",r),l=jO("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const YB=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=Xu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZB(s.shape,a,i):new XB(s.shape,a,i);return n.runWebGLProgram(o,[s],s.dtype)},JB={kernelName:Xh,backendName:"webgl",kernelFunc:YB},QB=vM({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),eV={kernelName:Zh,backendName:"webgl",kernelFunc:QB},tV={kernelName:Jh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=[],c=r.parseAxisParam(i,a.shape);let h=c;const p=d.getAxesPermutation(h,l);let f,m=a;if(null!=p&&(m=LM({inputs:{x:a},backend:n,attrs:{perm:p}}),h=d.getInnerMostAxes(h.length,l),u.push(m)),d.assertAxesAreInnerMostDims("prod",h,l),n.shouldExecuteOnCPU([m])){const e=n.texData.get(m.dataId).values,{outVals:t,outShape:r,outDtype:s}=DO(m.shape,m.dtype,e,h);f=n.makeTensorInfo(r,s,t)}else{const[e,t]=d.computeOutAndReduceShapes(m.shape,h),s=r.sizeFromShape(t),i=_M({inputs:{x:m},backend:n,attrs:{shape:[-1,s]}}),o=AM(i,Tp(a.dtype),"prod",n);f=_M({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(f);const e=d.expandShapeToKeepDim(f.shape,c);f=_M({inputs:{x:f},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},nV=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=OO(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},rV={kernelName:Qh,backendName:"webgl",kernelFunc:nV},sV=xM({opSnippet:"return 1.0 / x;"}),aV={kernelName:td,backendName:"webgl",kernelFunc:sV},iV=xM({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),oV={kernelName:nd,backendName:"webgl",kernelFunc:iV},lV=xM({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),uV={kernelName:ld,backendName:"webgl",kernelFunc:lV};class cV{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class hV{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const dV={kernelName:id,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Xu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hV(s.shape,l,u,a,i):new cV(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class pV{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fV={kernelName:od,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new pV(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class mV{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const gV={kernelName:sd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=new mV(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class yV{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const bV={kernelName:ad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new yV(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class xV{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=dO(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class vV{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=jO("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=dO(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const wV={kernelName:ud,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,l=r.parseAxisParam(i,a.shape);if(0===o)return uM({inputs:{x:a},backend:n});const u=Xu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vV(a.shape,l):new xV(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class kV{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[l,u]=d.getImageCenter(r,s,a),c=l.toFixed(3),h=u.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const IV={kernelName:Wd,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new kV(r.shape,s,a,i);return o.runWebGLProgram(l,[r],r.dtype)}},NV=xM({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),CV={kernelName:cd,backendName:"webgl",kernelFunc:NV},SV=xM({opSnippet:"return inversesqrt(x);",cpuKernelImpl:MO}),_V={kernelName:hd,backendName:"webgl",kernelFunc:SV};class TV{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=dO(s.length),l=dO(a.length);let u="";1===n?u="i":2===n&&(u="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${u}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const $V={kernelName:dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=d.calculateShapes(a,s,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=_M({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=_M({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new TV(l,o,f.shape.length,m.shape.length,c,p),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=_M({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class EV{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=dO(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const AV={kernelName:pd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new EV(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],_p(s.dtype,a.dtype))}},RV=xM({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${d.SELU_SCALEALPHA};\n  float scale = ${d.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),FV={kernelName:fd,backendName:"webgl",kernelFunc:RV},DV=xM({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),OV={kernelName:xd,backendName:"webgl",kernelFunc:DV},MV=xM({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),LV={kernelName:bd,backendName:"webgl",kernelFunc:MV},zV=xM({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),PV={kernelName:gd,backendName:"webgl",kernelFunc:zV},BV=xM({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),VV={kernelName:yd,backendName:"webgl",kernelFunc:BV},WV=xM({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),UV={kernelName:vd,backendName:"webgl",kernelFunc:WV},HV={kernelName:Id,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=i.reduce((e,t)=>e*t),u=[[0,0]];u.push(...o);for(let r=1+i.length;r<a.shape.length;++r)u.push([0,0]);const c=[],h=YB({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=d.getReshaped(h.shape,i,l,!1),f=d.getPermuted(p.length,i.length,!1),m=d.getReshapedPermuted(h.shape,i,l,!1),g=_M({inputs:{x:h},backend:n,attrs:{shape:p}}),y=LM({inputs:{x:g},backend:n,attrs:{perm:f}}),b=_M({inputs:{x:y},backend:n,attrs:{shape:m}});return c.push(h),c.push(g),c.push(y),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},GV={kernelName:$d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=d.calculateShapes(a,s,o),p=new TV(u,l,s.shape.length,a.shape.length,c,[h,1],!1),f=n.runWebGLProgram(p,[a,s,i],a.dtype),m=_M({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},jV={kernelName:Nd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.parseAxisParam(o,a.shape)[0],u=d.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[l]=e;const r=FL({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r})}},qV=xM({opSnippet:"return sqrt(x);"}),KV={kernelName:wd,backendName:"webgl",kernelFunc:qV},XV={kernelName:_d,backendName:"webgl",kernelFunc:xM({opSnippet:"return x * x;"})},ZV="return (a - b) * (a - b);",YV=vM({opSnippet:ZV,packedOpSnippet:ZV}),JV={kernelName:Sd,backendName:"webgl",kernelFunc:YV},QV={kernelName:Bd,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=new QO(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(s,[r],r.dtype)}};class eW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=dO(n.length),a=dO(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const tW={kernelName:Ed,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=l.sliceInfo(s.shape,a,i,o,u,c,h,d,p),v=_M({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(f){const e=FL({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=_M({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,s.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId),t=Hf(v.shape,v.dtype,e.values),r=PO(x,t,g,m);w=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new eW(m,g,x);w=n.runWebGLProgram(e,[v],v.dtype)}const k=_M({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},nW=xM({opSnippet:"return tan(x);"}),rW={kernelName:Ad,backendName:"webgl",kernelFunc:nW},sW=xM({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),aW={kernelName:Rd,backendName:"webgl",kernelFunc:sW};class iW{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=dO(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function oW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype){const e=n.readSync(a.dataId).map(e=>r.decodeString(e)),t=Hf(a.shape,a.dtype,e),s=VO(t,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const o=new iW(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const lW={kernelName:Fd,backendName:"webgl",kernelFunc:oW},uW={kernelName:Dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=WO(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},cW={kernelName:Md,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;LD(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=HO(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},hW={kernelName:Ld,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;const e=FL({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=_M({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class dW{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const pW=[rB,aB,BM,WM,HM,jM,XM,JM,QM,eL,iL,oL,uL,hL,mL,pL,yL,wL,vL,NL,CL,SL,$L,OL,ML,VL,HL,qL,ZL,dM,az,gz,yz,hz,xz,vz,bz,kz,Nz,Sz,Ez,Az,Fz,Pz,Bz,Mz,Wz,Hz,jz,qz,Xz,Yz,eP,nP,aP,lP,hP,pP,gP,bP,wP,IP,NP,SP,TP,EP,RP,cM,FP,tz,OP,LP,PP,mM,VP,UP,HP,KP,jP,ZP,JP,eB,oB,hB,cB,fB,mB,gB,uB,yB,bB,vB,IB,CB,DB,SM,MB,zB,BB,WB,zL,HB,qB,KB,JB,eV,bM,tV,rV,BL,TB,aV,uV,oV,TM,dV,fV,gV,bV,wV,IV,CV,_V,$V,AV,FV,OV,LV,PV,VV,DL,FB,UV,HV,GV,jV,KV,XV,JV,QV,tW,AB,MM,rW,aW,lW,uW,zM,cW,hW,{kernelName:zd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,l=a.shape.length,u=[];let c=0;const h=d.getAxesPermutation([c],l);let p=a;null!=h&&(p=LM({inputs:{x:a},backend:n,attrs:{perm:h}}),u.push(p),c=d.getInnerMostAxes(1,l)[0]);const f=d.segment_util.computeOutShape(p.shape,c,o),m=r.sizeFromShape([p.shape[c]]),g=_M({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}});u.push(g);const y=Tp(a.dtype),b=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=d.segment_util.segOpComputeOptimalWindowSize(o,a),c=new dW({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const p=nV({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=oW({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(f),b(h,t,f,s,a)},x=_M({inputs:{x:b(g,"unsortedSegmentSum",i,y,o)},backend:n,attrs:{shape:f}});let v=x;if(null!=h){u.push(x);const e=d.getUndoAxesPermutation(h);v=LM({inputs:{x:v},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},jB];for(const $U of pW)Yd($U);let fW=(()=>{class e{constructor(){this.houseAges=[{fname:"New",userName:"New"},{fname:"Recent",userName:"Recent"},{fname:"20A",userName:"2000-2015"},{fname:"19A",userName:"1975-1999"},{fname:"19B",userName:"1950-1974"},{fname:"19C",userName:"1925-1949"},{fname:"19D",userName:"1900-1924"},{fname:"Pre1900",userName:"Old"}],this.houseTypes=["SFH","Condo","Duplex","Townhouse"],this.houseZipCodes=["60002","60025","60026","60029","60035","60053","60062","60067","60076","60077","60091","60201","60202","60203","60625","60626","60638","63104"],this.houseAgeBands=this.houseAges.map(function(e){return e.userName}),this.loadModel()}loadModel(){return e=this,void 0,n=function*(){var e;this.model=yield(null==e&&(e={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=i.getLoadHandlers(e,t);if(0===n.length)n.push(i.browserHTTPRequest(e,t));else if(n.length>1)throw new Nk(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Nk("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,l=LN(uC(s),void 0,o),u=r.trainingConfig;if(null!=u&&l.loadTrainingConfig(u),null!=r.userDefinedMetadata&&l.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Nk("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=i.decodeWeights(e,t),r={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);l.loadWeights(e,a),null!=l.optimizer&&t.length>0&&await l.optimizer.setWeights(t),Om(e),Om(t.map(e=>e.tensor))}return l}(e,0,t)}("assets/model.json",e)),console.log(this.model.summary())},new((t=void 0)||(t=Promise))(function(r,s){function a(e){try{o(n.next(e))}catch(t){s(t)}}function i(e){try{o(n.throw(e))}catch(t){s(t)}}function o(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(a,i)}o((n=n.apply(e,[])).next())});var e,t,n}getPrice(e){try{return Dm(()=>{var t=this.getFeatureArray(e);console.log(t);var n=Wy(t,[1,38]),r=this.model.predict(n).dataSync()[0];return 1e4*Math.round((r*=1e6)/1e4)}).toString()}catch(t){console.log(t)}}getFeatureArray(e){var t=JSON.parse('{"SFH":0,"Condo":1,"Duplex":2,"Townhouse":3,"New":4,"Recent":5,"20A":6,"19A":7,"19B":8,"19C":9,"19D":10,"Pre1900":11,"Area":12,"Rooms":13,"FullBaths":14,"HalfBaths":15,"BsmtBth":16,"Beds":17,"BsmtBeds":18,"GarageSpaces":19, "60002":20,"60025":21,"60026":22,"60029":23,"60035":24,"60053":25,"60062":26,"60067":27,"60076":28,"60077":29,"60091":30,"60201":31,"60202":32,"60203":33,"60625":34,"60626":35,"60638":36,"63104":37}'),n=Array(38).fill(0);this.setFeature(t,n,e.area,1),this.setFeature(t,n,e.houseType,1),this.setFeature(t,n,"Rooms",e.rooms),this.setFeature(t,n,"Beds",e.bedRooms),this.setFeature(t,n,"BsmtBeds",e.bedRoomsBsmt),this.setFeature(t,n,"FullBaths",e.fullBath),this.setFeature(t,n,"HalfBaths",e.halfBath),this.setFeature(t,n,"Area",e.approxSquFeet/1e3),this.setFeature(t,n,"GarageSpaces",e.garageSpaces);var r=this.getHouseAgeFeatureName(e.ageBand);return this.setFeature(t,n,r,1),n}setFeature(e,t,n,r){t[e[n]]=r}getHouseAgeFeatureName(e){return this.houseAges.filter(t=>t.userName===e)[0].fname}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();function mW(e,t){return new q(n=>{const r=e.length;if(0===r)return void n.complete();const s=new Array(r);let a=0,i=0;for(let o=0;o<r;o++){const l=ce(e[o]);let u=!1;n.add(l.subscribe({next:e=>{u||(u=!0,i++),s[o]=e},error:e=>n.error(e),complete:()=>{a++,a!==r&&u||(i===r&&n.next(t?t.reduce((e,t,n)=>(e[t]=s[n],e),{}):s),n.complete())}}))}})}const gW=new ir("NgValueAccessor"),yW={provide:gW,useExisting:$e(()=>bW),multi:!0};let bW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"checked",e)}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti))},e.\u0275dir=xt({type:e,selectors:[["input","type","checkbox","formControlName",""],["input","type","checkbox","formControl",""],["input","type","checkbox","ngModel",""]],hostBindings:function(e,t){1&e&&Ga("change",function(e){return t.onChange(e.target.checked)})("blur",function(){return t.onTouched()})},features:[wi([yW])]}),e})();const xW={provide:gW,useExisting:$e(()=>wW),multi:!0},vW=new ir("CompositionEventMode");let wW=(()=>{class e{constructor(e,t,n){this._renderer=e,this._elementRef=t,this._compositionMode=n,this.onChange=e=>{},this.onTouched=()=>{},this._composing=!1,null==this._compositionMode&&(this._compositionMode=!function(){const e=ml()?ml().getUserAgent():"";return/android (\d+)/.test(e.toLowerCase())}())}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"value",null==e?"":e)}registerOnChange(e){this.onChange=e}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_handleInput(e){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(e)}_compositionStart(){this._composing=!0}_compositionEnd(e){this._composing=!1,this._compositionMode&&this.onChange(e)}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti),za(vW,8))},e.\u0275dir=xt({type:e,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(e,t){1&e&&Ga("input",function(e){return t._handleInput(e.target.value)})("blur",function(){return t.onTouched()})("compositionstart",function(){return t._compositionStart()})("compositionend",function(e){return t._compositionEnd(e.target.value)})},features:[wi([xW])]}),e})();function kW(e){return null==e||0===e.length}function IW(e){return null!=e&&"number"==typeof e.length}const NW=new ir("NgValidators"),CW=new ir("NgAsyncValidators"),SW=/^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;class _W{static min(e){return t=>{if(kW(t.value)||kW(e))return null;const n=parseFloat(t.value);return!isNaN(n)&&n<e?{min:{min:e,actual:t.value}}:null}}static max(e){return t=>{if(kW(t.value)||kW(e))return null;const n=parseFloat(t.value);return!isNaN(n)&&n>e?{max:{max:e,actual:t.value}}:null}}static required(e){return kW(e.value)?{required:!0}:null}static requiredTrue(e){return!0===e.value?null:{required:!0}}static email(e){return kW(e.value)||SW.test(e.value)?null:{email:!0}}static minLength(e){return t=>kW(t.value)||!IW(t.value)?null:t.value.length<e?{minlength:{requiredLength:e,actualLength:t.value.length}}:null}static maxLength(e){return t=>IW(t.value)&&t.value.length>e?{maxlength:{requiredLength:e,actualLength:t.value.length}}:null}static pattern(e){if(!e)return _W.nullValidator;let t,n;return"string"==typeof e?(n="","^"!==e.charAt(0)&&(n+="^"),n+=e,"$"!==e.charAt(e.length-1)&&(n+="$"),t=new RegExp(n)):(n=e.toString(),t=e),e=>{if(kW(e.value))return null;const r=e.value;return t.test(r)?null:{pattern:{requiredPattern:n,actualValue:r}}}}static nullValidator(e){return null}static compose(e){if(!e)return null;const t=e.filter(TW);return 0==t.length?null:function(e){return EW(AW(e,t))}}static composeAsync(e){if(!e)return null;const t=e.filter(TW);return 0==t.length?null:function(e){return function(...e){if(1===e.length){const t=e[0];if(L(t))return mW(t,null);if(z(t)&&Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);return mW(e.map(e=>t[e]),e)}}if("function"==typeof e[e.length-1]){const t=e.pop();return mW(e=1===e.length&&L(e[0])?e[0]:e,null).pipe(ee(e=>t(...e)))}return mW(e,null)}(AW(e,t).map($W)).pipe(ee(EW))}}}function TW(e){return null!=e}function $W(e){const t=Ha(e)?ce(e):e;return t,t}function EW(e){let t={};return e.forEach(e=>{t=null!=e?Object.assign(Object.assign({},t),e):t}),0===Object.keys(t).length?null:t}function AW(e,t){return t.map(t=>t(e))}function RW(e){return e.map(e=>function(e){return!e.validate}(e)?e:t=>e.validate(t))}function FW(e){return null!=e?_W.compose(RW(e)):null}function DW(e){return null!=e?_W.composeAsync(RW(e)):null}function OW(e,t){return null===e?[t]:Array.isArray(e)?[...e,t]:[e,t]}let MW=(()=>{class e{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(e){this._rawValidators=e||[],this._composedValidatorFn=FW(this._rawValidators)}_setAsyncValidators(e){this._rawAsyncValidators=e||[],this._composedAsyncValidatorFn=DW(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(e){this._onDestroyCallbacks.push(e)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(e=>e()),this._onDestroyCallbacks=[]}reset(e){this.control&&this.control.reset(e)}hasError(e,t){return!!this.control&&this.control.hasError(e,t)}getError(e,t){return this.control?this.control.getError(e,t):null}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=xt({type:e}),e})(),LW=(()=>{class e extends MW{get formDirective(){return null}get path(){return null}}return e.\u0275fac=function(t){return zW(t||e)},e.\u0275dir=xt({type:e,features:[Sa]}),e})();const zW=rr(LW);class PW extends MW{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}let BW=(()=>{class e extends class{constructor(e){this._cd=e}is(e){var t,n;return!!(null===(n=null===(t=this._cd)||void 0===t?void 0:t.control)||void 0===n?void 0:n[e])}}{constructor(e){super(e)}}return e.\u0275fac=function(t){return new(t||e)(za(PW,2))},e.\u0275dir=xt({type:e,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(e,t){2&e&&Ja("ng-untouched",t.is("untouched"))("ng-touched",t.is("touched"))("ng-pristine",t.is("pristine"))("ng-dirty",t.is("dirty"))("ng-valid",t.is("valid"))("ng-invalid",t.is("invalid"))("ng-pending",t.is("pending"))},features:[Sa]}),e})();const VW={provide:gW,useExisting:$e(()=>WW),multi:!0};let WW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"value",null==e?"":e)}registerOnChange(e){this.onChange=t=>{e(""==t?null:parseFloat(t))}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti))},e.\u0275dir=xt({type:e,selectors:[["input","type","number","formControlName",""],["input","type","number","formControl",""],["input","type","number","ngModel",""]],hostBindings:function(e,t){1&e&&Ga("input",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},features:[wi([VW])]}),e})();const UW={provide:gW,useExisting:$e(()=>GW),multi:!0};let HW=(()=>{class e{constructor(){this._accessors=[]}add(e,t){this._accessors.push([e,t])}remove(e){for(let t=this._accessors.length-1;t>=0;--t)if(this._accessors[t][1]===e)return void this._accessors.splice(t,1)}select(e){this._accessors.forEach(t=>{this._isSameGroup(t,e)&&t[1]!==e&&t[1].fireUncheck(e.value)})}_isSameGroup(e,t){return!!e[0].control&&e[0]._parent===t._control._parent&&e[1].name===t.name}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Me({token:e,factory:e.\u0275fac}),e})(),GW=(()=>{class e{constructor(e,t,n,r){this._renderer=e,this._elementRef=t,this._registry=n,this._injector=r,this.onChange=()=>{},this.onTouched=()=>{}}ngOnInit(){this._control=this._injector.get(PW),this._checkName(),this._registry.add(this._control,this)}ngOnDestroy(){this._registry.remove(this)}writeValue(e){this._state=e===this.value,this._renderer.setProperty(this._elementRef.nativeElement,"checked",this._state)}registerOnChange(e){this._fn=e,this.onChange=()=>{e(this.value),this._registry.select(this)}}fireUncheck(e){this.writeValue(e)}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_checkName(){!this.name&&this.formControlName&&(this.name=this.formControlName)}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti),za(HW),za(Na))},e.\u0275dir=xt({type:e,selectors:[["input","type","radio","formControlName",""],["input","type","radio","formControl",""],["input","type","radio","ngModel",""]],hostBindings:function(e,t){1&e&&Ga("change",function(){return t.onChange()})("blur",function(){return t.onTouched()})},inputs:{name:"name",formControlName:"formControlName",value:"value"},features:[wi([UW])]}),e})();const jW={provide:gW,useExisting:$e(()=>qW),multi:!0};let qW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}writeValue(e){this._renderer.setProperty(this._elementRef.nativeElement,"value",parseFloat(e))}registerOnChange(e){this.onChange=t=>{e(""==t?null:parseFloat(t))}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti))},e.\u0275dir=xt({type:e,selectors:[["input","type","range","formControlName",""],["input","type","range","formControl",""],["input","type","range","ngModel",""]],hostBindings:function(e,t){1&e&&Ga("change",function(e){return t.onChange(e.target.value)})("input",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},features:[wi([jW])]}),e})();const KW={provide:gW,useExisting:$e(()=>XW),multi:!0};let XW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this._optionMap=new Map,this._idCounter=0,this.onChange=e=>{},this.onTouched=()=>{},this._compareWith=Object.is}set compareWith(e){this._compareWith=e}writeValue(e){this.value=e;const t=this._getOptionId(e);null==t&&this._renderer.setProperty(this._elementRef.nativeElement,"selectedIndex",-1);const n=function(e,t){return null==e?`${t}`:(t&&"object"==typeof t&&(t="Object"),`${e}: ${t}`.slice(0,50))}(t,e);this._renderer.setProperty(this._elementRef.nativeElement,"value",n)}registerOnChange(e){this.onChange=t=>{this.value=this._getOptionValue(t),e(this.value)}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_registerOption(){return(this._idCounter++).toString()}_getOptionId(e){for(const t of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(t),e))return t;return null}_getOptionValue(e){const t=function(e){return e.split(":")[0]}(e);return this._optionMap.has(t)?this._optionMap.get(t):e}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti))},e.\u0275dir=xt({type:e,selectors:[["select","formControlName","",3,"multiple",""],["select","formControl","",3,"multiple",""],["select","ngModel","",3,"multiple",""]],hostBindings:function(e,t){1&e&&Ga("change",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},inputs:{compareWith:"compareWith"},features:[wi([KW])]}),e})();const ZW={provide:gW,useExisting:$e(()=>YW),multi:!0};let YW=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this._optionMap=new Map,this._idCounter=0,this.onChange=e=>{},this.onTouched=()=>{},this._compareWith=Object.is}set compareWith(e){this._compareWith=e}writeValue(e){let t;if(this.value=e,Array.isArray(e)){const n=e.map(e=>this._getOptionId(e));t=(e,t)=>{e._setSelected(n.indexOf(t.toString())>-1)}}else t=(e,t)=>{e._setSelected(!1)};this._optionMap.forEach(t)}registerOnChange(e){this.onChange=t=>{const n=[];if(void 0!==t.selectedOptions){const e=t.selectedOptions;for(let t=0;t<e.length;t++){const r=e.item(t),s=this._getOptionValue(r.value);n.push(s)}}else{const e=t.options;for(let t=0;t<e.length;t++){const r=e.item(t);if(r.selected){const e=this._getOptionValue(r.value);n.push(e)}}}this.value=n,e(n)}}registerOnTouched(e){this.onTouched=e}setDisabledState(e){this._renderer.setProperty(this._elementRef.nativeElement,"disabled",e)}_registerOption(e){const t=(this._idCounter++).toString();return this._optionMap.set(t,e),t}_getOptionId(e){for(const t of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(t)._value,e))return t;return null}_getOptionValue(e){const t=function(e){return e.split(":")[0]}(e);return this._optionMap.has(t)?this._optionMap.get(t)._value:e}}return e.\u0275fac=function(t){return new(t||e)(za(Ei),za(Ti))},e.\u0275dir=xt({type:e,selectors:[["select","multiple","","formControlName",""],["select","multiple","","formControl",""],["select","multiple","","ngModel",""]],hostBindings:function(e,t){1&e&&Ga("change",function(e){return t.onChange(e.target)})("blur",function(){return t.onTouched()})},inputs:{compareWith:"compareWith"},features:[wi([ZW])]}),e})();function JW(e,t){e.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(t)})}function QW(e,t){e._pendingDirty&&e.markAsDirty(),e.setValue(e._pendingValue,{emitModelToViewChange:!1}),t.viewToModelUpdate(e._pendingValue),e._pendingChange=!1}const eU=[bW,qW,WW,XW,YW,GW];function tU(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const nU="VALID",rU="INVALID",sU="PENDING",aU="DISABLED";function iU(e){return(cU(e)?e.validators:e)||null}function oU(e){return Array.isArray(e)?FW(e):e||null}function lU(e,t){return(cU(t)?t.asyncValidators:e)||null}function uU(e){return Array.isArray(e)?DW(e):e||null}function cU(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}class hU{constructor(e,t){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=e,this._rawAsyncValidators=t,this._composedValidatorFn=oU(this._rawValidators),this._composedAsyncValidatorFn=uU(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(e){this._rawValidators=this._composedValidatorFn=e}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(e){this._rawAsyncValidators=this._composedAsyncValidatorFn=e}get parent(){return this._parent}get valid(){return this.status===nU}get invalid(){return this.status===rU}get pending(){return this.status==sU}get disabled(){return this.status===aU}get enabled(){return this.status!==aU}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(e){this._rawValidators=e,this._composedValidatorFn=oU(e)}setAsyncValidators(e){this._rawAsyncValidators=e,this._composedAsyncValidatorFn=uU(e)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(e={}){this.touched=!0,this._parent&&!e.onlySelf&&this._parent.markAsTouched(e)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(e=>e.markAllAsTouched())}markAsUntouched(e={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(e=>{e.markAsUntouched({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}markAsDirty(e={}){this.pristine=!1,this._parent&&!e.onlySelf&&this._parent.markAsDirty(e)}markAsPristine(e={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(e=>{e.markAsPristine({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}markAsPending(e={}){this.status=sU,!1!==e.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!e.onlySelf&&this._parent.markAsPending(e)}disable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=aU,this.errors=null,this._forEachChild(t=>{t.disable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this._updateValue(),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!0))}enable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=nU,this._forEachChild(t=>{t.enable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!1))}_updateAncestors(e){this._parent&&!e.onlySelf&&(this._parent.updateValueAndValidity(e),e.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(e){this._parent=e}updateValueAndValidity(e={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),this.status!==nU&&this.status!==sU||this._runAsyncValidator(e.emitEvent)),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!e.onlySelf&&this._parent.updateValueAndValidity(e)}_updateTreeValidity(e={emitEvent:!0}){this._forEachChild(t=>t._updateTreeValidity(e)),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?aU:nU}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(e){if(this.asyncValidator){this.status=sU,this._hasOwnPendingAsyncValidator=!0;const t=$W(this.asyncValidator(this));this._asyncValidationSubscription=t.subscribe(t=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(t,{emitEvent:e})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(e,t={}){this.errors=e,this._updateControlsErrors(!1!==t.emitEvent)}get(e){return function(e,t,n){if(null==t)return null;if(Array.isArray(t)||(t=t.split(".")),Array.isArray(t)&&0===t.length)return null;let r=e;return t.forEach(e=>{r=r instanceof pU?r.controls.hasOwnProperty(e)?r.controls[e]:null:r instanceof fU&&r.at(e)||null}),r}(this,e)}getError(e,t){const n=t?this.get(t):this;return n&&n.errors?n.errors[e]:null}hasError(e,t){return!!this.getError(e,t)}get root(){let e=this;for(;e._parent;)e=e._parent;return e}_updateControlsErrors(e){this.status=this._calculateStatus(),e&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(e)}_initObservables(){this.valueChanges=new ko,this.statusChanges=new ko}_calculateStatus(){return this._allControlsDisabled()?aU:this.errors?rU:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(sU)?sU:this._anyControlsHaveStatus(rU)?rU:nU}_anyControlsHaveStatus(e){return this._anyControls(t=>t.status===e)}_anyControlsDirty(){return this._anyControls(e=>e.dirty)}_anyControlsTouched(){return this._anyControls(e=>e.touched)}_updatePristine(e={}){this.pristine=!this._anyControlsDirty(),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}_updateTouched(e={}){this.touched=this._anyControlsTouched(),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}_isBoxedValue(e){return"object"==typeof e&&null!==e&&2===Object.keys(e).length&&"value"in e&&"disabled"in e}_registerOnCollectionChange(e){this._onCollectionChange=e}_setUpdateStrategy(e){cU(e)&&null!=e.updateOn&&(this._updateOn=e.updateOn)}_parentMarkedDirty(e){return!e&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class dU extends hU{constructor(e=null,t,n){super(iU(t),lU(n,t)),this._onChange=[],this._applyFormState(e),this._setUpdateStrategy(t),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}setValue(e,t={}){this.value=this._pendingValue=e,this._onChange.length&&!1!==t.emitModelToViewChange&&this._onChange.forEach(e=>e(this.value,!1!==t.emitViewToModelChange)),this.updateValueAndValidity(t)}patchValue(e,t={}){this.setValue(e,t)}reset(e=null,t={}){this._applyFormState(e),this.markAsPristine(t),this.markAsUntouched(t),this.setValue(this.value,t),this._pendingChange=!1}_updateValue(){}_anyControls(e){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(e){this._onChange.push(e)}_unregisterOnChange(e){tU(this._onChange,e)}registerOnDisabledChange(e){this._onDisabledChange.push(e)}_unregisterOnDisabledChange(e){tU(this._onDisabledChange,e)}_forEachChild(e){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(e){this._isBoxedValue(e)?(this.value=this._pendingValue=e.value,e.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=e}}class pU extends hU{constructor(e,t,n){super(iU(t),lU(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}registerControl(e,t){return this.controls[e]?this.controls[e]:(this.controls[e]=t,t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange),t)}addControl(e,t){this.registerControl(e,t),this.updateValueAndValidity(),this._onCollectionChange()}removeControl(e){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],this.updateValueAndValidity(),this._onCollectionChange()}setControl(e,t){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],t&&this.registerControl(e,t),this.updateValueAndValidity(),this._onCollectionChange()}contains(e){return this.controls.hasOwnProperty(e)&&this.controls[e].enabled}setValue(e,t={}){this._checkAllValuesPresent(e),Object.keys(e).forEach(n=>{this._throwIfControlMissing(n),this.controls[n].setValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(Object.keys(e).forEach(n=>{this.controls[n]&&this.controls[n].patchValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e={},t={}){this._forEachChild((n,r)=>{n.reset(e[r],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this._reduceChildren({},(e,t,n)=>(e[n]=t instanceof dU?t.value:t.getRawValue(),e))}_syncPendingControls(){let e=this._reduceChildren(!1,(e,t)=>!!t._syncPendingControls()||e);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!Object.keys(this.controls).length)throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.controls[e])throw new Error(`Cannot find form control with name: ${e}.`)}_forEachChild(e){Object.keys(this.controls).forEach(t=>{const n=this.controls[t];n&&e(n,t)})}_setUpControls(){this._forEachChild(e=>{e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(e){for(const t of Object.keys(this.controls)){const n=this.controls[t];if(this.contains(t)&&e(n))return!0}return!1}_reduceValue(){return this._reduceChildren({},(e,t,n)=>((t.enabled||this.disabled)&&(e[n]=t.value),e))}_reduceChildren(e,t){let n=e;return this._forEachChild((e,r)=>{n=t(n,e,r)}),n}_allControlsDisabled(){for(const e of Object.keys(this.controls))if(this.controls[e].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control with name: '${n}'.`)})}}class fU extends hU{constructor(e,t,n){super(iU(t),lU(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}at(e){return this.controls[e]}push(e){this.controls.push(e),this._registerControl(e),this.updateValueAndValidity(),this._onCollectionChange()}insert(e,t){this.controls.splice(e,0,t),this._registerControl(t),this.updateValueAndValidity()}removeAt(e){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),this.updateValueAndValidity()}setControl(e,t){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),t&&(this.controls.splice(e,0,t),this._registerControl(t)),this.updateValueAndValidity(),this._onCollectionChange()}get length(){return this.controls.length}setValue(e,t={}){this._checkAllValuesPresent(e),e.forEach((e,n)=>{this._throwIfControlMissing(n),this.at(n).setValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(e.forEach((e,n)=>{this.at(n)&&this.at(n).patchValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e=[],t={}){this._forEachChild((n,r)=>{n.reset(e[r],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this.controls.map(e=>e instanceof dU?e.value:e.getRawValue())}clear(){this.controls.length<1||(this._forEachChild(e=>e._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity())}_syncPendingControls(){let e=this.controls.reduce((e,t)=>!!t._syncPendingControls()||e,!1);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!this.controls.length)throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.at(e))throw new Error(`Cannot find form control at index ${e}`)}_forEachChild(e){this.controls.forEach((t,n)=>{e(t,n)})}_updateValue(){this.value=this.controls.filter(e=>e.enabled||this.disabled).map(e=>e.value)}_anyControls(e){return this.controls.some(t=>t.enabled&&e(t))}_setUpControls(){this._forEachChild(e=>this._registerControl(e))}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control at index: ${n}.`)})}_allControlsDisabled(){for(const e of this.controls)if(e.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(e){e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)}}const mU={provide:PW,useExisting:$e(()=>yU)},gU=(()=>Promise.resolve(null))();let yU=(()=>{class e extends PW{constructor(e,t,n,r){super(),this.control=new dU,this._registered=!1,this.update=new ko,this._parent=e,this._setValidators(t),this._setAsyncValidators(n),this.valueAccessor=function(e,t){if(!t)return null;let n,r,s;return Array.isArray(t),t.forEach(e=>{var t;e.constructor===wW?n=e:(t=e,eU.some(e=>t.constructor===e)?r=e:s=e)}),s||r||n||null}(0,r)}ngOnChanges(e){this._checkForErrors(),this._registered||this._setUpControl(),"isDisabled"in e&&this._updateDisabled(e),function(e,t){if(!e.hasOwnProperty("model"))return!1;const n=e.model;return!!n.isFirstChange()||!Object.is(t,n.currentValue)}(e,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._parent?[...this._parent.path,this.name]:[this.name]}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(e){this.viewModel=e,this.update.emit(e)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!(!this.options||!this.options.standalone)}_setUpStandalone(){var e,t;(function(e,t,n){const r=function(e){return e._rawValidators}(e);null!==t.validator?e.setValidators(OW(r,t.validator)):"function"==typeof r&&e.setValidators([r]);const s=function(e){return e._rawAsyncValidators}(e);null!==t.asyncValidator?e.setAsyncValidators(OW(s,t.asyncValidator)):"function"==typeof s&&e.setAsyncValidators([s]);{const n=()=>e.updateValueAndValidity();JW(t._rawValidators,n),JW(t._rawAsyncValidators,n)}})(e=this.control,t=this),t.valueAccessor.writeValue(e.value),function(e,t){t.valueAccessor.registerOnChange(n=>{e._pendingValue=n,e._pendingChange=!0,e._pendingDirty=!0,"change"===e.updateOn&&QW(e,t)})}(e,t),function(e,t){const n=(e,n)=>{t.valueAccessor.writeValue(e),n&&t.viewToModelUpdate(e)};e.registerOnChange(n),t._registerOnDestroy(()=>{e._unregisterOnChange(n)})}(e,t),function(e,t){t.valueAccessor.registerOnTouched(()=>{e._pendingTouched=!0,"blur"===e.updateOn&&e._pendingChange&&QW(e,t),"submit"!==e.updateOn&&e.markAsTouched()})}(e,t),function(e,t){if(t.valueAccessor.setDisabledState){const n=e=>{t.valueAccessor.setDisabledState(e)};e.registerOnDisabledChange(n),t._registerOnDestroy(()=>{e._unregisterOnDisabledChange(n)})}}(e,t),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),this._isStandalone()}_updateValue(e){gU.then(()=>{this.control.setValue(e,{emitViewToModelChange:!1})})}_updateDisabled(e){const t=e.isDisabled.currentValue,n=""===t||t&&"false"!==t;gU.then(()=>{n&&!this.control.disabled?this.control.disable():!n&&this.control.disabled&&this.control.enable()})}}return e.\u0275fac=function(t){return new(t||e)(za(LW,9),za(NW,10),za(CW,10),za(gW,10))},e.\u0275dir=xt({type:e,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:["disabled","isDisabled"],model:["ngModel","model"],options:["ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[wi([mU]),Sa,Rt]}),e})();const bU={provide:NW,useExisting:$e(()=>xU),multi:!0};let xU=(()=>{class e{constructor(){this._validator=_W.nullValidator}ngOnChanges(e){"maxlength"in e&&(this._createValidator(),this._onChange&&this._onChange())}validate(e){return null!=this.maxlength?this._validator(e):null}registerOnValidatorChange(e){this._onChange=e}_createValidator(){this._validator=_W.maxLength("number"==typeof this.maxlength?this.maxlength:parseInt(this.maxlength,10))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=xt({type:e,selectors:[["","maxlength","","formControlName",""],["","maxlength","","formControl",""],["","maxlength","","ngModel",""]],hostVars:1,hostBindings:function(e,t){2&e&&Ma("maxlength",t.maxlength?t.maxlength:null)},inputs:{maxlength:"maxlength"},features:[wi([bU]),Rt]}),e})(),vU=(()=>{class e{}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)}}),e})(),wU=(()=>{class e{}return e.\u0275mod=yt({type:e}),e.\u0275inj=Le({factory:function(t){return new(t||e)},providers:[HW],imports:[vU]}),e})();function kU(e,t){if(1&e){const e=Ua();Va(0,"li",22),Ga("click",function(){en(e);const n=t.$implicit;return Ka().selectHouseType(n)}),Va(1,"span"),ri(2),Wa(),Wa()}if(2&e){const e=t.$implicit;Ja("selected",e===Ka().houseFeature.houseType),gs(2),si(e)}}function IU(e,t){if(1&e){const e=Ua();Va(0,"li",22),Ga("click",function(){en(e);const n=t.$implicit;return Ka().selectHouseZipCode(n)}),Va(1,"span"),ri(2),Wa(),Wa()}if(2&e){const e=t.$implicit;Ja("selected",e===Ka().houseFeature.area),gs(2),si(e)}}function NU(e,t){if(1&e){const e=Ua();Va(0,"li",22),Ga("click",function(){en(e);const n=t.$implicit;return Ka().selectHouseAgeBand(n)}),Va(1,"span"),ri(2),Wa(),Wa()}if(2&e){const e=t.$implicit;Ja("selected",e===Ka().houseFeature.ageBand),gs(2),si(e)}}let CU=(()=>{class e{constructor(e){this.priceService=e,this.houseFeature={area:"60076",houseType:"SFH",ageBand:"Recent",rooms:7,bedRooms:3,bedRoomsBsmt:0,fullBath:2,halfBath:0,approxSquFeet:1200,garageType:"attached",garageSpaces:2,parkingSpaces:0},this.houseTypes=[],this.houseZipCodes=[],this.houseAgeBands=[]}ngOnInit(){this.getFeatureTypes()}setHousePrice(e){console.log("val",e)}refreshPrice(){this.housePrice=this.tempPrice}getPredictedPrice(){var e=this.priceService.getPrice(this.houseFeature);this.housePrice=e}selectHouseType(e){this.houseFeature.houseType=e}selectHouseZipCode(e){this.houseFeature.area=e}selectHouseAgeBand(e){this.houseFeature.ageBand=e}getFeatureTypes(){this.houseTypes=this.priceService.houseTypes,this.houseZipCodes=this.priceService.houseZipCodes,this.houseAgeBands=this.priceService.houseAgeBands}}return e.\u0275fac=function(t){return new(t||e)(za(fW))},e.\u0275cmp=pt({type:e,selectors:[["app-houseprice"]],decls:73,vars:15,consts:[[1,"row","mb-3"],[1,"col-6","themed-grid-col"],[1,"dropend"],["type","button","id","dropendMenuButton","data-bs-toggle","dropdown","aria-expanded","false",1,"btn","btn-secondary","dropdown-toggle"],["aria-labelledby","dropendMenuButton",1,"dropdown-menu"],["class","dropdown-item",3,"selected","click",4,"ngFor","ngForOf"],["maxlength","10","size","10","placeholder","SFH",3,"ngModel","ngModelChange"],["type","button","id","dropendZipButton","data-bs-toggle","dropdown","aria-expanded","false",1,"btn","btn-secondary","dropdown-toggle"],["aria-labelledby","dropendZipButton",1,"dropdown-menu"],["maxlength","10","size","10","placeholder","60076",3,"ngModel","ngModelChange"],["type","button","id","dropendAgeButton","data-bs-toggle","dropdown","aria-expanded","false",1,"btn","btn-secondary","dropdown-toggle"],["aria-labelledby","dropendAgeButton",1,"dropdown-menu"],["maxlength","10","size","10","placeholder","Recent",3,"ngModel","ngModelChange"],["maxlength","2","size","4","placeholder","7",3,"ngModel","ngModelChange"],["maxlength","2","size","4","placeholder","3",3,"ngModel","ngModelChange"],["maxlength","2","size","4","placeholder","0.0",3,"ngModel","ngModelChange"],["maxlength","2","size","4","placeholder","2",3,"ngModel","ngModelChange"],["maxlength","2","size","4","placeholder","0",3,"ngModel","ngModelChange"],["maxlength","5","size","10","placeholder","1400",3,"ngModel","ngModelChange"],["md-button","",3,"click"],[1,"col-6","themed-grid-co"],["maxlength","8","size","10","placeholder","000000000.0",3,"ngModel","ngModelChange"],[1,"dropdown-item",3,"click"]],template:function(e,t){1&e&&(Va(0,"div",0),Va(1,"div",1),Va(2,"div",2),Va(3,"button",3),ri(4," Type "),Wa(),Va(5,"ul",4),La(6,kU,3,3,"li",5),Wa(),Wa(),Wa(),Va(7,"div",1),Va(8,"input",6),Ga("ngModelChange",function(e){return t.houseFeature.houseType=e}),Wa(),Wa(),Wa(),Va(9,"div",0),Va(10,"div",1),Va(11,"div",2),Va(12,"button",7),ri(13," Zip "),Wa(),Va(14,"ul",8),La(15,IU,3,3,"li",5),Wa(),Wa(),Wa(),Va(16,"div",1),Va(17,"input",9),Ga("ngModelChange",function(e){return t.houseFeature.area=e}),Wa(),Wa(),Wa(),Va(18,"div",0),Va(19,"div",1),Va(20,"div",2),Va(21,"button",10),ri(22," Age "),Wa(),Va(23,"ul",11),La(24,NU,3,3,"li",5),Wa(),Wa(),Wa(),Va(25,"div",1),Va(26,"input",12),Ga("ngModelChange",function(e){return t.houseFeature.ageBand=e}),Wa(),Wa(),Wa(),Va(27,"div",0),Va(28,"div",1),ri(29,"Rooms"),Wa(),Va(30,"div",1),Va(31,"input",13),Ga("ngModelChange",function(e){return t.houseFeature.rooms=e}),Wa(),Wa(),Wa(),Va(32,"div",0),Va(33,"div",1),ri(34,"Beds"),Wa(),Va(35,"div",1),Va(36,"input",14),Ga("ngModelChange",function(e){return t.houseFeature.bedRooms=e}),Wa(),Wa(),Wa(),Va(37,"div",0),Va(38,"div",1),ri(39,"Bsmnt Beds"),Wa(),Va(40,"div",1),Va(41,"input",15),Ga("ngModelChange",function(e){return t.houseFeature.bedRoomsBsmt=e}),Wa(),Wa(),Wa(),Va(42,"div",0),Va(43,"div",1),ri(44,"Full baths"),Wa(),Va(45,"div",1),Va(46,"input",16),Ga("ngModelChange",function(e){return t.houseFeature.fullBath=e}),Wa(),Wa(),Wa(),Va(47,"div",0),Va(48,"div",1),ri(49,"Half baths"),Wa(),Va(50,"div",1),Va(51,"input",17),Ga("ngModelChange",function(e){return t.houseFeature.halfBath=e}),Wa(),Wa(),Wa(),Va(52,"div",0),Va(53,"div",1),ri(54,"Square feet"),Wa(),Va(55,"div",1),Va(56,"input",18),Ga("ngModelChange",function(e){return t.houseFeature.approxSquFeet=e}),Wa(),Wa(),Wa(),Va(57,"div",0),Va(58,"div",1),ri(59,"Garage spaces"),Wa(),Va(60,"div",1),Va(61,"input",16),Ga("ngModelChange",function(e){return t.houseFeature.garageSpaces=e}),Wa(),Wa(),Wa(),Va(62,"div",0),Va(63,"div",1),ri(64,"Parking spaces"),Wa(),Va(65,"div",1),Va(66,"input",17),Ga("ngModelChange",function(e){return t.houseFeature.parkingSpaces=e}),Wa(),Wa(),Wa(),Va(67,"div",0),Va(68,"div",1),Va(69,"button",19),Ga("click",function(){return t.getPredictedPrice()}),ri(70,"Get Price"),Wa(),Wa(),Va(71,"div",20),Va(72,"input",21),Ga("ngModelChange",function(e){return t.housePrice=e}),Wa(),Wa(),Wa()),2&e&&(gs(6),Pa("ngForOf",t.houseTypes),gs(2),Pa("ngModel",t.houseFeature.houseType),gs(7),Pa("ngForOf",t.houseZipCodes),gs(2),Pa("ngModel",t.houseFeature.area),gs(7),Pa("ngForOf",t.houseAgeBands),gs(2),Pa("ngModel",t.houseFeature.ageBand),gs(5),Pa("ngModel",t.houseFeature.rooms),gs(5),Pa("ngModel",t.houseFeature.bedRooms),gs(5),Pa("ngModel",t.houseFeature.bedRoomsBsmt),gs(5),Pa("ngModel",t.houseFeature.fullBath),gs(5),Pa("ngModel",t.houseFeature.halfBath),gs(5),Pa("ngModel",t.houseFeature.approxSquFeet),gs(5),Pa("ngModel",t.houseFeature.garageSpaces),gs(5),Pa("ngModel",t.houseFeature.parkingSpaces),gs(6),Pa("ngModel",t.housePrice))},directives:[wl,wW,xU,BW,yU],styles:[""]}),e})(),SU=(()=>{class e{constructor(){this.title="housePrice"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=pt({type:e,selectors:[["app-root"]],decls:1,vars:0,template:function(e,t){1&e&&(Va(0,"app-houseprice",undefined,undefined),Wa())},directives:[CU],styles:[""]}),e})(),_U=(()=>{class e{}return e.\u0275mod=yt({type:e,bootstrap:[SU]}),e.\u0275inj=Le({factory:function(t){return new(t||e)},providers:[],imports:[[Yl,wU]]}),e})();(function(){if(rl)throw new Error("Cannot enable prod mode after platform setup.");nl=!1})(),Xl().bootstrapModule(_U).catch(e=>console.error(e))},zn8P:function(e,t){function n(e){return Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="zn8P"}},[[0,0]]]);